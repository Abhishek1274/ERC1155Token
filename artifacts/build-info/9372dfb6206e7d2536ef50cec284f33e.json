{"id":"9372dfb6206e7d2536ef50cec284f33e","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev ERC1155 token with storage based token URI management.\n * Inspired by the ERC721URIStorage extension\n */\nabstract contract ERC1155URIStorage is ERC1155 {\n    using Strings for uint256;\n\n    // Optional base URI\n    string private _baseURI = \"\";\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the concatenation of the `_baseURI`\n     * and the token-specific uri if the latter is set\n     *\n     * This enables the following behaviors:\n     *\n     * - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n     *   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n     *   is empty per default);\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n     *   which in most cases will contain `ERC1155._uri`;\n     *\n     * - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n     *   uri value set, then the result is empty.\n     */\n    function uri(uint256 tokenId) public view virtual override returns (string memory) {\n        string memory tokenURI = _tokenURIs[tokenId];\n\n        // If token URI is set, concatenate base URI and tokenURI (via string.concat).\n        return bytes(tokenURI).length > 0 ? string.concat(_baseURI, tokenURI) : super.uri(tokenId);\n    }\n\n    /**\n     * @dev Sets `tokenURI` as the tokenURI of `tokenId`.\n     */\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\n        _tokenURIs[tokenId] = tokenURI;\n        emit URI(uri(tokenId), tokenId);\n    }\n\n    /**\n     * @dev Sets `baseURI` as the `_baseURI` for all tokens\n     */\n    function _setBaseURI(string memory baseURI) internal virtual {\n        _baseURI = baseURI;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/ERC1155Token.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract ERC1155Token is ERC1155, Ownable, ERC1155Burnable {\r\n    string public baseTokenURI;\r\n    constructor() ERC1155(\"\") Ownable(msg.sender) {}\r\n\r\n    function setURI(string memory newuri) public onlyOwner {\r\n        baseTokenURI=newuri;\r\n        _setURI(baseTokenURI);\r\n    }\r\n    function uri(uint256 _id) public view override returns (string memory) {\r\n        \r\n        return string.concat(baseTokenURI,Strings.toString(_id),\".json\");\r\n    }\r\n\r\n    function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyOwner{\r\n        _mint(account, id, amount, data);\r\n        uri(id);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public onlyOwner{\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1889],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1890,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1889,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1889],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[1867],"Context":[1889],"ERC1155":[1335],"ERC165":[2278],"IERC1155":[1458],"IERC1155Errors":[284],"IERC1155MetadataURI":[1684],"IERC1155Receiver":[1500],"IERC165":[2290]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1459,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1501,"src":"176:56:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"184:16:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1685,"src":"233:73:2","symbolAliases":[{"foreign":{"id":291,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"241:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1890,"src":"307:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"315:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2279,"src":"356:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"364:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"373:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1868,"src":"426:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"434:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":285,"src":"473:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"481:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["756:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1889,"src":"756:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"756:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["765:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2278,"src":"765:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"765:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["773:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1458,"src":"773:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"773:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["783:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1684,"src":"783:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"783:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["804:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"804:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"804:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"542:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335,284,1684,1458,2278,2290,1889],"name":"ERC1155","nameLocation":"745:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["831:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1867,"src":"831:6:2"},"nodeType":"UsingForDirective","src":"825:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"842:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["863:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1867,"src":"863:6:2"},"nodeType":"UsingForDirective","src":"857:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"874:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"957:9:2","nodeType":"VariableDeclaration","scope":1335,"src":"890:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"906:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"890:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"928:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"912:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1043:18:2","nodeType":"VariableDeclaration","scope":1335,"src":"973:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"989:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"973:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1016:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1000:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1028:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1197:4:2","nodeType":"VariableDeclaration","scope":1335,"src":"1182:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1182:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1283:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1301:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"1293:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1293:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1293:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1208:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1277:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1263:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1263:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1262:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1283:0:2"},"scope":1335,"src":"1251:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2277,2289],"body":{"id":375,"nodeType":"Block","src":"1488:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1517:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1537:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1458_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1458_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1532:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1458","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1547:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1532:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1517:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1574:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1594:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1684_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1684_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1589:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1684","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1615:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1589:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1574:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1517:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1666:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1642:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1335_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1648:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2277,"src":"1642:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1517:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1498:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1319:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1389:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1456:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2278,"src":"1456:6:2"},{"id":351,"name":"IERC165","nameLocations":["1464:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2290,"src":"1464:7:2"}],"src":"1447:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1414:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1407:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1407:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1406:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1482:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1482:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1481:6:2"},"scope":1335,"src":"1380:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1683],"body":{"id":386,"nodeType":"Block","src":"2159:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2176:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2169:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1691:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2093:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2097:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2096:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2144:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2144:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2143:15:2"},"scope":1335,"src":"2084:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1396],"body":{"id":403,"nodeType":"Block","src":"2333:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2350:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2360:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2364:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2343:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2193:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2256:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2274:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2266:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2291:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2283:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2265:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2324:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2323:9:2"},"scope":1335,"src":"2247:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1409],"body":{"id":473,"nodeType":"Block","src":"2678:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2692:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2701:6:2","memberName":"length","nodeType":"MemberAccess","src":"2692:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2711:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2715:6:2","memberName":"length","nodeType":"MemberAccess","src":"2711:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2692:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2688:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2723:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2770:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2774:6:2","memberName":"length","nodeType":"MemberAccess","src":"2770:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2782:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2791:6:2","memberName":"length","nodeType":"MemberAccess","src":"2782:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2744:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2737:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2836:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2819:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2819:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2866:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:6:2","memberName":"length","nodeType":"MemberAccess","src":"2866:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2852:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2856:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2856:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2819:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2939:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2953:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2967:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2953:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3010:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2982:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2991:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"2982:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3037:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3014:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"3014:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2972:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2953:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2953:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2913:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2917:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2926:6:2","memberName":"length","nodeType":"MemberAccess","src":"2917:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2913:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2906:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2898:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2910:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2898:13:2"},"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2934:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2936:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2934:3:2"},"nodeType":"ForStatement","src":"2893:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3068:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3061:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2385:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2545:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2586:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2569:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2569:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2621:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2604:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2604:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2559:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2660:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2660:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2659:18:2"},"scope":1335,"src":"2536:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1417],"body":{"id":489,"nodeType":"Block","src":"3231:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3260:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3274:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3284:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3241:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3241:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3094:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3165:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3191:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3183:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3206:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3201:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3201:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3182:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3231:0:2"},"scope":1335,"src":"3156:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1427],"body":{"id":506,"nodeType":"Block","src":"3463:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3480:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3499:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3473:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3306:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3376:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3401:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3393:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3418:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3410:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3392:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3457:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3456:6:2"},"scope":1335,"src":"3367:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1441],"body":{"id":550,"nodeType":"Block","src":"3704:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3722:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3714:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3731:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3714:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3757:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3765:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3757:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3775:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3793:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3799:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3776:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3776:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3757:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3753:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3808:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3858:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3866:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3829:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3822:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3909:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3915:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3919:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3923:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3930:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"3891:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3891:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3891:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3530:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3600:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3625:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3617:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3639:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3631:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3631:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3651:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3643:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3663:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3655:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3655:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3683:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3670:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3670:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3616:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3704:0:2"},"scope":1335,"src":"3591:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1457],"body":{"id":596,"nodeType":"Block","src":"4198:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4216:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4208:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"4225:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4225:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4208:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4251:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4259:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4251:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4269:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4287:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4293:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4270:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4251:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4247:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4302:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4352:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4323:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4316:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4408:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4414:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4418:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4423:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4431:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4385:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4385:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3948:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4023:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4062:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4054:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4054:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4084:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4076:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4076:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4113:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4096:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4096:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4143:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4126:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4126:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4126:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4172:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4159:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4159:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4044:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4198:0:2"},"scope":1335,"src":"4014:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5251:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5265:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:6:2","memberName":"length","nodeType":"MemberAccess","src":"5265:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5279:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5286:6:2","memberName":"length","nodeType":"MemberAccess","src":"5279:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5265:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5261:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5294:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5341:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5345:6:2","memberName":"length","nodeType":"MemberAccess","src":"5341:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5353:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5360:6:2","memberName":"length","nodeType":"MemberAccess","src":"5353:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5315:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5308:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5396:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5388:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"5407:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5388:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5471:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5493:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5485:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5485:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5521:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5498:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5502:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"5498:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5485:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5545:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5537:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5537:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5579:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5553:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5560:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"5553:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5553:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5537:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5600:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5616:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5608:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5608:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5600:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5596:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5620:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5646:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5638:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5638:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5660:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5670:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5660:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5660:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5638:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5701:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5715:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5701:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5697:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5722:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5778:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5784:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5797:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5804:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5751:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5751:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5744:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5843:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5942:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5952:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5942:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5956:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5942:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5964:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5978:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5964:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5942:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5942:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6034:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6048:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6040:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6040:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6034:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6030:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6052:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6070:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6080:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6084:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6070:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6091:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6070:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6070:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5450:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5454:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5458:6:2","memberName":"length","nodeType":"MemberAccess","src":"5454:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5450:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5443:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5435:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5447:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5435:13:2"},"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5466:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5468:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5466:3:2"},"nodeType":"ForStatement","src":"5430:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6135:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6139:6:2","memberName":"length","nodeType":"MemberAccess","src":"6135:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6149:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6135:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6343:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6376:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6386:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6392:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6396:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6401:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"6362:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6362:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6357:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6131:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6152:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6174:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6166:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6166:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6179:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6183:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"6179:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6179:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6166:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6226:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6218:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6260:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6234:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6241:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"6234:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6234:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6218:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6296:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6306:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6312:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6316:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6320:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6281:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6276:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4449:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5153:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5169:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5161:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5161:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5183:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5175:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5175:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5204:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5187:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5187:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5226:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5209:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5209:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5160:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5251:0:2"},"scope":1335,"src":"5144:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"7195:499:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7213:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7219:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7223:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7228:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7205:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7205:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7249:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7263:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7255:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7255:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7255:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7249:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":824,"nodeType":"IfStatement","src":"7245:443:2","trueBody":{"id":823,"nodeType":"Block","src":"7267:421:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7289:8:2","nodeType":"VariableDeclaration","scope":823,"src":"7281:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7281:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7300:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7300:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7281:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7330:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7334:6:2","memberName":"length","nodeType":"MemberAccess","src":"7330:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7344:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7330:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":821,"nodeType":"Block","src":"7571:107:2","statements":[{"expression":{"arguments":[{"id":813,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7625:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7635:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7641:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7645:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":817,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7650:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7658:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":812,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7589:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7589:74:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"7589:74:2"}]},"id":822,"nodeType":"IfStatement","src":"7326:352:2","trueBody":{"id":811,"nodeType":"Block","src":"7347:218:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7373:2:2","nodeType":"VariableDeclaration","scope":811,"src":"7365:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7365:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7401:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7378:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7382:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"7378:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7378:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7365:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7429:5:2","nodeType":"VariableDeclaration","scope":811,"src":"7421:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7437:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7444:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"7437:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7421:44:2"},{"expression":{"arguments":[{"id":803,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7514:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7524:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7530:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7534:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7538:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":808,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7545:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":802,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7483:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"7483:67:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6431:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7013:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7057:4:2","nodeType":"VariableDeclaration","scope":826,"src":"7049:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7049:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7079:2:2","nodeType":"VariableDeclaration","scope":826,"src":"7071:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7071:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7108:3:2","nodeType":"VariableDeclaration","scope":826,"src":"7091:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7091:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7091:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7138:6:2","nodeType":"VariableDeclaration","scope":826,"src":"7121:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7121:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7167:4:2","nodeType":"VariableDeclaration","scope":826,"src":"7154:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7154:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7039:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7195:0:2"},"scope":1335,"src":"7004:690:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"8259:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8287:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{}}},"id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8279:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8273:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":854,"nodeType":"IfStatement","src":"8269:88:2","trueBody":{"id":853,"nodeType":"Block","src":"8291:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8343:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8335:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"8335:7:2","typeDescriptions":{}}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8335:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":846,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8312:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"RevertStatement","src":"8305:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":855,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8370:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8378:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"8378:7:2","typeDescriptions":{}}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8378:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8370:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"8366:88:2","trueBody":{"id":868,"nodeType":"Block","src":"8390:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8440:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8432:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"8432:7:2","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8432:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8411:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"RevertStatement","src":"8404:39:2"}]}},{"assignments":[874,877],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"ids","nameLocation":"8481:3:2","nodeType":"VariableDeclaration","scope":891,"src":"8464:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8464:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":873,"nodeType":"ArrayTypeName","src":"8464:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"values","nameLocation":"8503:6:2","nodeType":"VariableDeclaration","scope":891,"src":"8486:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8486:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":876,"nodeType":"ArrayTypeName","src":"8486:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":882,"initialValue":{"arguments":[{"id":879,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8532:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8536:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8513:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8513:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8463:79:2"},{"expression":{"arguments":[{"id":884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8579:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8585:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"8589:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":887,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8594:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":888,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8602:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":883,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8552:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8552:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"8552:55:2"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"7700:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8160:17:2","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"from","nameLocation":"8186:4:2","nodeType":"VariableDeclaration","scope":892,"src":"8178:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"8178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"8200:2:2","nodeType":"VariableDeclaration","scope":892,"src":"8192:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"8192:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"id","nameLocation":"8212:2:2","nodeType":"VariableDeclaration","scope":892,"src":"8204:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8204:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"value","nameLocation":"8224:5:2","nodeType":"VariableDeclaration","scope":892,"src":"8216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"data","nameLocation":"8244:4:2","nodeType":"VariableDeclaration","scope":892,"src":"8231:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"8231:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8177:72:2"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"8259:0:2"},"scope":1335,"src":"8151:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"9194:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9208:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9222:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9214:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"9214:7:2","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9208:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":922,"nodeType":"IfStatement","src":"9204:88:2","trueBody":{"id":921,"nodeType":"Block","src":"9226:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9278:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9270:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"9270:7:2","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9270:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9247:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9247:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"RevertStatement","src":"9240:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9305:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9321:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9313:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"9313:7:2","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9313:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9305:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":937,"nodeType":"IfStatement","src":"9301:88:2","trueBody":{"id":936,"nodeType":"Block","src":"9325:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9375:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9367:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"9367:7:2","typeDescriptions":{}}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9367:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":929,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9346:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9346:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"RevertStatement","src":"9339:39:2"}]}},{"expression":{"arguments":[{"id":939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9425:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9431:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9435:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":942,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9440:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":943,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9448:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":938,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9398:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"9398:55:2"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"8620:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9024:22:2","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"from","nameLocation":"9064:4:2","nodeType":"VariableDeclaration","scope":947,"src":"9056:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9056:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"to","nameLocation":"9086:2:2","nodeType":"VariableDeclaration","scope":947,"src":"9078:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"9078:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"ids","nameLocation":"9115:3:2","nodeType":"VariableDeclaration","scope":947,"src":"9098:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":899,"nodeType":"ArrayTypeName","src":"9098:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"values","nameLocation":"9145:6:2","nodeType":"VariableDeclaration","scope":947,"src":"9128:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ArrayTypeName","src":"9128:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"data","nameLocation":"9174:4:2","nodeType":"VariableDeclaration","scope":947,"src":"9161:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"9161:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9046:138:2"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"9194:0:2"},"scope":1335,"src":"9015:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":957,"nodeType":"Block","src":"10338:30:2","statements":[{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10348:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":954,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10355:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10348:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":956,"nodeType":"ExpressionStatement","src":"10348:13:2"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"9466:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10291:7:2","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"newuri","nameLocation":"10313:6:2","nodeType":"VariableDeclaration","scope":958,"src":"10299:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"10299:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10298:22:2"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"10338:0:2"},"scope":1335,"src":"10282:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"10828:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10842:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10848:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"10848:7:2","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10842:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"IfStatement","src":"10838:88:2","trueBody":{"id":983,"nodeType":"Block","src":"10860:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"10904:7:2","typeDescriptions":{}}},"id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":976,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10881:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10881:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"RevertStatement","src":"10874:41:2"}]}},{"assignments":[989,992],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"ids","nameLocation":"10953:3:2","nodeType":"VariableDeclaration","scope":1009,"src":"10936:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10936:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ArrayTypeName","src":"10936:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"values","nameLocation":"10975:6:2","nodeType":"VariableDeclaration","scope":1009,"src":"10958:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"10958:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ArrayTypeName","src":"10958:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":997,"initialValue":{"arguments":[{"id":994,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"11004:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11008:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10985:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10985:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10935:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11051:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11051:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11051:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"11063:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"11067:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1005,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"11072:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1006,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11080:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":998,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11024:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11024:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"11024:61:2"}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"10374:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10755:5:2","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"to","nameLocation":"10769:2:2","nodeType":"VariableDeclaration","scope":1010,"src":"10761:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"id","nameLocation":"10781:2:2","nodeType":"VariableDeclaration","scope":1010,"src":"10773:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"10773:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"value","nameLocation":"10793:5:2","nodeType":"VariableDeclaration","scope":1010,"src":"10785:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"10785:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"data","nameLocation":"10813:4:2","nodeType":"VariableDeclaration","scope":1010,"src":"10800:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"10800:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10760:58:2"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"10828:0:2"},"scope":1335,"src":"10746:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"11630:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11644:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11658:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"11650:7:2","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11650:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11644:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"11640:88:2","trueBody":{"id":1037,"nodeType":"Block","src":"11662:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11714:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11706:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"11706:7:2","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11706:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1030,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11683:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11683:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"RevertStatement","src":"11676:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11764:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"11764:7:2","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11764:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11776:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"11780:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1046,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11785:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1047,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"11793:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1039,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11737:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"11737:61:2"}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"11098:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11532:10:2","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"to","nameLocation":"11551:2:2","nodeType":"VariableDeclaration","scope":1051,"src":"11543:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"11543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"ids","nameLocation":"11572:3:2","nodeType":"VariableDeclaration","scope":1051,"src":"11555:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11555:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ArrayTypeName","src":"11555:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"values","nameLocation":"11594:6:2","nodeType":"VariableDeclaration","scope":1051,"src":"11577:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1018,"nodeType":"ArrayTypeName","src":"11577:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"data","nameLocation":"11615:4:2","nodeType":"VariableDeclaration","scope":1051,"src":"11602:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"11602:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11542:78:2"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"11630:0:2"},"scope":1335,"src":"11523:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"12164:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"12178:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12194:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12186:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"12186:7:2","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12186:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12178:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1075,"nodeType":"IfStatement","src":"12174:88:2","trueBody":{"id":1074,"nodeType":"Block","src":"12198:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12248:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"12240:7:2","typeDescriptions":{}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12240:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1067,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12219:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12219:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"RevertStatement","src":"12212:39:2"}]}},{"assignments":[1080,1083],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"ids","nameLocation":"12289:3:2","nodeType":"VariableDeclaration","scope":1100,"src":"12272:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"12272:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1079,"nodeType":"ArrayTypeName","src":"12272:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"values","nameLocation":"12311:6:2","nodeType":"VariableDeclaration","scope":1100,"src":"12294:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"12294:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ArrayTypeName","src":"12294:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1088,"initialValue":{"arguments":[{"id":1085,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"12340:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12344:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1084,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"12321:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12321:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12271:79:2"},{"expression":{"arguments":[{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"12387:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12401:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12393:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"12393:7:2","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12393:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12405:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1096,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"12410:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12418:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1089,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12360:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12360:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"12360:61:2"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"11811:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12108:5:2","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"from","nameLocation":"12122:4:2","nodeType":"VariableDeclaration","scope":1101,"src":"12114:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"12114:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"id","nameLocation":"12136:2:2","nodeType":"VariableDeclaration","scope":1101,"src":"12128:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"value","nameLocation":"12148:5:2","nodeType":"VariableDeclaration","scope":1101,"src":"12140:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"12140:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12113:41:2"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"12164:0:2"},"scope":1335,"src":"12099:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"12874:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12888:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12904:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12896:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"12896:7:2","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12896:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12888:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"nodeType":"IfStatement","src":"12884:88:2","trueBody":{"id":1126,"nodeType":"Block","src":"12908:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12958:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12950:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"12950:7:2","typeDescriptions":{}}},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12950:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1119,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12929:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12929:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"RevertStatement","src":"12922:39:2"}]}},{"expression":{"arguments":[{"id":1129,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"13008:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13014:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"13014:7:2","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13014:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"13026:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1135,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"13031:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1128,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12981:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"12981:61:2"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"12434:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12793:10:2","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"from","nameLocation":"12812:4:2","nodeType":"VariableDeclaration","scope":1140,"src":"12804:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"12804:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"ids","nameLocation":"12835:3:2","nodeType":"VariableDeclaration","scope":1140,"src":"12818:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ArrayTypeName","src":"12818:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"values","nameLocation":"12857:6:2","nodeType":"VariableDeclaration","scope":1140,"src":"12840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"12840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ArrayTypeName","src":"12840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12803:61:2"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"12874:0:2"},"scope":1335,"src":"12784:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1179,"nodeType":"Block","src":"13361:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13375:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13395:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"13387:7:2","typeDescriptions":{}}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13387:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13375:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"13371:94:2","trueBody":{"id":1163,"nodeType":"Block","src":"13399:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:2","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13443:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1156,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13420:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13420:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"RevertStatement","src":"13413:41:2"}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1165,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13474:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1168,"indexExpression":{"id":1166,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13493:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13474:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1169,"indexExpression":{"id":1167,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13500:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13474:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13512:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13474:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1172,"nodeType":"ExpressionStatement","src":"13474:46:2"},{"eventCall":{"arguments":[{"id":1174,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13550:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13557:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13567:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1173,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"13535:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13535:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"EmitStatement","src":"13530:46:2"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"13055:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13277:18:2","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"owner","nameLocation":"13304:5:2","nodeType":"VariableDeclaration","scope":1180,"src":"13296:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"13296:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"operator","nameLocation":"13319:8:2","nodeType":"VariableDeclaration","scope":1180,"src":"13311:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"13311:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"approved","nameLocation":"13334:8:2","nodeType":"VariableDeclaration","scope":1180,"src":"13329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"13329:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13295:48:2"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"13361:0:2"},"scope":1335,"src":"13268:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"13953:782:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"13967:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13970:4:2","memberName":"code","nodeType":"MemberAccess","src":"13967:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13975:6:2","memberName":"length","nodeType":"MemberAccess","src":"13967:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13984:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13967:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"IfStatement","src":"13963:766:2","trueBody":{"id":1245,"nodeType":"Block","src":"13987:742:2","statements":[{"clauses":[{"block":{"id":1225,"nodeType":"Block","src":"14103:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"14125:8:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1215,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"14137:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14154:17:2","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1481,"src":"14137:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14172:8:2","memberName":"selector","nodeType":"MemberAccess","src":"14137:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14125:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"14121:174:2","trueBody":{"id":1223,"nodeType":"Block","src":"14182:113:2","statements":[{"errorCall":{"arguments":[{"id":1220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"14273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1219,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"14250:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"RevertStatement","src":"14243:33:2"}]}}]},"errorName":"","id":1226,"nodeType":"TryCatchClause","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"response","nameLocation":"14093:8:2","nodeType":"VariableDeclaration","scope":1226,"src":"14086:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1211,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14086:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14085:17:2"},"src":"14077:232:2"},{"block":{"id":1242,"nodeType":"Block","src":"14338:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1230,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"14360:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14367:6:2","memberName":"length","nodeType":"MemberAccess","src":"14360:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14377:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1240,"nodeType":"Block","src":"14515:190:2","statements":[{"AST":{"nodeType":"YulBlock","src":"14601:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14638:2:2","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14642:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14634:3:2"},"nodeType":"YulFunctionCall","src":"14634:15:2"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14657:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:2"},"nodeType":"YulFunctionCall","src":"14651:13:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14627:6:2"},"nodeType":"YulFunctionCall","src":"14627:38:2"},"nodeType":"YulExpressionStatement","src":"14627:38:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14642:6:2","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14657:6:2","valueSize":1}],"id":1239,"nodeType":"InlineAssembly","src":"14592:95:2"}]},"id":1241,"nodeType":"IfStatement","src":"14356:349:2","trueBody":{"id":1238,"nodeType":"Block","src":"14380:129:2","statements":[{"errorCall":{"arguments":[{"id":1235,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"14487:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1234,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"14464:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14464:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"RevertStatement","src":"14457:33:2"}]}}]},"errorName":"","id":1243,"nodeType":"TryCatchClause","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"reason","nameLocation":"14330:6:2","nodeType":"VariableDeclaration","scope":1243,"src":"14317:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"14317:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14316:21:2"},"src":"14310:409:2"}],"externalCall":{"arguments":[{"id":1205,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"14044:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"14054:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"14060:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"14064:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14071:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"14022:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"14005:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1500","typeString":"contract IERC1155Receiver"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14026:17:2","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1481,"src":"14005:38:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:71:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1244,"nodeType":"TryStatement","src":"14001:718:2"}]}}]},"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"13589:167:2","text":" @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"13770:30:2","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"operator","nameLocation":"13818:8:2","nodeType":"VariableDeclaration","scope":1248,"src":"13810:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"13810:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"from","nameLocation":"13844:4:2","nodeType":"VariableDeclaration","scope":1248,"src":"13836:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"13836:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"to","nameLocation":"13866:2:2","nodeType":"VariableDeclaration","scope":1248,"src":"13858:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"13858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"id","nameLocation":"13886:2:2","nodeType":"VariableDeclaration","scope":1248,"src":"13878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13878:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"value","nameLocation":"13906:5:2","nodeType":"VariableDeclaration","scope":1248,"src":"13898:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"13898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"data","nameLocation":"13934:4:2","nodeType":"VariableDeclaration","scope":1248,"src":"13921:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"13921:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13800:144:2"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"13953:0:2"},"scope":1335,"src":"13761:974:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1317,"nodeType":"Block","src":"15140:824:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15154:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15157:4:2","memberName":"code","nodeType":"MemberAccess","src":"15154:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15162:6:2","memberName":"length","nodeType":"MemberAccess","src":"15154:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15171:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15154:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1316,"nodeType":"IfStatement","src":"15150:808:2","trueBody":{"id":1315,"nodeType":"Block","src":"15174:784:2","statements":[{"clauses":[{"block":{"id":1295,"nodeType":"Block","src":"15327:211:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15349:8:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1285,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"15361:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15378:22:2","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"15361:39:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15401:8:2","memberName":"selector","nodeType":"MemberAccess","src":"15361:48:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15349:60:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1294,"nodeType":"IfStatement","src":"15345:179:2","trueBody":{"id":1293,"nodeType":"Block","src":"15411:113:2","statements":[{"errorCall":{"arguments":[{"id":1290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15502:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1289,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"15479:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15479:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"RevertStatement","src":"15472:33:2"}]}}]},"errorName":"","id":1296,"nodeType":"TryCatchClause","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"response","nameLocation":"15304:8:2","nodeType":"VariableDeclaration","scope":1296,"src":"15297:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1281,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15297:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15279:47:2"},"src":"15271:267:2"},{"block":{"id":1312,"nodeType":"Block","src":"15567:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1300,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"15589:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15596:6:2","memberName":"length","nodeType":"MemberAccess","src":"15589:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15606:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15589:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1310,"nodeType":"Block","src":"15744:190:2","statements":[{"AST":{"nodeType":"YulBlock","src":"15830:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15867:2:2","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"15871:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15863:3:2"},"nodeType":"YulFunctionCall","src":"15863:15:2"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"15886:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15880:5:2"},"nodeType":"YulFunctionCall","src":"15880:13:2"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15856:6:2"},"nodeType":"YulFunctionCall","src":"15856:38:2"},"nodeType":"YulExpressionStatement","src":"15856:38:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1298,"isOffset":false,"isSlot":false,"src":"15871:6:2","valueSize":1},{"declaration":1298,"isOffset":false,"isSlot":false,"src":"15886:6:2","valueSize":1}],"id":1309,"nodeType":"InlineAssembly","src":"15821:95:2"}]},"id":1311,"nodeType":"IfStatement","src":"15585:349:2","trueBody":{"id":1308,"nodeType":"Block","src":"15609:129:2","statements":[{"errorCall":{"arguments":[{"id":1305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15716:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1304,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"15693:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15693:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"RevertStatement","src":"15686:33:2"}]}}]},"errorName":"","id":1313,"nodeType":"TryCatchClause","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"reason","nameLocation":"15559:6:2","nodeType":"VariableDeclaration","scope":1313,"src":"15546:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1297,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15545:21:2"},"src":"15539:409:2"}],"externalCall":{"arguments":[{"id":1275,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"15236:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1276,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"15246:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1277,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15252:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1278,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"15257:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1279,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"15265:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1272,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15209:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1271,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"15192:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1500","typeString":"contract IERC1155Receiver"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15213:22:2","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"15192:43:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:78:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1314,"nodeType":"TryStatement","src":"15188:760:2"}]}}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"14741:177:2","text":" @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"14932:35:2","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"operator","nameLocation":"14985:8:2","nodeType":"VariableDeclaration","scope":1318,"src":"14977:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"14977:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"from","nameLocation":"15011:4:2","nodeType":"VariableDeclaration","scope":1318,"src":"15003:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"15003:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"to","nameLocation":"15033:2:2","nodeType":"VariableDeclaration","scope":1318,"src":"15025:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"15025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"ids","nameLocation":"15062:3:2","nodeType":"VariableDeclaration","scope":1318,"src":"15045:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"15045:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1257,"nodeType":"ArrayTypeName","src":"15045:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"values","nameLocation":"15092:6:2","nodeType":"VariableDeclaration","scope":1318,"src":"15075:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"15075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1260,"nodeType":"ArrayTypeName","src":"15075:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"data","nameLocation":"15121:4:2","nodeType":"VariableDeclaration","scope":1318,"src":"15108:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"15108:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:164:2"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"15140:0:2"},"scope":1335,"src":"14923:1041:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1333,"nodeType":"Block","src":"16238:691:2","statements":[{"AST":{"nodeType":"YulBlock","src":"16300:623:2","statements":[{"nodeType":"YulAssignment","src":"16358:21:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16374:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16368:5:2"},"nodeType":"YulFunctionCall","src":"16368:11:2"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"16358:6:2"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"16436:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16444:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16429:6:2"},"nodeType":"YulFunctionCall","src":"16429:17:2"},"nodeType":"YulExpressionStatement","src":"16429:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"16567:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16575:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16563:3:2"},"nodeType":"YulFunctionCall","src":"16563:17:2"},{"name":"element1","nodeType":"YulIdentifier","src":"16582:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16556:6:2"},"nodeType":"YulFunctionCall","src":"16556:35:2"},"nodeType":"YulExpressionStatement","src":"16556:35:2"},{"nodeType":"YulAssignment","src":"16682:27:2","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"16696:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16704:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16692:3:2"},"nodeType":"YulFunctionCall","src":"16692:17:2"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"16682:6:2"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"16729:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16737:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16722:6:2"},"nodeType":"YulFunctionCall","src":"16722:17:2"},"nodeType":"YulExpressionStatement","src":"16722:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"16763:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16771:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16759:3:2"},"nodeType":"YulFunctionCall","src":"16759:17:2"},{"name":"element2","nodeType":"YulIdentifier","src":"16778:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16752:6:2"},"nodeType":"YulFunctionCall","src":"16752:35:2"},"nodeType":"YulExpressionStatement","src":"16752:35:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16889:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"16899:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"16907:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16895:3:2"},"nodeType":"YulFunctionCall","src":"16895:17:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16882:6:2"},"nodeType":"YulFunctionCall","src":"16882:31:2"},"nodeType":"YulExpressionStatement","src":"16882:31:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16358:6:2","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16436:6:2","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16567:6:2","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16696:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16682:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16729:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16763:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16899:6:2","valueSize":1},{"declaration":1321,"isOffset":false,"isSlot":false,"src":"16582:8:2","valueSize":1},{"declaration":1323,"isOffset":false,"isSlot":false,"src":"16778:8:2","valueSize":1}],"id":1332,"nodeType":"InlineAssembly","src":"16291:632:2"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"15970:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"16089:18:2","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"element1","nameLocation":"16125:8:2","nodeType":"VariableDeclaration","scope":1334,"src":"16117:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"16117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"element2","nameLocation":"16151:8:2","nodeType":"VariableDeclaration","scope":1334,"src":"16143:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"16143:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16107:58:2"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"array1","nameLocation":"16205:6:2","nodeType":"VariableDeclaration","scope":1334,"src":"16188:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"16188:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1326,"nodeType":"ArrayTypeName","src":"16188:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"array2","nameLocation":"16230:6:2","nodeType":"VariableDeclaration","scope":1334,"src":"16213:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"16213:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ArrayTypeName","src":"16213:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16187:50:2"},"scope":1335,"src":"16080:849:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1336,"src":"727:16204:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1355,1370,1379,1386]}],"src":"109:16823:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1458],"IERC165":[2290]},"id":1459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1459,"sourceUnit":2291,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1338,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1341,"name":"IERC165","nameLocations":["358:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2290,"src":"358:7:3"},"id":1342,"nodeType":"InheritanceSpecifier","src":"358:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"200:135:3","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."},"fullyImplemented":false,"id":1458,"linearizedBaseContracts":[1458,2290],"name":"IERC1155","nameLocation":"346:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"372:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1355,"name":"TransferSingle","nameLocation":"508:14:3","nodeType":"EventDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"539:8:3","nodeType":"VariableDeclaration","scope":1355,"src":"523:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"565:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"549:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"587:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"571:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"599:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"591:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"611:5:3","nodeType":"VariableDeclaration","scope":1355,"src":"603:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:95:3"},"src":"502:116:3"},{"anonymous":false,"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"624:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1370,"name":"TransferBatch","nameLocation":"779:13:3","nodeType":"EventDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"818:8:3","nodeType":"VariableDeclaration","scope":1370,"src":"802:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"852:4:3","nodeType":"VariableDeclaration","scope":1370,"src":"836:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"882:2:3","nodeType":"VariableDeclaration","scope":1370,"src":"866:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1365,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"904:3:3","nodeType":"VariableDeclaration","scope":1370,"src":"894:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1364,"nodeType":"ArrayTypeName","src":"894:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1368,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"927:6:3","nodeType":"VariableDeclaration","scope":1370,"src":"917:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1367,"nodeType":"ArrayTypeName","src":"917:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"792:147:3"},"src":"773:167:3"},{"anonymous":false,"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"946:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1379,"name":"ApprovalForAll","nameLocation":"1104:14:3","nodeType":"EventDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1135:7:3","nodeType":"VariableDeclaration","scope":1379,"src":"1119:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1160:8:3","nodeType":"VariableDeclaration","scope":1379,"src":"1144:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1175:8:3","nodeType":"VariableDeclaration","scope":1379,"src":"1170:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1376,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1118:66:3"},"src":"1098:87:3"},{"anonymous":false,"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"1191:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1386,"name":"URI","nameLocation":"1545:3:3","nodeType":"EventDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1556:5:3","nodeType":"VariableDeclaration","scope":1386,"src":"1549:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1381,"name":"string","nodeType":"ElementaryTypeName","src":"1549:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1384,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1579:2:3","nodeType":"VariableDeclaration","scope":1386,"src":"1563:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:34:3"},"src":"1539:44:3"},{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1589:172:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1396,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1775:9:3","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"account","nameLocation":"1793:7:3","nodeType":"VariableDeclaration","scope":1396,"src":"1785:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"id","nameLocation":"1810:2:3","nodeType":"VariableDeclaration","scope":1396,"src":"1802:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1784:29:3"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"1837:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1836:9:3"},"scope":1458,"src":"1766:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"1852:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2054:14:3","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"accounts","nameLocation":"2097:8:3","nodeType":"VariableDeclaration","scope":1409,"src":"2078:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"2078:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1399,"nodeType":"ArrayTypeName","src":"2078:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"ids","nameLocation":"2134:3:3","nodeType":"VariableDeclaration","scope":1409,"src":"2115:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ArrayTypeName","src":"2115:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2068:75:3"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"2167:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2167:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1406,"nodeType":"ArrayTypeName","src":"2167:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2166:18:3"},"scope":1458,"src":"2045:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"2191:248:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2453:17:3","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"operator","nameLocation":"2479:8:3","nodeType":"VariableDeclaration","scope":1417,"src":"2471:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"approved","nameLocation":"2494:8:3","nodeType":"VariableDeclaration","scope":1417,"src":"2489:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"2489:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2470:33:3"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"2512:0:3"},"scope":1458,"src":"2444:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"2519:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1427,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2668:16:3","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"account","nameLocation":"2693:7:3","nodeType":"VariableDeclaration","scope":1427,"src":"2685:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"operator","nameLocation":"2710:8:3","nodeType":"VariableDeclaration","scope":1427,"src":"2702:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2684:35:3"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"2743:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"2743:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2742:6:3"},"scope":1458,"src":"2659:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"2755:910:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1441,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3679:16:3","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"from","nameLocation":"3704:4:3","nodeType":"VariableDeclaration","scope":1441,"src":"3696:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"3696:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"to","nameLocation":"3718:2:3","nodeType":"VariableDeclaration","scope":1441,"src":"3710:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"3710:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"id","nameLocation":"3730:2:3","nodeType":"VariableDeclaration","scope":1441,"src":"3722:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"value","nameLocation":"3742:5:3","nodeType":"VariableDeclaration","scope":1441,"src":"3734:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3734:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"data","nameLocation":"3764:4:3","nodeType":"VariableDeclaration","scope":1441,"src":"3749:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"3749:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3695:74:3"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"3778:0:3"},"scope":1458,"src":"3670:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"3785:744:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1457,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4543:21:3","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"from","nameLocation":"4582:4:3","nodeType":"VariableDeclaration","scope":1457,"src":"4574:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"4574:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"to","nameLocation":"4604:2:3","nodeType":"VariableDeclaration","scope":1457,"src":"4596:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"ids","nameLocation":"4635:3:3","nodeType":"VariableDeclaration","scope":1457,"src":"4616:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ArrayTypeName","src":"4616:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"values","nameLocation":"4667:6:3","nodeType":"VariableDeclaration","scope":1457,"src":"4648:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"4648:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ArrayTypeName","src":"4648:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"data","nameLocation":"4698:4:3","nodeType":"VariableDeclaration","scope":1457,"src":"4683:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1453,"name":"bytes","nodeType":"ElementaryTypeName","src":"4683:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:144:3"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"4717:0:3"},"scope":1458,"src":"4534:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1459,"src":"336:4384:3","usedErrors":[],"usedEvents":[1355,1370,1379,1386]}],"src":"110:4611:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1500],"IERC165":[2290]},"id":1501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1501,"sourceUnit":2291,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1461,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1464,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2290,"src":"357:7:4"},"id":1465,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1500,"linearizedBaseContracts":[1500,2290],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"371:826:4","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1481,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1211:17:4","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"operator","nameLocation":"1246:8:4","nodeType":"VariableDeclaration","scope":1481,"src":"1238:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"from","nameLocation":"1272:4:4","nodeType":"VariableDeclaration","scope":1481,"src":"1264:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"id","nameLocation":"1294:2:4","nodeType":"VariableDeclaration","scope":1481,"src":"1286:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"value","nameLocation":"1314:5:4","nodeType":"VariableDeclaration","scope":1481,"src":"1306:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"1344:4:4","nodeType":"VariableDeclaration","scope":1481,"src":"1329:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1228:126:4"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1481,"src":"1373:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1478,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1373:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1372:8:4"},"scope":1500,"src":"1202:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"1387:994:4","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1499,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2395:22:4","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"operator","nameLocation":"2435:8:4","nodeType":"VariableDeclaration","scope":1499,"src":"2427:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"from","nameLocation":"2461:4:4","nodeType":"VariableDeclaration","scope":1499,"src":"2453:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"ids","nameLocation":"2494:3:4","nodeType":"VariableDeclaration","scope":1499,"src":"2475:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1488,"nodeType":"ArrayTypeName","src":"2475:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"values","nameLocation":"2526:6:4","nodeType":"VariableDeclaration","scope":1499,"src":"2507:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1491,"nodeType":"ArrayTypeName","src":"2507:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"data","nameLocation":"2557:4:4","nodeType":"VariableDeclaration","scope":1499,"src":"2542:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2417:150:4"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"2586:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1496,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2586:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2585:8:4"},"scope":1500,"src":"2386:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1501,"src":"327:2269:4","usedErrors":[],"usedEvents":[]}],"src":"118:2479:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"ERC1155":[1335],"ERC1155Burnable":[1580]},"id":1581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":1336,"src":"154:39:5","symbolAliases":[{"foreign":{"id":1503,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"162:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1506,"name":"ERC1155","nameLocations":["380:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"380:7:5"},"id":1507,"nodeType":"InheritanceSpecifier","src":"380:7:5"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"195:147:5","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."},"fullyImplemented":true,"id":1580,"linearizedBaseContracts":[1580,1335,284,1684,1458,2278,2290,1889],"name":"ERC1155Burnable","nameLocation":"361:15:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1541,"nodeType":"Block","src":"467:208:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1516,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"481:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1517,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"492:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"481:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"508:40:5","subExpression":{"arguments":[{"id":1521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"526:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1522,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"535:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"535:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1520,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"509:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"509:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"481:67:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"nodeType":"IfStatement","src":"477:156:5","trueBody":{"id":1533,"nodeType":"Block","src":"550:83:5","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1528,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"600:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"614:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1527,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"571:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"RevertStatement","src":"564:58:5"}]}},{"expression":{"arguments":[{"id":1536,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"649:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"658:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"662:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1535,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"643:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"643:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"643:25:5"}]},"functionSelector":"f5298aca","id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"403:4:5","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"account","nameLocation":"416:7:5","nodeType":"VariableDeclaration","scope":1542,"src":"408:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"id","nameLocation":"433:2:5","nodeType":"VariableDeclaration","scope":1542,"src":"425:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"value","nameLocation":"445:5:5","nodeType":"VariableDeclaration","scope":1542,"src":"437:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:44:5"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"467:0:5"},"scope":1580,"src":"394:281:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1578,"nodeType":"Block","src":"779:215:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"793:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1554,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"804:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"804:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"793:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"820:40:5","subExpression":{"arguments":[{"id":1558,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"838:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1559,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"847:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1557,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"821:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"793:67:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1571,"nodeType":"IfStatement","src":"789:156:5","trueBody":{"id":1570,"nodeType":"Block","src":"862:83:5","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1565,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"912:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1564,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"883:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"RevertStatement","src":"876:58:5"}]}},{"expression":{"arguments":[{"id":1573,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"966:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"975:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1575,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"980:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1572,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"955:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"ExpressionStatement","src":"955:32:5"}]},"functionSelector":"6b20c454","id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"690:9:5","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"account","nameLocation":"708:7:5","nodeType":"VariableDeclaration","scope":1579,"src":"700:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"ids","nameLocation":"734:3:5","nodeType":"VariableDeclaration","scope":1579,"src":"717:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ArrayTypeName","src":"717:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"values","nameLocation":"756:6:5","nodeType":"VariableDeclaration","scope":1579,"src":"739:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"739:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ArrayTypeName","src":"739:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"699:64:5"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"779:0:5"},"scope":1580,"src":"681:313:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1581,"src":"343:653:5","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1355,1370,1379,1386]}],"src":"128:869:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol","exportedSymbols":{"ERC1155":[1335],"ERC1155URIStorage":[1668],"Strings":[2254]},"id":1669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1582,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"130:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1669,"sourceUnit":2255,"src":"156:51:6","symbolAliases":[{"foreign":{"id":1583,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"164:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1669,"sourceUnit":1336,"src":"208:39:6","symbolAliases":[{"foreign":{"id":1585,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"216:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1588,"name":"ERC1155","nameLocations":["405:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"405:7:6"},"id":1589,"nodeType":"InheritanceSpecifier","src":"405:7:6"}],"canonicalName":"ERC1155URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1587,"nodeType":"StructuredDocumentation","src":"249:116:6","text":" @dev ERC1155 token with storage based token URI management.\n Inspired by the ERC721URIStorage extension"},"fullyImplemented":true,"id":1668,"linearizedBaseContracts":[1668,1335,284,1684,1458,2278,2290,1889],"name":"ERC1155URIStorage","nameLocation":"384:17:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1592,"libraryName":{"id":1590,"name":"Strings","nameLocations":["425:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2254,"src":"425:7:6"},"nodeType":"UsingForDirective","src":"419:26:6","typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1595,"mutability":"mutable","name":"_baseURI","nameLocation":"491:8:6","nodeType":"VariableDeclaration","scope":1668,"src":"476:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1593,"name":"string","nodeType":"ElementaryTypeName","src":"476:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"502:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"visibility":"private"},{"constant":false,"id":1599,"mutability":"mutable","name":"_tokenURIs","nameLocation":"593:10:6","nodeType":"VariableDeclaration","scope":1668,"src":"550:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1598,"keyName":"tokenId","keyNameLocation":"566:7:6","keyType":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"550:34:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"577:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[387],"body":{"id":1633,"nodeType":"Block","src":"1414:249:6","statements":[{"assignments":[1609],"declarations":[{"constant":false,"id":1609,"mutability":"mutable","name":"tokenURI","nameLocation":"1438:8:6","nodeType":"VariableDeclaration","scope":1633,"src":"1424:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1608,"name":"string","nodeType":"ElementaryTypeName","src":"1424:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1613,"initialValue":{"baseExpression":{"id":1610,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1449:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1612,"indexExpression":{"id":1611,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1460:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1449:19:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1424:44:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1616,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1579:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1573:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1614,"name":"bytes","nodeType":"ElementaryTypeName","src":"1573:5:6","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1589:6:6","memberName":"length","nodeType":"MemberAccess","src":"1573:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1573:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1629,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1648:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1627,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1638:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155URIStorage_$1668_$","typeString":"type(contract super ERC1155URIStorage)"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1644:3:6","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":387,"src":"1638:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1573:83:6","trueExpression":{"arguments":[{"id":1624,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"1616:8:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":1625,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1626:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1602:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1621,"name":"string","nodeType":"ElementaryTypeName","src":"1602:6:6","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1609:6:6","memberName":"concat","nodeType":"MemberAccess","src":"1602:13:6","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1607,"id":1632,"nodeType":"Return","src":"1566:90:6"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"610:716:6","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the concatenation of the `_baseURI`\n and the token-specific uri if the latter is set\n This enables the following behaviors:\n - if `_tokenURIs[tokenId]` is set, then the result is the concatenation\n   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`\n   is empty per default);\n - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`\n   which in most cases will contain `ERC1155._uri`;\n - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a\n   uri value set, then the result is empty."},"functionSelector":"0e89341c","id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1340:3:6","nodeType":"FunctionDefinition","overrides":{"id":1604,"nodeType":"OverrideSpecifier","overrides":[],"src":"1381:8:6"},"parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"tokenId","nameLocation":"1352:7:6","nodeType":"VariableDeclaration","scope":1634,"src":"1344:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1343:17:6"},"returnParameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1634,"src":"1399:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1605,"name":"string","nodeType":"ElementaryTypeName","src":"1399:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1398:15:6"},"scope":1668,"src":"1331:332:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1655,"nodeType":"Block","src":"1818:88:6","statements":[{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1642,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1828:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1644,"indexExpression":{"id":1643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1828:19:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1645,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"1850:8:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1828:30:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1647,"nodeType":"ExpressionStatement","src":"1828:30:6"},{"eventCall":{"arguments":[{"arguments":[{"id":1650,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[1634],"referencedDeclaration":1634,"src":"1877:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1877:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1652,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1891:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1873:3:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1654,"nodeType":"EmitStatement","src":"1868:31:6"}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"1669:69:6","text":" @dev Sets `tokenURI` as the tokenURI of `tokenId`."},"id":1656,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"1752:7:6","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"tokenId","nameLocation":"1768:7:6","nodeType":"VariableDeclaration","scope":1656,"src":"1760:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"tokenURI","nameLocation":"1791:8:6","nodeType":"VariableDeclaration","scope":1656,"src":"1777:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1638,"name":"string","nodeType":"ElementaryTypeName","src":"1777:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1759:41:6"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"1818:0:6"},"scope":1668,"src":"1743:163:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"2049:35:6","statements":[{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1662,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"2059:8:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1663,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"2070:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2059:18:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1665,"nodeType":"ExpressionStatement","src":"2059:18:6"}]},"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"1912:71:6","text":" @dev Sets `baseURI` as the `_baseURI` for all tokens"},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"_setBaseURI","nameLocation":"1997:11:6","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"baseURI","nameLocation":"2023:7:6","nodeType":"VariableDeclaration","scope":1667,"src":"2009:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:23:6"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"2049:0:6"},"scope":1668,"src":"1988:96:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1669,"src":"366:1720:6","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1355,1370,1379,1386]}],"src":"130:1957:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1458],"IERC1155MetadataURI":[1684]},"id":1685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1670,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1685,"sourceUnit":1459,"src":"158:41:7","symbolAliases":[{"foreign":{"id":1671,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"166:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1674,"name":"IERC1155","nameLocations":["399:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1458,"src":"399:8:7"},"id":1675,"nodeType":"InheritanceSpecifier","src":"399:8:7"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"201:164:7","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."},"fullyImplemented":false,"id":1684,"linearizedBaseContracts":[1684,1458,2290],"name":"IERC1155MetadataURI","nameLocation":"376:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"414:192:7","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1683,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:7","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"id","nameLocation":"632:2:7","nodeType":"VariableDeclaration","scope":1683,"src":"624:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:7"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1683,"src":"659:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1680,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:7"},"scope":1684,"src":"611:63:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1685,"src":"366:310:7","usedErrors":[],"usedEvents":[1355,1370,1379,1386]}],"src":"132:545:7"},"id":7},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[1867],"Math":[3344],"StorageSlot":[1999]},"id":1868,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1868,"sourceUnit":2000,"src":"126:46:8","symbolAliases":[{"foreign":{"id":1687,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"134:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1868,"sourceUnit":3345,"src":"173:37:8","symbolAliases":[{"foreign":{"id":1689,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"181:4:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"212:63:8","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":1867,"linearizedBaseContracts":[1867],"name":"Arrays","nameLocation":"284:6:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1694,"libraryName":{"id":1692,"name":"StorageSlot","nameLocations":["303:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1999,"src":"303:11:8"},"nodeType":"UsingForDirective","src":"297:30:8","typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"319:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1776,"nodeType":"Block","src":"843:834:8","statements":[{"assignments":[1706],"declarations":[{"constant":false,"id":1706,"mutability":"mutable","name":"low","nameLocation":"861:3:8","nodeType":"VariableDeclaration","scope":1776,"src":"853:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1708,"initialValue":{"hexValue":"30","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"867:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"853:15:8"},{"assignments":[1710],"declarations":[{"constant":false,"id":1710,"mutability":"mutable","name":"high","nameLocation":"886:4:8","nodeType":"VariableDeclaration","scope":1776,"src":"878:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1713,"initialValue":{"expression":{"id":1711,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"893:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"899:6:8","memberName":"length","nodeType":"MemberAccess","src":"893:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"878:27:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"920:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"920:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"IfStatement","src":"916:48:8","trueBody":{"id":1719,"nodeType":"Block","src":"931:33:8","statements":[{"expression":{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1704,"id":1718,"nodeType":"Return","src":"945:8:8"}]}},{"body":{"id":1752,"nodeType":"Block","src":"993:423:8","statements":[{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"mid","nameLocation":"1015:3:8","nodeType":"VariableDeclaration","scope":1752,"src":"1007:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1731,"initialValue":{"arguments":[{"id":1728,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1034:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1729,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1039:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1726,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"1021:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3344_$","typeString":"type(library Math)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:7:8","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":2518,"src":"1021:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1021:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1007:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1733,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1282:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":1734,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"1289:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[1798,1819,1840],"referencedDeclaration":1840,"src":"1269:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1904_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1294:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"1269:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1737,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"1302:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1269:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1750,"nodeType":"Block","src":"1360:46:8","statements":[{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1744,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1378:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"1384:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1384:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1378:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"nodeType":"ExpressionStatement","src":"1378:13:8"}]},"id":1751,"nodeType":"IfStatement","src":"1265:141:8","trueBody":{"id":1743,"nodeType":"Block","src":"1311:43:8","statements":[{"expression":{"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1739,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1329:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1740,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"1336:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1742,"nodeType":"ExpressionStatement","src":"1329:10:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"981:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1722,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"987:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"981:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1753,"nodeType":"WhileStatement","src":"974:442:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1533:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1533:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1758,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"1557:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1564:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[1798,1819,1840],"referencedDeclaration":1840,"src":"1544:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1904_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1573:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"1544:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1764,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"1582:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1544:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1533:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1774,"nodeType":"Block","src":"1636:35:8","statements":[{"expression":{"id":1772,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1657:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1704,"id":1773,"nodeType":"Return","src":"1650:10:8"}]},"id":1775,"nodeType":"IfStatement","src":"1529:142:8","trueBody":{"id":1771,"nodeType":"Block","src":"1591:39:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"1612:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1704,"id":1770,"nodeType":"Return","src":"1605:14:8"}]}}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"333:407:8","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"754:14:8","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"array","nameLocation":"787:5:8","nodeType":"VariableDeclaration","scope":1777,"src":"769:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ArrayTypeName","src":"769:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"element","nameLocation":"802:7:8","nodeType":"VariableDeclaration","scope":1777,"src":"794:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"768:42:8"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"834:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"833:9:8"},"scope":1867,"src":"745:932:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1797,"nodeType":"Block","src":"1993:459:8","statements":[{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"slot","nameLocation":"2011:4:8","nodeType":"VariableDeclaration","scope":1797,"src":"2003:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1791,"nodeType":"VariableDeclarationStatement","src":"2003:12:8"},{"AST":{"nodeType":"YulBlock","src":"2316:92:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:8","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"2340:8:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2330:6:8"},"nodeType":"YulFunctionCall","src":"2330:19:8"},"nodeType":"YulExpressionStatement","src":"2330:19:8"},{"nodeType":"YulAssignment","src":"2362:36:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2384:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2387:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2374:9:8"},"nodeType":"YulFunctionCall","src":"2374:18:8"},{"name":"pos","nodeType":"YulIdentifier","src":"2394:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2370:3:8"},"nodeType":"YulFunctionCall","src":"2370:28:8"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"2362:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1781,"isOffset":false,"isSlot":true,"src":"2340:8:8","suffix":"slot","valueSize":1},{"declaration":1783,"isOffset":false,"isSlot":false,"src":"2394:3:8","valueSize":1},{"declaration":1790,"isOffset":false,"isSlot":false,"src":"2362:4:8","valueSize":1}],"id":1792,"nodeType":"InlineAssembly","src":"2307:101:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1793,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"2424:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2429:14:8","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1921,"src":"2424:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1895_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1895_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":1788,"id":1796,"nodeType":"Return","src":"2417:28:8"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"1683:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"1888:12:8","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"arr","nameLocation":"1919:3:8","nodeType":"VariableDeclaration","scope":1798,"src":"1901:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1780,"nodeType":"ArrayTypeName","src":"1901:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"pos","nameLocation":"1932:3:8","nodeType":"VariableDeclaration","scope":1798,"src":"1924:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:36:8"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"1960:31:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1895_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1786,"nodeType":"UserDefinedTypeName","pathNode":{"id":1785,"name":"StorageSlot.AddressSlot","nameLocations":["1960:11:8","1972:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1895,"src":"1960:23:8"},"referencedDeclaration":1895,"src":"1960:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1895_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:33:8"},"scope":1867,"src":"1879:573:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1818,"nodeType":"Block","src":"2768:459:8","statements":[{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"slot","nameLocation":"2786:4:8","nodeType":"VariableDeclaration","scope":1818,"src":"2778:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2778:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1812,"nodeType":"VariableDeclarationStatement","src":"2778:12:8"},{"AST":{"nodeType":"YulBlock","src":"3091:92:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3112:1:8","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"3115:8:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3105:6:8"},"nodeType":"YulFunctionCall","src":"3105:19:8"},"nodeType":"YulExpressionStatement","src":"3105:19:8"},{"nodeType":"YulAssignment","src":"3137:36:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3159:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3162:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3149:9:8"},"nodeType":"YulFunctionCall","src":"3149:18:8"},{"name":"pos","nodeType":"YulIdentifier","src":"3169:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3145:3:8"},"nodeType":"YulFunctionCall","src":"3145:28:8"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"3137:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1802,"isOffset":false,"isSlot":true,"src":"3115:8:8","suffix":"slot","valueSize":1},{"declaration":1804,"isOffset":false,"isSlot":false,"src":"3169:3:8","valueSize":1},{"declaration":1811,"isOffset":false,"isSlot":false,"src":"3137:4:8","valueSize":1}],"id":1813,"nodeType":"InlineAssembly","src":"3082:101:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1814,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"3199:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:14:8","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":1943,"src":"3199:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1901_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1901_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":1809,"id":1817,"nodeType":"Return","src":"3192:28:8"}]},"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"2458:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1819,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"2663:12:8","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"arr","nameLocation":"2694:3:8","nodeType":"VariableDeclaration","scope":1819,"src":"2676:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2676:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1801,"nodeType":"ArrayTypeName","src":"2676:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"pos","nameLocation":"2707:3:8","nodeType":"VariableDeclaration","scope":1819,"src":"2699:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2675:36:8"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1819,"src":"2735:31:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1901_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1807,"nodeType":"UserDefinedTypeName","pathNode":{"id":1806,"name":"StorageSlot.Bytes32Slot","nameLocations":["2735:11:8","2747:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"2735:23:8"},"referencedDeclaration":1901,"src":"2735:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1901_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2734:33:8"},"scope":1867,"src":"2654:573:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"3543:459:8","statements":[{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"slot","nameLocation":"3561:4:8","nodeType":"VariableDeclaration","scope":1839,"src":"3553:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3553:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1833,"nodeType":"VariableDeclarationStatement","src":"3553:12:8"},{"AST":{"nodeType":"YulBlock","src":"3866:92:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3887:1:8","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"3890:8:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3880:6:8"},"nodeType":"YulFunctionCall","src":"3880:19:8"},"nodeType":"YulExpressionStatement","src":"3880:19:8"},{"nodeType":"YulAssignment","src":"3912:36:8","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3937:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3924:9:8"},"nodeType":"YulFunctionCall","src":"3924:18:8"},{"name":"pos","nodeType":"YulIdentifier","src":"3944:3:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3920:3:8"},"nodeType":"YulFunctionCall","src":"3920:28:8"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"3912:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1823,"isOffset":false,"isSlot":true,"src":"3890:8:8","suffix":"slot","valueSize":1},{"declaration":1825,"isOffset":false,"isSlot":false,"src":"3944:3:8","valueSize":1},{"declaration":1832,"isOffset":false,"isSlot":false,"src":"3912:4:8","valueSize":1}],"id":1834,"nodeType":"InlineAssembly","src":"3857:101:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1835,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3974:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3979:14:8","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":1954,"src":"3974:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1904_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":1830,"id":1838,"nodeType":"Return","src":"3967:28:8"}]},"documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"3233:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"3438:12:8","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"arr","nameLocation":"3469:3:8","nodeType":"VariableDeclaration","scope":1840,"src":"3451:21:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1822,"nodeType":"ArrayTypeName","src":"3451:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"pos","nameLocation":"3482:3:8","nodeType":"VariableDeclaration","scope":1840,"src":"3474:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3474:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:36:8"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1840,"src":"3510:31:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1828,"nodeType":"UserDefinedTypeName","pathNode":{"id":1827,"name":"StorageSlot.Uint256Slot","nameLocations":["3510:11:8","3522:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1904,"src":"3510:23:8"},"referencedDeclaration":1904,"src":"3510:23:8","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"3509:33:8"},"scope":1867,"src":"3429:573:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1852,"nodeType":"Block","src":"4303:98:8","statements":[{"AST":{"nodeType":"YulBlock","src":"4322:73:8","statements":[{"nodeType":"YulAssignment","src":"4336:49:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"4357:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4362:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:8"},"nodeType":"YulFunctionCall","src":"4353:14:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4373:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4378:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4369:3:8"},"nodeType":"YulFunctionCall","src":"4369:14:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4349:3:8"},"nodeType":"YulFunctionCall","src":"4349:35:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4343:5:8"},"nodeType":"YulFunctionCall","src":"4343:42:8"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"4336:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1844,"isOffset":false,"isSlot":false,"src":"4357:3:8","valueSize":1},{"declaration":1846,"isOffset":false,"isSlot":false,"src":"4373:3:8","valueSize":1},{"declaration":1849,"isOffset":false,"isSlot":false,"src":"4336:3:8","valueSize":1}],"id":1851,"nodeType":"InlineAssembly","src":"4313:82:8"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"4008:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4213:18:8","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"arr","nameLocation":"4249:3:8","nodeType":"VariableDeclaration","scope":1853,"src":"4232:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1843,"nodeType":"ArrayTypeName","src":"4232:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"pos","nameLocation":"4262:3:8","nodeType":"VariableDeclaration","scope":1853,"src":"4254:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4254:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4231:35:8"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"res","nameLocation":"4298:3:8","nodeType":"VariableDeclaration","scope":1853,"src":"4290:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"4290:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4289:13:8"},"scope":1867,"src":"4204:197:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1865,"nodeType":"Block","src":"4702:98:8","statements":[{"AST":{"nodeType":"YulBlock","src":"4721:73:8","statements":[{"nodeType":"YulAssignment","src":"4735:49:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"4756:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4761:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4752:3:8"},"nodeType":"YulFunctionCall","src":"4752:14:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4772:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4777:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4768:3:8"},"nodeType":"YulFunctionCall","src":"4768:14:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:8"},"nodeType":"YulFunctionCall","src":"4748:35:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4742:5:8"},"nodeType":"YulFunctionCall","src":"4742:42:8"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"4735:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1857,"isOffset":false,"isSlot":false,"src":"4756:3:8","valueSize":1},{"declaration":1859,"isOffset":false,"isSlot":false,"src":"4772:3:8","valueSize":1},{"declaration":1862,"isOffset":false,"isSlot":false,"src":"4735:3:8","valueSize":1}],"id":1864,"nodeType":"InlineAssembly","src":"4712:82:8"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"4407:191:8","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1866,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4612:18:8","nodeType":"FunctionDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"arr","nameLocation":"4648:3:8","nodeType":"VariableDeclaration","scope":1866,"src":"4631:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1856,"nodeType":"ArrayTypeName","src":"4631:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"pos","nameLocation":"4661:3:8","nodeType":"VariableDeclaration","scope":1866,"src":"4653:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:35:8"},"returnParameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"res","nameLocation":"4697:3:8","nodeType":"VariableDeclaration","scope":1866,"src":"4689:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4688:13:8"},"scope":1867,"src":"4603:197:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1868,"src":"276:4526:8","usedErrors":[],"usedEvents":[]}],"src":"100:4703:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1889]},"id":1890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1869,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1889,"linearizedBaseContracts":[1889],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1878,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1875,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1874,"id":1877,"nodeType":"Return","src":"728:17:9"}]},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1889,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1887,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1884,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1883,"id":1886,"nodeType":"Return","src":"835:15:9"}]},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1888,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1889,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1890,"src":"624:235:9","usedErrors":[],"usedEvents":[]}],"src":"101:759:9"},"id":9},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1999]},"id":2000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1891,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"219:1025:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1999,"linearizedBaseContracts":[1999],"name":"StorageSlot","nameLocation":"1253:11:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1895,"members":[{"constant":false,"id":1894,"mutability":"mutable","name":"value","nameLocation":"1308:5:10","nodeType":"VariableDeclaration","scope":1895,"src":"1300:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1893,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:10","nodeType":"StructDefinition","scope":1999,"src":"1271:49:10","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1898,"members":[{"constant":false,"id":1897,"mutability":"mutable","name":"value","nameLocation":"1360:5:10","nodeType":"VariableDeclaration","scope":1898,"src":"1355:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1896,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:10","nodeType":"StructDefinition","scope":1999,"src":"1326:46:10","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1901,"members":[{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"1415:5:10","nodeType":"VariableDeclaration","scope":1901,"src":"1407:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:10","nodeType":"StructDefinition","scope":1999,"src":"1378:49:10","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1904,"members":[{"constant":false,"id":1903,"mutability":"mutable","name":"value","nameLocation":"1470:5:10","nodeType":"VariableDeclaration","scope":1904,"src":"1462:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:10","nodeType":"StructDefinition","scope":1999,"src":"1433:49:10","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1907,"members":[{"constant":false,"id":1906,"mutability":"mutable","name":"value","nameLocation":"1523:5:10","nodeType":"VariableDeclaration","scope":1907,"src":"1516:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1905,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:10","nodeType":"StructDefinition","scope":1999,"src":"1488:47:10","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1910,"members":[{"constant":false,"id":1909,"mutability":"mutable","name":"value","nameLocation":"1574:5:10","nodeType":"VariableDeclaration","scope":1910,"src":"1568:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:10","nodeType":"StructDefinition","scope":1999,"src":"1541:45:10","visibility":"public"},{"body":{"id":1920,"nodeType":"Block","src":"1768:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:10","statements":[{"nodeType":"YulAssignment","src":"1844:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1917,"isOffset":false,"isSlot":true,"src":"1844:6:10","suffix":"slot","valueSize":1},{"declaration":1913,"isOffset":false,"isSlot":false,"src":"1854:4:10","valueSize":1}],"id":1919,"nodeType":"InlineAssembly","src":"1821:47:10"}]},"documentation":{"id":1911,"nodeType":"StructuredDocumentation","src":"1592:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:10","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"slot","nameLocation":"1716:4:10","nodeType":"VariableDeclaration","scope":1921,"src":"1708:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:10"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"r","nameLocation":"1765:1:10","nodeType":"VariableDeclaration","scope":1921,"src":"1745:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1895_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1916,"nodeType":"UserDefinedTypeName","pathNode":{"id":1915,"name":"AddressSlot","nameLocations":["1745:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1895,"src":"1745:11:10"},"referencedDeclaration":1895,"src":"1745:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1895_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:10"},"scope":1999,"src":"1684:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"2056:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:10","statements":[{"nodeType":"YulAssignment","src":"2132:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1928,"isOffset":false,"isSlot":true,"src":"2132:6:10","suffix":"slot","valueSize":1},{"declaration":1924,"isOffset":false,"isSlot":false,"src":"2142:4:10","valueSize":1}],"id":1930,"nodeType":"InlineAssembly","src":"2109:47:10"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"1880:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:10","nodeType":"FunctionDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"slot","nameLocation":"2004:4:10","nodeType":"VariableDeclaration","scope":1932,"src":"1996:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:10"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"r","nameLocation":"2053:1:10","nodeType":"VariableDeclaration","scope":1932,"src":"2033:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1898_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1927,"nodeType":"UserDefinedTypeName","pathNode":{"id":1926,"name":"BooleanSlot","nameLocations":["2033:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1898,"src":"2033:11:10"},"referencedDeclaration":1898,"src":"2033:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1898_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:10"},"scope":1999,"src":"1972:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1942,"nodeType":"Block","src":"2344:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:10","statements":[{"nodeType":"YulAssignment","src":"2420:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1939,"isOffset":false,"isSlot":true,"src":"2420:6:10","suffix":"slot","valueSize":1},{"declaration":1935,"isOffset":false,"isSlot":false,"src":"2430:4:10","valueSize":1}],"id":1941,"nodeType":"InlineAssembly","src":"2397:47:10"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"2168:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1943,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:10","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"slot","nameLocation":"2292:4:10","nodeType":"VariableDeclaration","scope":1943,"src":"2284:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:10"},"returnParameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"r","nameLocation":"2341:1:10","nodeType":"VariableDeclaration","scope":1943,"src":"2321:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1901_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1938,"nodeType":"UserDefinedTypeName","pathNode":{"id":1937,"name":"Bytes32Slot","nameLocations":["2321:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"2321:11:10"},"referencedDeclaration":1901,"src":"2321:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1901_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:10"},"scope":1999,"src":"2260:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1953,"nodeType":"Block","src":"2632:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:10","statements":[{"nodeType":"YulAssignment","src":"2708:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1950,"isOffset":false,"isSlot":true,"src":"2708:6:10","suffix":"slot","valueSize":1},{"declaration":1946,"isOffset":false,"isSlot":false,"src":"2718:4:10","valueSize":1}],"id":1952,"nodeType":"InlineAssembly","src":"2685:47:10"}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"2456:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1954,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:10","nodeType":"FunctionDefinition","parameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"slot","nameLocation":"2580:4:10","nodeType":"VariableDeclaration","scope":1954,"src":"2572:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:10"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"r","nameLocation":"2629:1:10","nodeType":"VariableDeclaration","scope":1954,"src":"2609:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1949,"nodeType":"UserDefinedTypeName","pathNode":{"id":1948,"name":"Uint256Slot","nameLocations":["2609:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1904,"src":"2609:11:10"},"referencedDeclaration":1904,"src":"2609:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1904_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:10"},"scope":1999,"src":"2548:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"2917:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:10","statements":[{"nodeType":"YulAssignment","src":"2993:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1961,"isOffset":false,"isSlot":true,"src":"2993:6:10","suffix":"slot","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"3003:4:10","valueSize":1}],"id":1963,"nodeType":"InlineAssembly","src":"2970:47:10"}]},"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"2744:86:10","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:10","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"slot","nameLocation":"2866:4:10","nodeType":"VariableDeclaration","scope":1965,"src":"2858:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:10"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"r","nameLocation":"2914:1:10","nodeType":"VariableDeclaration","scope":1965,"src":"2895:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1907_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1960,"nodeType":"UserDefinedTypeName","pathNode":{"id":1959,"name":"StringSlot","nameLocations":["2895:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1907,"src":"2895:10:10"},"referencedDeclaration":1907,"src":"2895:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1907_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:10"},"scope":1999,"src":"2835:188:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"3225:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:10","statements":[{"nodeType":"YulAssignment","src":"3301:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1972,"isOffset":false,"isSlot":true,"src":"3301:6:10","suffix":"slot","valueSize":1},{"declaration":1968,"isOffset":false,"isSlot":true,"src":"3311:10:10","suffix":"slot","valueSize":1}],"id":1974,"nodeType":"InlineAssembly","src":"3278:53:10"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"3029:101:10","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:10","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"store","nameLocation":"3173:5:10","nodeType":"VariableDeclaration","scope":1976,"src":"3158:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1967,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:10"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"r","nameLocation":"3222:1:10","nodeType":"VariableDeclaration","scope":1976,"src":"3203:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1907_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1971,"nodeType":"UserDefinedTypeName","pathNode":{"id":1970,"name":"StringSlot","nameLocations":["3203:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1907,"src":"3203:10:10"},"referencedDeclaration":1907,"src":"3203:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1907_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:10"},"scope":1999,"src":"3135:202:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1986,"nodeType":"Block","src":"3513:106:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:10","statements":[{"nodeType":"YulAssignment","src":"3589:14:10","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1983,"isOffset":false,"isSlot":true,"src":"3589:6:10","suffix":"slot","valueSize":1},{"declaration":1979,"isOffset":false,"isSlot":false,"src":"3599:4:10","valueSize":1}],"id":1985,"nodeType":"InlineAssembly","src":"3566:47:10"}]},"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"3343:85:10","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:10","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"slot","nameLocation":"3463:4:10","nodeType":"VariableDeclaration","scope":1987,"src":"3455:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:10"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"r","nameLocation":"3510:1:10","nodeType":"VariableDeclaration","scope":1987,"src":"3492:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1910_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1982,"nodeType":"UserDefinedTypeName","pathNode":{"id":1981,"name":"BytesSlot","nameLocations":["3492:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1910,"src":"3492:9:10"},"referencedDeclaration":1910,"src":"3492:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1910_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:10"},"scope":1999,"src":"3433:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"3816:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:10","statements":[{"nodeType":"YulAssignment","src":"3892:20:10","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:10"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1994,"isOffset":false,"isSlot":true,"src":"3892:6:10","suffix":"slot","valueSize":1},{"declaration":1990,"isOffset":false,"isSlot":true,"src":"3902:10:10","suffix":"slot","valueSize":1}],"id":1996,"nodeType":"InlineAssembly","src":"3869:53:10"}]},"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"3625:99:10","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:10","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"store","nameLocation":"3765:5:10","nodeType":"VariableDeclaration","scope":1998,"src":"3751:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1989,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:10"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"r","nameLocation":"3813:1:10","nodeType":"VariableDeclaration","scope":1998,"src":"3795:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1910_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1993,"nodeType":"UserDefinedTypeName","pathNode":{"id":1992,"name":"BytesSlot","nameLocations":["3795:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1910,"src":"3795:9:10"},"referencedDeclaration":1910,"src":"3795:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1910_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:10"},"scope":1999,"src":"3729:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2000,"src":"1245:2685:10","usedErrors":[],"usedEvents":[]}],"src":"193:3738:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3344],"SignedMath":[3449],"Strings":[2254]},"id":2255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2255,"sourceUnit":3345,"src":"127:37:11","symbolAliases":[{"foreign":{"id":2002,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"135:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2255,"sourceUnit":3450,"src":"165:49:11","symbolAliases":[{"foreign":{"id":2004,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"173:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"216:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":2254,"linearizedBaseContracts":[2254],"name":"Strings","nameLocation":"259:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2009,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:11","nodeType":"VariableDeclaration","scope":2254,"src":"273:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2007,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2012,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:11","nodeType":"VariableDeclaration","scope":2254,"src":"335:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2010,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"384:81:11","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2019,"name":"StringsInsufficientHexLength","nameLocation":"476:28:11","nodeType":"ErrorDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"513:5:11","nodeType":"VariableDeclaration","scope":2019,"src":"505:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":2019,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:11"},"src":"470:66:11"},{"body":{"id":2066,"nodeType":"Block","src":"708:627:11","statements":[{"id":2065,"nodeType":"UncheckedBlock","src":"718:611:11","statements":[{"assignments":[2028],"declarations":[{"constant":false,"id":2028,"mutability":"mutable","name":"length","nameLocation":"750:6:11","nodeType":"VariableDeclaration","scope":2065,"src":"742:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2035,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2029,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"759:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3344_$","typeString":"type(library Math)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"759:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:11"},{"assignments":[2037],"declarations":[{"constant":false,"id":2037,"mutability":"mutable","name":"buffer","nameLocation":"808:6:11","nodeType":"VariableDeclaration","scope":2065,"src":"794:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2036,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2042,"initialValue":{"arguments":[{"id":2040,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"828:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2038,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:11"},{"assignments":[2044],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"ptr","nameLocation":"857:3:11","nodeType":"VariableDeclaration","scope":2065,"src":"849:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2045,"nodeType":"VariableDeclarationStatement","src":"849:11:11"},{"AST":{"nodeType":"YulBlock","src":"930:67:11","statements":[{"nodeType":"YulAssignment","src":"948:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:11"},"nodeType":"YulFunctionCall","src":"967:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:11"},"nodeType":"YulFunctionCall","src":"955:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2037,"isOffset":false,"isSlot":false,"src":"959:6:11","valueSize":1},{"declaration":2028,"isOffset":false,"isSlot":false,"src":"975:6:11","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"948:3:11","valueSize":1}],"id":2046,"nodeType":"InlineAssembly","src":"921:76:11"},{"body":{"id":2061,"nodeType":"Block","src":"1023:269:11","statements":[{"expression":{"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:11","subExpression":{"id":2048,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1041:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2050,"nodeType":"ExpressionStatement","src":"1041:5:11"},{"AST":{"nodeType":"YulBlock","src":"1124:86:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:11"},"nodeType":"YulFunctionCall","src":"1164:14:11"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:11"},"nodeType":"YulFunctionCall","src":"1159:32:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:11"},"nodeType":"YulFunctionCall","src":"1146:46:11"},"nodeType":"YulExpressionStatement","src":"1146:46:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2009,"isOffset":false,"isSlot":false,"src":"1180:10:11","valueSize":1},{"declaration":2044,"isOffset":false,"isSlot":false,"src":"1154:3:11","valueSize":1},{"declaration":2022,"isOffset":false,"isSlot":false,"src":"1168:5:11","valueSize":1}],"id":2051,"nodeType":"InlineAssembly","src":"1115:95:11"},{"expression":{"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"1227:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2055,"nodeType":"ExpressionStatement","src":"1227:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"1260:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2060,"nodeType":"IfStatement","src":"1256:21:11","trueBody":{"id":2059,"nodeType":"Break","src":"1272:5:11"}}]},"condition":{"hexValue":"74727565","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2062,"nodeType":"WhileStatement","src":"1010:282:11"},{"expression":{"id":2063,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"1312:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2026,"id":2064,"nodeType":"Return","src":"1305:13:11"}]}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"542:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:11","nodeType":"FunctionDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"value","nameLocation":"663:5:11","nodeType":"VariableDeclaration","scope":2067,"src":"655:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:11"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"693:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2024,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:11"},"scope":2254,"src":"637:698:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"1511:92:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1542:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:11","trueExpression":{"hexValue":"2d","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"1588:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2085,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"1573:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3449_$","typeString":"type(library SignedMath)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3448,"src":"1573:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2084,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1564:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2075,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:11","typeDescriptions":{}}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2074,"id":2091,"nodeType":"Return","src":"1521:75:11"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"1341:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:11","nodeType":"FunctionDefinition","parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"value","nameLocation":"1466:5:11","nodeType":"VariableDeclaration","scope":2093,"src":"1459:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2069,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:11"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"1496:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2072,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:11"},"scope":2254,"src":"1435:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"1782:100:11","statements":[{"id":2111,"nodeType":"UncheckedBlock","src":"1792:84:11","statements":[{"expression":{"arguments":[{"id":2102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1854:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2103,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"1842:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3344_$","typeString":"type(library Math)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3286,"src":"1842:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2101,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2113,2196,2216],"referencedDeclaration":2196,"src":"1823:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2100,"id":2110,"nodeType":"Return","src":"1816:49:11"}]}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"1609:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:11","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"value","nameLocation":"1737:5:11","nodeType":"VariableDeclaration","scope":2113,"src":"1729:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:11"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"1767:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2098,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:11"},"scope":2254,"src":"1708:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2195,"nodeType":"Block","src":"2095:435:11","statements":[{"assignments":[2124],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:11","nodeType":"VariableDeclaration","scope":2195,"src":"2105:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2126,"initialValue":{"id":2125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"2126:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:11"},{"assignments":[2128],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:11","nodeType":"VariableDeclaration","scope":2195,"src":"2141:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2127,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2137,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2132,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2177:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2129,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:11"},{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2138,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2198:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2140,"indexExpression":{"hexValue":"30","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2143,"nodeType":"ExpressionStatement","src":"2198:15:11"},{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2144,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2223:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2146,"indexExpression":{"hexValue":"31","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2149,"nodeType":"ExpressionStatement","src":"2223:15:11"},{"body":{"id":2178,"nodeType":"Block","src":"2293:95:11","statements":[{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2164,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2307:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2166,"indexExpression":{"id":2165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2314:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2167,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"2319:10:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2171,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2330:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2173,"nodeType":"ExpressionStatement","src":"2307:40:11"},{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2361:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"2361:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2281:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2179,"initializationExpression":{"assignments":[2151],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"i","nameLocation":"2261:1:11","nodeType":"VariableDeclaration","scope":2179,"src":"2253:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2157,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2153,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2269:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:11"},"loopExpression":{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:11","subExpression":{"id":2161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2290:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"nodeType":"ExpressionStatement","src":"2288:3:11"},"nodeType":"ForStatement","src":"2248:140:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2401:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2189,"nodeType":"IfStatement","src":"2397:96:11","trueBody":{"id":2188,"nodeType":"Block","src":"2418:75:11","statements":[{"errorCall":{"arguments":[{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"2468:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2185,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2475:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"2439:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2187,"nodeType":"RevertStatement","src":"2432:50:11"}]}},{"expression":{"arguments":[{"id":2192,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2516:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2190,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:11","typeDescriptions":{}}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2122,"id":2194,"nodeType":"Return","src":"2502:21:11"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"1888:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:11","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"value","nameLocation":"2034:5:11","nodeType":"VariableDeclaration","scope":2196,"src":"2026:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"length","nameLocation":"2049:6:11","nodeType":"VariableDeclaration","scope":2196,"src":"2041:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:11"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"2080:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2120,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:11"},"scope":2254,"src":"2005:525:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"2762:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2209,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2807:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2207,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:11","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:11","typeDescriptions":{}}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2212,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2815:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2204,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2113,2196,2216],"referencedDeclaration":2196,"src":"2779:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2203,"id":2214,"nodeType":"Return","src":"2772:58:11"}]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"2536:148:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:11","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"addr","nameLocation":"2718:4:11","nodeType":"VariableDeclaration","scope":2216,"src":"2710:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:11"},"returnParameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"2747:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2201,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:11"},"scope":2254,"src":"2689:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2252,"nodeType":"Block","src":"2992:104:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2228,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3015:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:11","typeDescriptions":{}}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:11","memberName":"length","nodeType":"MemberAccess","src":"3009:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2233,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3034:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2231,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:11","typeDescriptions":{}}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:11","memberName":"length","nodeType":"MemberAccess","src":"3028:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3063:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:11","typeDescriptions":{}}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2237,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3086:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2244,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:11","typeDescriptions":{}}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2243,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2225,"id":2251,"nodeType":"Return","src":"3002:87:11"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"2843:66:11","text":" @dev Returns true if the two strings are equal."},"id":2253,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:11","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"a","nameLocation":"2943:1:11","nodeType":"VariableDeclaration","scope":2253,"src":"2929:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2218,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"b","nameLocation":"2960:1:11","nodeType":"VariableDeclaration","scope":2253,"src":"2946:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2220,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:11"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2253,"src":"2986:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2223,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:11"},"scope":2254,"src":"2914:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2255,"src":"251:2847:11","usedErrors":[2019],"usedEvents":[]}],"src":"101:2998:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2278],"IERC165":[2290]},"id":2279,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2279,"sourceUnit":2291,"src":"140:38:12","symbolAliases":[{"foreign":{"id":2257,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2260,"name":"IERC165","nameLocations":["687:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2290,"src":"687:7:12"},"id":2261,"nodeType":"InheritanceSpecifier","src":"687:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"180:478:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2278,"linearizedBaseContracts":[2278,2290],"name":"ERC165","nameLocation":"677:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2289],"body":{"id":2276,"nodeType":"Block","src":"844:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"861:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2271,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"881:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2290_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2290_$","typeString":"type(contract IERC165)"}],"id":2270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2290","typeString":"type(contract IERC165)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2268,"id":2275,"nodeType":"Return","src":"854:47:12"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"701:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:12","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:12","nodeType":"VariableDeclaration","scope":2277,"src":"789:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2263,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:12"},"returnParameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"838:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2266,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:12"},"scope":2278,"src":"762:146:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2279,"src":"659:251:12","usedErrors":[],"usedEvents":[]}],"src":"114:797:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2290]},"id":2291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2280,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"141:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2290,"linearizedBaseContracts":[2290],"name":"IERC165","nameLocation":"431:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"445:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2289,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:13","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:13","nodeType":"VariableDeclaration","scope":2289,"src":"817:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2283,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:13"},"returnParameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"860:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2286,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:13"},"scope":2290,"src":"790:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2291,"src":"421:447:13","usedErrors":[],"usedEvents":[]}],"src":"115:754:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3344]},"id":3345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2292,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"129:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3344,"linearizedBaseContracts":[3344],"name":"Math","nameLocation":"211:4:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"222:50:14","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2296,"name":"MathOverflowedMulDiv","nameLocation":"283:20:14","nodeType":"ErrorDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"303:2:14"},"src":"277:29:14"},{"canonicalName":"Math.Rounding","id":2301,"members":[{"id":2297,"name":"Floor","nameLocation":"336:5:14","nodeType":"EnumValue","src":"336:5:14"},{"id":2298,"name":"Ceil","nameLocation":"379:4:14","nodeType":"EnumValue","src":"379:4:14"},{"id":2299,"name":"Trunc","nameLocation":"421:5:14","nodeType":"EnumValue","src":"421:5:14"},{"id":2300,"name":"Expand","nameLocation":"451:6:14","nodeType":"EnumValue","src":"451:6:14"}],"name":"Rounding","nameLocation":"317:8:14","nodeType":"EnumDefinition","src":"312:169:14"},{"body":{"id":2332,"nodeType":"Block","src":"661:140:14","statements":[{"id":2331,"nodeType":"UncheckedBlock","src":"671:124:14","statements":[{"assignments":[2314],"declarations":[{"constant":false,"id":2314,"mutability":"mutable","name":"c","nameLocation":"703:1:14","nodeType":"VariableDeclaration","scope":2331,"src":"695:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2318,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"707:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2316,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"711:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"730:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"734:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2326,"nodeType":"IfStatement","src":"726:28:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2312,"id":2325,"nodeType":"Return","src":"737:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2328,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"782:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2312,"id":2330,"nodeType":"Return","src":"768:16:14"}]}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"487:93:14","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2333,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:14","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2333,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2333,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2333,"src":"646:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2308,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2333,"src":"652:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:14"},"scope":3344,"src":"585:216:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2360,"nodeType":"Block","src":"984:113:14","statements":[{"id":2359,"nodeType":"UncheckedBlock","src":"994:97:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"1022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1026:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2352,"nodeType":"IfStatement","src":"1018:28:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2344,"id":2351,"nodeType":"Return","src":"1029:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1074:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"1078:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2344,"id":2358,"nodeType":"Return","src":"1060:20:14"}]}]},"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"807:96:14","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:14","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"a","nameLocation":"932:1:14","nodeType":"VariableDeclaration","scope":2361,"src":"924:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"b","nameLocation":"943:1:14","nodeType":"VariableDeclaration","scope":2361,"src":"935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:14"},"returnParameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2361,"src":"969:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2340,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2361,"src":"975:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:14"},"scope":3344,"src":"908:189:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"1283:417:14","statements":[{"id":2401,"nodeType":"UncheckedBlock","src":"1293:401:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2380,"nodeType":"IfStatement","src":"1547:28:14","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2372,"id":2379,"nodeType":"Return","src":"1559:16:14"}},{"assignments":[2382],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"c","nameLocation":"1597:1:14","nodeType":"VariableDeclaration","scope":2401,"src":"1589:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2386,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1601:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2384,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1605:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1624:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"1628:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"1633:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"nodeType":"IfStatement","src":"1620:33:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2372,"id":2395,"nodeType":"Return","src":"1636:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2398,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"1681:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2372,"id":2400,"nodeType":"Return","src":"1667:16:14"}]}]},"documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"1103:99:14","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:14","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"a","nameLocation":"1231:1:14","nodeType":"VariableDeclaration","scope":2403,"src":"1223:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"b","nameLocation":"1242:1:14","nodeType":"VariableDeclaration","scope":2403,"src":"1234:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:14"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"1268:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"1274:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:14"},"scope":3344,"src":"1207:493:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2430,"nodeType":"Block","src":"1887:114:14","statements":[{"id":2429,"nodeType":"UncheckedBlock","src":"1897:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"1925:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"1921:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2414,"id":2421,"nodeType":"Return","src":"1933:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1978:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"1982:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2414,"id":2428,"nodeType":"Return","src":"1964:20:14"}]}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"1706:100:14","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:14","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"a","nameLocation":"1835:1:14","nodeType":"VariableDeclaration","scope":2431,"src":"1827:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"b","nameLocation":"1846:1:14","nodeType":"VariableDeclaration","scope":2431,"src":"1838:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:14"},"returnParameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"1872:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2410,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2431,"src":"1878:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:14"},"scope":3344,"src":"1811:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2458,"nodeType":"Block","src":"2198:114:14","statements":[{"id":2457,"nodeType":"UncheckedBlock","src":"2208:98:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2236:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"2232:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2442,"id":2449,"nodeType":"Return","src":"2244:17:14"}},{"expression":{"components":[{"hexValue":"74727565","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2289:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2293:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2442,"id":2456,"nodeType":"Return","src":"2275:20:14"}]}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"2007:110:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2459,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:14","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"a","nameLocation":"2146:1:14","nodeType":"VariableDeclaration","scope":2459,"src":"2138:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"b","nameLocation":"2157:1:14","nodeType":"VariableDeclaration","scope":2459,"src":"2149:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:14"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"2183:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2438,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"2189:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:14"},"scope":3344,"src":"2122:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2476,"nodeType":"Block","src":"2449:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"2466:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2470:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2478:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:14","trueExpression":{"id":2472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"2474:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2468,"id":2475,"nodeType":"Return","src":"2459:20:14"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"2318:59:14","text":" @dev Returns the largest of two numbers."},"id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:14","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"a","nameLocation":"2403:1:14","nodeType":"VariableDeclaration","scope":2477,"src":"2395:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"b","nameLocation":"2414:1:14","nodeType":"VariableDeclaration","scope":2477,"src":"2406:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:14"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"2440:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:14"},"scope":3344,"src":"2382:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"2624:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2641:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2645:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2653:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:14","trueExpression":{"id":2490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2649:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2486,"id":2493,"nodeType":"Return","src":"2634:20:14"}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"2492:60:14","text":" @dev Returns the smallest of two numbers."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:14","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"a","nameLocation":"2578:1:14","nodeType":"VariableDeclaration","scope":2495,"src":"2570:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"b","nameLocation":"2589:1:14","nodeType":"VariableDeclaration","scope":2495,"src":"2581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:14"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"2615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:14"},"scope":3344,"src":"2557:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2517,"nodeType":"Block","src":"2845:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2900:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2904:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2910:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2914:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2504,"id":2516,"nodeType":"Return","src":"2892:28:14"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"2667:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2518,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:14","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"a","nameLocation":"2799:1:14","nodeType":"VariableDeclaration","scope":2518,"src":"2791:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"b","nameLocation":"2810:1:14","nodeType":"VariableDeclaration","scope":2518,"src":"2802:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:14"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2518,"src":"2836:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:14"},"scope":3344,"src":"2774:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2551,"nodeType":"Block","src":"3219:260:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"3233:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"nodeType":"IfStatement","src":"3229:127:14","trueBody":{"id":2535,"nodeType":"Block","src":"3241:115:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"3340:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"3344:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2527,"id":2534,"nodeType":"Return","src":"3333:12:14"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"3444:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"3458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"3467:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:14","trueExpression":{"hexValue":"30","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2527,"id":2550,"nodeType":"Return","src":"3437:35:14"}]},"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"2933:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:14","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"a","nameLocation":"3173:1:14","nodeType":"VariableDeclaration","scope":2552,"src":"3165:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"b","nameLocation":"3184:1:14","nodeType":"VariableDeclaration","scope":2552,"src":"3176:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:14"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"3210:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:14"},"scope":3344,"src":"3148:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2677,"nodeType":"Block","src":"3901:4018:14","statements":[{"id":2676,"nodeType":"UncheckedBlock","src":"3911:4002:14","statements":[{"assignments":[2565],"declarations":[{"constant":false,"id":2565,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:14","nodeType":"VariableDeclaration","scope":2676,"src":"4232:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"4248:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2567,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"4252:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:14"},{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:14","nodeType":"VariableDeclaration","scope":2676,"src":"4312:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2572,"nodeType":"VariableDeclarationStatement","src":"4312:13:14"},{"AST":{"nodeType":"YulBlock","src":"4392:122:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:14"},"nodeType":"YulFunctionCall","src":"4433:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:14"},"nodeType":"YulFunctionCall","src":"4420:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:14","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:14"},"nodeType":"YulFunctionCall","src":"4470:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:14"},"nodeType":"YulFunctionCall","src":"4486:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:14"},"nodeType":"YulFunctionCall","src":"4466:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2565,"isOffset":false,"isSlot":false,"src":"4478:5:14","valueSize":1},{"declaration":2565,"isOffset":false,"isSlot":false,"src":"4493:5:14","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"4457:5:14","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"4427:1:14","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"4430:1:14","valueSize":1}],"id":2573,"nodeType":"InlineAssembly","src":"4383:131:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"4595:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2582,"nodeType":"IfStatement","src":"4591:368:14","trueBody":{"id":2581,"nodeType":"Block","src":"4607:352:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4925:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2578,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"4933:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2563,"id":2580,"nodeType":"Return","src":"4918:26:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"5065:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2584,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5080:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"IfStatement","src":"5061:88:14","trueBody":{"id":2589,"nodeType":"Block","src":"5087:62:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2586,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"5112:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2588,"nodeType":"RevertStatement","src":"5105:29:14"}]}},{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:14","nodeType":"VariableDeclaration","scope":2676,"src":"5404:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2593,"nodeType":"VariableDeclarationStatement","src":"5404:17:14"},{"AST":{"nodeType":"YulBlock","src":"5444:291:14","statements":[{"nodeType":"YulAssignment","src":"5513:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:14"},"nodeType":"YulFunctionCall","src":"5526:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:14"}]},{"nodeType":"YulAssignment","src":"5633:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:14"},"nodeType":"YulFunctionCall","src":"5653:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:14"},"nodeType":"YulFunctionCall","src":"5642:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:14"}]},{"nodeType":"YulAssignment","src":"5691:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:14"},"nodeType":"YulFunctionCall","src":"5700:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2559,"isOffset":false,"isSlot":false,"src":"5539:11:14","valueSize":1},{"declaration":2565,"isOffset":false,"isSlot":false,"src":"5667:5:14","valueSize":1},{"declaration":2565,"isOffset":false,"isSlot":false,"src":"5691:5:14","valueSize":1},{"declaration":2565,"isOffset":false,"isSlot":false,"src":"5704:5:14","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"5633:5:14","valueSize":1},{"declaration":2571,"isOffset":false,"isSlot":false,"src":"5646:5:14","valueSize":1},{"declaration":2592,"isOffset":false,"isSlot":false,"src":"5513:9:14","valueSize":1},{"declaration":2592,"isOffset":false,"isSlot":false,"src":"5656:9:14","valueSize":1},{"declaration":2592,"isOffset":false,"isSlot":false,"src":"5711:9:14","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"5533:1:14","valueSize":1},{"declaration":2557,"isOffset":false,"isSlot":false,"src":"5536:1:14","valueSize":1}],"id":2594,"nodeType":"InlineAssembly","src":"5435:300:14"},{"assignments":[2596],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"twos","nameLocation":"5947:4:14","nodeType":"VariableDeclaration","scope":2676,"src":"5939:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2603,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2597,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"5954:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2599,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"5973:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:14"},{"AST":{"nodeType":"YulBlock","src":"6008:362:14","statements":[{"nodeType":"YulAssignment","src":"6073:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:14"},"nodeType":"YulFunctionCall","src":"6088:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:14"}]},{"nodeType":"YulAssignment","src":"6177:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:14"},"nodeType":"YulFunctionCall","src":"6186:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:14"}]},{"nodeType":"YulAssignment","src":"6317:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:14"},"nodeType":"YulFunctionCall","src":"6333:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:14"},"nodeType":"YulFunctionCall","src":"6329:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:14"},"nodeType":"YulFunctionCall","src":"6325:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2559,"isOffset":false,"isSlot":false,"src":"6073:11:14","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":false,"src":"6092:11:14","valueSize":1},{"declaration":2565,"isOffset":false,"isSlot":false,"src":"6177:5:14","valueSize":1},{"declaration":2565,"isOffset":false,"isSlot":false,"src":"6190:5:14","valueSize":1},{"declaration":2596,"isOffset":false,"isSlot":false,"src":"6105:4:14","valueSize":1},{"declaration":2596,"isOffset":false,"isSlot":false,"src":"6197:4:14","valueSize":1},{"declaration":2596,"isOffset":false,"isSlot":false,"src":"6317:4:14","valueSize":1},{"declaration":2596,"isOffset":false,"isSlot":false,"src":"6340:4:14","valueSize":1},{"declaration":2596,"isOffset":false,"isSlot":false,"src":"6347:4:14","valueSize":1}],"id":2604,"nodeType":"InlineAssembly","src":"5999:371:14"},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2605,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"6436:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2607,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"6453:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2610,"nodeType":"ExpressionStatement","src":"6436:21:14"},{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:14","nodeType":"VariableDeclaration","scope":2676,"src":"6775:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2614,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"6798:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:14"},{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"7046:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2623,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"7031:36:14"},{"expression":{"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2628,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7100:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"7115:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2631,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7129:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2635,"nodeType":"ExpressionStatement","src":"7100:36:14"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7170:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"7185:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2639,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7199:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"7170:36:14"},{"expression":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"7255:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"nodeType":"ExpressionStatement","src":"7240:36:14"},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7310:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"7325:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ExpressionStatement","src":"7310:36:14"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2660,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7381:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"7396:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2663,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2667,"nodeType":"ExpressionStatement","src":"7381:36:14"},{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"7851:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"7860:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2670,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7868:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"7851:24:14"},{"expression":{"id":2674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"7896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2563,"id":2675,"nodeType":"Return","src":"7889:13:14"}]}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"3485:313:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:14","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"x","nameLocation":"3827:1:14","nodeType":"VariableDeclaration","scope":2678,"src":"3819:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"y","nameLocation":"3838:1:14","nodeType":"VariableDeclaration","scope":2678,"src":"3830:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:14","nodeType":"VariableDeclaration","scope":2678,"src":"3841:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:14"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"result","nameLocation":"3893:6:14","nodeType":"VariableDeclaration","scope":2678,"src":"3885:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:14"},"scope":3344,"src":"3803:4116:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"8161:192:14","statements":[{"assignments":[2694],"declarations":[{"constant":false,"id":2694,"mutability":"mutable","name":"result","nameLocation":"8179:6:14","nodeType":"VariableDeclaration","scope":2720,"src":"8171:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2700,"initialValue":{"arguments":[{"id":2696,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8195:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2697,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8198:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8201:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2695,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2678,2721],"referencedDeclaration":2678,"src":"8188:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2702,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"8244:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}],"id":2701,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"8227:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2301_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2705,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8264:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2706,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8267:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2707,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8270:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2717,"nodeType":"IfStatement","src":"8223:101:14","trueBody":{"id":2716,"nodeType":"Block","src":"8288:36:14","statements":[{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8302:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2715,"nodeType":"ExpressionStatement","src":"8302:11:14"}]}},{"expression":{"id":2718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8340:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2692,"id":2719,"nodeType":"Return","src":"8333:13:14"}]},"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"7925:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:14","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"x","nameLocation":"8075:1:14","nodeType":"VariableDeclaration","scope":2721,"src":"8067:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"y","nameLocation":"8086:1:14","nodeType":"VariableDeclaration","scope":2721,"src":"8078:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:14","nodeType":"VariableDeclaration","scope":2721,"src":"8089:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:14","nodeType":"VariableDeclaration","scope":2721,"src":"8110:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"},"typeName":{"id":2687,"nodeType":"UserDefinedTypeName","pathNode":{"id":2686,"name":"Rounding","nameLocations":["8110:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"8110:8:14"},"referencedDeclaration":2301,"src":"8110:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:14"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"8152:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:14"},"scope":3344,"src":"8051:302:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"8644:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8658:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2735,"nodeType":"IfStatement","src":"8654:45:14","trueBody":{"id":2734,"nodeType":"Block","src":"8666:33:14","statements":[{"expression":{"hexValue":"30","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2728,"id":2733,"nodeType":"Return","src":"8680:8:14"}]}},{"assignments":[2737],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"result","nameLocation":"9386:6:14","nodeType":"VariableDeclaration","scope":2832,"src":"9378:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9406:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2739,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3000,3035],"referencedDeclaration":3000,"src":"9401:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:14"},{"id":2831,"nodeType":"UncheckedBlock","src":"9815:408:14","statements":[{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9839:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9849:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9858:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9862:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"9839:35:14"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9888:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9898:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9907:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9911:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"9888:35:14"},{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9937:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9947:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"9956:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9960:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"9937:35:14"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9986:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9996:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10005:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10009:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"9986:35:14"},{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10035:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10045:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10058:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"10035:35:14"},{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10084:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10094:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10103:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10107:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2812,"nodeType":"ExpressionStatement","src":"10084:35:14"},{"expression":{"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10133:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10143:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10152:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10156:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2823,"nodeType":"ExpressionStatement","src":"10133:35:14"},{"expression":{"arguments":[{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10193:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"10201:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10205:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2824,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"10189:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2728,"id":2830,"nodeType":"Return","src":"10182:30:14"}]}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"8359:223:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:14","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"a","nameLocation":"8609:1:14","nodeType":"VariableDeclaration","scope":2833,"src":"8601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:14"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"8635:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:14"},"scope":3344,"src":"8587:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2867,"nodeType":"Block","src":"10405:164:14","statements":[{"id":2866,"nodeType":"UncheckedBlock","src":"10415:148:14","statements":[{"assignments":[2845],"declarations":[{"constant":false,"id":2845,"mutability":"mutable","name":"result","nameLocation":"10447:6:14","nodeType":"VariableDeclaration","scope":2866,"src":"10439:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2849,"initialValue":{"arguments":[{"id":2847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10461:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2833,2868],"referencedDeclaration":2833,"src":"10456:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10484:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2852,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"10511:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}],"id":2851,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"10494:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2301_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10524:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"10533:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"10542:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:14","trueExpression":{"hexValue":"31","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2843,"id":2865,"nodeType":"Return","src":"10477:75:14"}]}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"10235:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:14","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"a","nameLocation":"10351:1:14","nodeType":"VariableDeclaration","scope":2868,"src":"10343:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:14","nodeType":"VariableDeclaration","scope":2868,"src":"10354:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"Rounding","nameLocations":["10354:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"10354:8:14"},"referencedDeclaration":2301,"src":"10354:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:14"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"10396:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:14"},"scope":3344,"src":"10329:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2999,"nodeType":"Block","src":"10760:922:14","statements":[{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"result","nameLocation":"10778:6:14","nodeType":"VariableDeclaration","scope":2999,"src":"10770:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2879,"initialValue":{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:14"},{"id":2996,"nodeType":"UncheckedBlock","src":"10798:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"10826:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2894,"nodeType":"IfStatement","src":"10822:99:14","trueBody":{"id":2893,"nodeType":"Block","src":"10844:77:14","statements":[{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"10862:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ExpressionStatement","src":"10862:13:14"},{"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10893:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2892,"nodeType":"ExpressionStatement","src":"10893:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"10938:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2909,"nodeType":"IfStatement","src":"10934:96:14","trueBody":{"id":2908,"nodeType":"Block","src":"10955:75:14","statements":[{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"10973:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"10973:12:14"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11003:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"11003:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11047:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2924,"nodeType":"IfStatement","src":"11043:96:14","trueBody":{"id":2923,"nodeType":"Block","src":"11064:75:14","statements":[{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11082:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"11082:12:14"},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11112:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"11112:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11156:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2939,"nodeType":"IfStatement","src":"11152:96:14","trueBody":{"id":2938,"nodeType":"Block","src":"11173:75:14","statements":[{"expression":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11191:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2933,"nodeType":"ExpressionStatement","src":"11191:12:14"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11221:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"nodeType":"ExpressionStatement","src":"11221:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11265:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"nodeType":"IfStatement","src":"11261:93:14","trueBody":{"id":2953,"nodeType":"Block","src":"11281:73:14","statements":[{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11299:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"11299:11:14"},{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11328:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"11328:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11371:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2969,"nodeType":"IfStatement","src":"11367:93:14","trueBody":{"id":2968,"nodeType":"Block","src":"11387:73:14","statements":[{"expression":{"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11405:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2963,"nodeType":"ExpressionStatement","src":"11405:11:14"},{"expression":{"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11434:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2967,"nodeType":"ExpressionStatement","src":"11434:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11477:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2984,"nodeType":"IfStatement","src":"11473:93:14","trueBody":{"id":2983,"nodeType":"Block","src":"11493:73:14","statements":[{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11511:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2978,"nodeType":"ExpressionStatement","src":"11511:11:14"},{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11540:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2982,"nodeType":"ExpressionStatement","src":"11540:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"11583:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2995,"nodeType":"IfStatement","src":"11579:64:14","trueBody":{"id":2994,"nodeType":"Block","src":"11599:44:14","statements":[{"expression":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11617:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2993,"nodeType":"ExpressionStatement","src":"11617:11:14"}]}}]},{"expression":{"id":2997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"11669:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2875,"id":2998,"nodeType":"Return","src":"11662:13:14"}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"10575:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3000,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:14","nodeType":"FunctionDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"value","nameLocation":"10721:5:14","nodeType":"VariableDeclaration","scope":3000,"src":"10713:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:14"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3000,"src":"10751:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:14"},"scope":3344,"src":"10699:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3034,"nodeType":"Block","src":"11915:168:14","statements":[{"id":3033,"nodeType":"UncheckedBlock","src":"11925:152:14","statements":[{"assignments":[3012],"declarations":[{"constant":false,"id":3012,"mutability":"mutable","name":"result","nameLocation":"11957:6:14","nodeType":"VariableDeclaration","scope":3033,"src":"11949:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3016,"initialValue":{"arguments":[{"id":3014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"11971:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3013,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3000,3035],"referencedDeclaration":3000,"src":"11966:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"11998:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3019,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"12025:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}],"id":3018,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"12008:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2301_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"12043:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"12052:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:14","trueExpression":{"hexValue":"31","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3010,"id":3032,"nodeType":"Return","src":"11991:75:14"}]}]},"documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"11688:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:14","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"value","nameLocation":"11857:5:14","nodeType":"VariableDeclaration","scope":3035,"src":"11849:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:14","nodeType":"VariableDeclaration","scope":3035,"src":"11864:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"},"typeName":{"id":3005,"nodeType":"UserDefinedTypeName","pathNode":{"id":3004,"name":"Rounding","nameLocations":["11864:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"11864:8:14"},"referencedDeclaration":2301,"src":"11864:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:14"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3035,"src":"11906:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:14"},"scope":3344,"src":"11835:248:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"12276:854:14","statements":[{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"result","nameLocation":"12294:6:14","nodeType":"VariableDeclaration","scope":3163,"src":"12286:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"hexValue":"30","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:14"},{"id":3160,"nodeType":"UncheckedBlock","src":"12314:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12342:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"12338:103:14","trueBody":{"id":3062,"nodeType":"Block","src":"12361:80:14","statements":[{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12379:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"12379:17:14"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12414:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"12414:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12458:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3080,"nodeType":"IfStatement","src":"12454:103:14","trueBody":{"id":3079,"nodeType":"Block","src":"12477:80:14","statements":[{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12495:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3074,"nodeType":"ExpressionStatement","src":"12495:17:14"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12530:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3078,"nodeType":"ExpressionStatement","src":"12530:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12574:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"12570:103:14","trueBody":{"id":3096,"nodeType":"Block","src":"12593:80:14","statements":[{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12611:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"nodeType":"ExpressionStatement","src":"12611:17:14"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12646:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"12646:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12690:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3114,"nodeType":"IfStatement","src":"12686:100:14","trueBody":{"id":3113,"nodeType":"Block","src":"12708:78:14","statements":[{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12726:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3108,"nodeType":"ExpressionStatement","src":"12726:16:14"},{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12760:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3112,"nodeType":"ExpressionStatement","src":"12760:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12803:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"IfStatement","src":"12799:100:14","trueBody":{"id":3130,"nodeType":"Block","src":"12821:78:14","statements":[{"expression":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12839:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3125,"nodeType":"ExpressionStatement","src":"12839:16:14"},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12873:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"12873:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12916:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"12912:100:14","trueBody":{"id":3147,"nodeType":"Block","src":"12934:78:14","statements":[{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"12952:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3142,"nodeType":"ExpressionStatement","src":"12952:16:14"},{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12986:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"nodeType":"ExpressionStatement","src":"12986:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"13029:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3159,"nodeType":"IfStatement","src":"13025:66:14","trueBody":{"id":3158,"nodeType":"Block","src":"13047:44:14","statements":[{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"13065:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ExpressionStatement","src":"13065:11:14"}]}}]},{"expression":{"id":3161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"13117:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3042,"id":3162,"nodeType":"Return","src":"13110:13:14"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"12089:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:14","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"value","nameLocation":"12237:5:14","nodeType":"VariableDeclaration","scope":3164,"src":"12229:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:14"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"12267:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:14"},"scope":3344,"src":"12214:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3198,"nodeType":"Block","src":"13365:170:14","statements":[{"id":3197,"nodeType":"UncheckedBlock","src":"13375:154:14","statements":[{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"result","nameLocation":"13407:6:14","nodeType":"VariableDeclaration","scope":3197,"src":"13399:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"arguments":[{"id":3178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13422:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3164,3199],"referencedDeclaration":3164,"src":"13416:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"13449:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3183,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"13476:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}],"id":3182,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"13459:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2301_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"13495:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13504:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:14","trueExpression":{"hexValue":"31","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3174,"id":3196,"nodeType":"Return","src":"13442:76:14"}]}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"13136:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3199,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:14","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"value","nameLocation":"13307:5:14","nodeType":"VariableDeclaration","scope":3199,"src":"13299:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:14","nodeType":"VariableDeclaration","scope":3199,"src":"13314:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"},"typeName":{"id":3169,"nodeType":"UserDefinedTypeName","pathNode":{"id":3168,"name":"Rounding","nameLocations":["13314:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"13314:8:14"},"referencedDeclaration":2301,"src":"13314:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:14"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3199,"src":"13356:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:14"},"scope":3344,"src":"13284:251:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3285,"nodeType":"Block","src":"13855:600:14","statements":[{"assignments":[3208],"declarations":[{"constant":false,"id":3208,"mutability":"mutable","name":"result","nameLocation":"13873:6:14","nodeType":"VariableDeclaration","scope":3285,"src":"13865:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3210,"initialValue":{"hexValue":"30","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:14"},{"id":3282,"nodeType":"UncheckedBlock","src":"13893:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13921:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3225,"nodeType":"IfStatement","src":"13917:98:14","trueBody":{"id":3224,"nodeType":"Block","src":"13939:76:14","statements":[{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13957:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"13957:13:14"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"13988:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3223,"nodeType":"ExpressionStatement","src":"13988:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14032:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3240,"nodeType":"IfStatement","src":"14028:95:14","trueBody":{"id":3239,"nodeType":"Block","src":"14049:74:14","statements":[{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14067:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"14067:12:14"},{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"14097:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3238,"nodeType":"ExpressionStatement","src":"14097:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14140:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"14136:95:14","trueBody":{"id":3254,"nodeType":"Block","src":"14157:74:14","statements":[{"expression":{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14175:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3249,"nodeType":"ExpressionStatement","src":"14175:12:14"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"14205:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3253,"nodeType":"ExpressionStatement","src":"14205:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14248:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"14244:95:14","trueBody":{"id":3269,"nodeType":"Block","src":"14265:74:14","statements":[{"expression":{"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14283:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3264,"nodeType":"ExpressionStatement","src":"14283:12:14"},{"expression":{"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"14313:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3268,"nodeType":"ExpressionStatement","src":"14313:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14356:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3281,"nodeType":"IfStatement","src":"14352:64:14","trueBody":{"id":3280,"nodeType":"Block","src":"14372:44:14","statements":[{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"14390:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ExpressionStatement","src":"14390:11:14"}]}}]},{"expression":{"id":3283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"14442:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3206,"id":3284,"nodeType":"Return","src":"14435:13:14"}]},"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"13541:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3286,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:14","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"value","nameLocation":"13816:5:14","nodeType":"VariableDeclaration","scope":3286,"src":"13808:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:14"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3286,"src":"13846:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:14"},"scope":3344,"src":"13792:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3323,"nodeType":"Block","src":"14692:177:14","statements":[{"id":3322,"nodeType":"UncheckedBlock","src":"14702:161:14","statements":[{"assignments":[3298],"declarations":[{"constant":false,"id":3298,"mutability":"mutable","name":"result","nameLocation":"14734:6:14","nodeType":"VariableDeclaration","scope":3322,"src":"14726:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3302,"initialValue":{"arguments":[{"id":3300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"14750:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3299,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3286,3324],"referencedDeclaration":3286,"src":"14743:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"14777:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3305,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"14804:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}],"id":3304,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"14787:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2301_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"14823:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"14838:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:14","trueExpression":{"hexValue":"31","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3296,"id":3321,"nodeType":"Return","src":"14770:82:14"}]}]},"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"14461:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:14","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"value","nameLocation":"14634:5:14","nodeType":"VariableDeclaration","scope":3324,"src":"14626:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:14","nodeType":"VariableDeclaration","scope":3324,"src":"14641:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"},"typeName":{"id":3291,"nodeType":"UserDefinedTypeName","pathNode":{"id":3290,"name":"Rounding","nameLocations":["14641:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"14641:8:14"},"referencedDeclaration":2301,"src":"14641:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:14"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"14683:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:14"},"scope":3344,"src":"14610:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3342,"nodeType":"Block","src":"15067:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3335,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"15090:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3333,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:14","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3332,"id":3341,"nodeType":"Return","src":"15077:31:14"}]},"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"14875:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:14","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:14","nodeType":"VariableDeclaration","scope":3343,"src":"15019:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"},"typeName":{"id":3327,"nodeType":"UserDefinedTypeName","pathNode":{"id":3326,"name":"Rounding","nameLocations":["15019:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"15019:8:14"},"referencedDeclaration":2301,"src":"15019:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2301","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:14"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3343,"src":"15061:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3330,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:14"},"scope":3344,"src":"14993:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3345,"src":"203:14914:14","usedErrors":[2296],"usedEvents":[]}],"src":"103:15015:14"},"id":14},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3449]},"id":3450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3346,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"135:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3449,"linearizedBaseContracts":[3449],"name":"SignedMath","nameLocation":"224:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3364,"nodeType":"Block","src":"376:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"393:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"397:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"405:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:15","trueExpression":{"id":3360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"401:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3356,"id":3363,"nodeType":"Return","src":"386:20:15"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"241:66:15","text":" @dev Returns the largest of two signed numbers."},"id":3365,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:15","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"a","nameLocation":"332:1:15","nodeType":"VariableDeclaration","scope":3365,"src":"325:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3349,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"b","nameLocation":"342:1:15","nodeType":"VariableDeclaration","scope":3365,"src":"335:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3351,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:15"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3365,"src":"368:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3354,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:15"},"scope":3449,"src":"312:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3382,"nodeType":"Block","src":"555:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"572:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"576:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3379,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"584:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:15","trueExpression":{"id":3378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"580:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3374,"id":3381,"nodeType":"Return","src":"565:20:15"}]},"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"419:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":3383,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:15","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"a","nameLocation":"511:1:15","nodeType":"VariableDeclaration","scope":3383,"src":"504:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3367,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"b","nameLocation":"521:1:15","nodeType":"VariableDeclaration","scope":3383,"src":"514:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3369,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:15"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3383,"src":"547:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3372,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:15"},"scope":3449,"src":"491:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"797:162:15","statements":[{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"x","nameLocation":"866:1:15","nodeType":"VariableDeclaration","scope":3426,"src":"859:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3393,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3407,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"871:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"875:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"882:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"886:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3408,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"911:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3413,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:15","typeDescriptions":{}}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3409,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:15","typeDescriptions":{}}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"949:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3392,"id":3425,"nodeType":"Return","src":"904:48:15"}]},"documentation":{"id":3384,"nodeType":"StructuredDocumentation","src":"598:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:15","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"a","nameLocation":"753:1:15","nodeType":"VariableDeclaration","scope":3427,"src":"746:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3385,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"b","nameLocation":"763:1:15","nodeType":"VariableDeclaration","scope":3427,"src":"756:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3387,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:15"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"789:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3390,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:15"},"scope":3449,"src":"729:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3447,"nodeType":"Block","src":"1103:158:15","statements":[{"id":3446,"nodeType":"UncheckedBlock","src":"1113:142:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"1228:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:15","subExpression":{"id":3441,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"1242:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:15","trueExpression":{"id":3440,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"1237:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:15","typeDescriptions":{}}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3434,"id":3445,"nodeType":"Return","src":"1213:31:15"}]}]},"documentation":{"id":3428,"nodeType":"StructuredDocumentation","src":"965:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3448,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:15","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"n","nameLocation":"1068:1:15","nodeType":"VariableDeclaration","scope":3448,"src":"1061:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3429,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:15"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3448,"src":"1094:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:15"},"scope":3449,"src":"1048:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3450,"src":"216:1047:15","usedErrors":[],"usedEvents":[]}],"src":"109:1155:15"},"id":15},"contracts/ERC1155Token.sol":{"ast":{"absolutePath":"contracts/ERC1155Token.sol","exportedSymbols":{"Arrays":[1867],"Context":[1889],"ERC1155":[1335],"ERC1155Burnable":[1580],"ERC1155Token":[3560],"ERC1155URIStorage":[1668],"ERC165":[2278],"IERC1155":[1458],"IERC1155Errors":[284],"IERC1155MetadataURI":[1684],"IERC1155Receiver":[1500],"IERC165":[2290],"Math":[3344],"Ownable":[147],"SignedMath":[3449],"Strings":[2254]},"id":3561,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3451,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"39:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":3452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3561,"sourceUnit":1336,"src":"67:59:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3561,"sourceUnit":148,"src":"128:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":3454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3561,"sourceUnit":1581,"src":"182:78:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol","id":3455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3561,"sourceUnit":1669,"src":"262:80:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":3456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3561,"sourceUnit":2255,"src":"344:51:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3457,"name":"ERC1155","nameLocations":["424:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"424:7:16"},"id":3458,"nodeType":"InheritanceSpecifier","src":"424:7:16"},{"baseName":{"id":3459,"name":"Ownable","nameLocations":["433:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"433:7:16"},"id":3460,"nodeType":"InheritanceSpecifier","src":"433:7:16"},{"baseName":{"id":3461,"name":"ERC1155Burnable","nameLocations":["442:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"442:15:16"},"id":3462,"nodeType":"InheritanceSpecifier","src":"442:15:16"}],"canonicalName":"ERC1155Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3560,"linearizedBaseContracts":[3560,1580,147,1335,284,1684,1458,2278,2290,1889],"name":"ERC1155Token","nameLocation":"408:12:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d547cfb7","id":3464,"mutability":"mutable","name":"baseTokenURI","nameLocation":"479:12:16","nodeType":"VariableDeclaration","scope":3560,"src":"465:26:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3463,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":3474,"nodeType":"Block","src":"544:2:16","statements":[]},"id":3475,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"520:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":3468,"kind":"baseConstructorSpecifier","modifierName":{"id":3466,"name":"ERC1155","nameLocations":["512:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"512:7:16"},"nodeType":"ModifierInvocation","src":"512:11:16"},{"arguments":[{"expression":{"id":3470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"532:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"536:6:16","memberName":"sender","nodeType":"MemberAccess","src":"532:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3472,"kind":"baseConstructorSpecifier","modifierName":{"id":3469,"name":"Ownable","nameLocations":["524:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"524:7:16"},"nodeType":"ModifierInvocation","src":"524:19:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[],"src":"509:2:16"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[],"src":"544:0:16"},"scope":3560,"src":"498:48:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3490,"nodeType":"Block","src":"609:70:16","statements":[{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3482,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"620:12:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3483,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"633:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"620:19:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3485,"nodeType":"ExpressionStatement","src":"620:19:16"},{"expression":{"arguments":[{"id":3487,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"658:12:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3486,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"650:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"650:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"ExpressionStatement","src":"650:21:16"}]},"functionSelector":"02fe5305","id":3491,"implemented":true,"kind":"function","modifiers":[{"id":3480,"kind":"modifierInvocation","modifierName":{"id":3479,"name":"onlyOwner","nameLocations":["599:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"599:9:16"},"nodeType":"ModifierInvocation","src":"599:9:16"}],"name":"setURI","nameLocation":"563:6:16","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"newuri","nameLocation":"584:6:16","nodeType":"VariableDeclaration","scope":3491,"src":"570:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3476,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"569:22:16"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[],"src":"609:0:16"},"scope":3560,"src":"554:125:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[387],"body":{"id":3510,"nodeType":"Block","src":"756:93:16","statements":[{"expression":{"arguments":[{"id":3502,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"798:12:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":3505,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"828:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3503,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"811:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2254_$","typeString":"type(library Strings)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"819:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2067,"src":"811:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"811:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"833:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"784:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3499,"name":"string","nodeType":"ElementaryTypeName","src":"784:6:16","typeDescriptions":{}}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"791:6:16","memberName":"concat","nodeType":"MemberAccess","src":"784:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3498,"id":3509,"nodeType":"Return","src":"777:64:16"}]},"functionSelector":"0e89341c","id":3511,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"694:3:16","nodeType":"FunctionDefinition","overrides":{"id":3495,"nodeType":"OverrideSpecifier","overrides":[],"src":"723:8:16"},"parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"_id","nameLocation":"706:3:16","nodeType":"VariableDeclaration","scope":3511,"src":"698:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:13:16"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3511,"src":"741:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3496,"name":"string","nodeType":"ElementaryTypeName","src":"741:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"740:15:16"},"scope":3560,"src":"685:164:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3535,"nodeType":"Block","src":"951:69:16","statements":[{"expression":{"arguments":[{"id":3525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"968:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3526,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"977:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"981:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3528,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"989:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3524,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"962:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"962:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3530,"nodeType":"ExpressionStatement","src":"962:32:16"},{"expression":{"arguments":[{"id":3532,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"1009:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[3511],"referencedDeclaration":3511,"src":"1005:3:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1005:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3534,"nodeType":"ExpressionStatement","src":"1005:7:16"}]},"functionSelector":"731133e9","id":3536,"implemented":true,"kind":"function","modifiers":[{"id":3522,"kind":"modifierInvocation","modifierName":{"id":3521,"name":"onlyOwner","nameLocations":["942:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"942:9:16"},"nodeType":"ModifierInvocation","src":"942:9:16"}],"name":"mint","nameLocation":"866:4:16","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"account","nameLocation":"879:7:16","nodeType":"VariableDeclaration","scope":3536,"src":"871:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3512,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"id","nameLocation":"896:2:16","nodeType":"VariableDeclaration","scope":3536,"src":"888:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3517,"mutability":"mutable","name":"amount","nameLocation":"908:6:16","nodeType":"VariableDeclaration","scope":3536,"src":"900:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"900:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3519,"mutability":"mutable","name":"data","nameLocation":"929:4:16","nodeType":"VariableDeclaration","scope":3536,"src":"916:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3518,"name":"bytes","nodeType":"ElementaryTypeName","src":"916:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"870:64:16"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[],"src":"951:0:16"},"scope":3560,"src":"857:163:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3558,"nodeType":"Block","src":"1142:53:16","statements":[{"expression":{"arguments":[{"id":3552,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"1164:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3553,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"1168:3:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3554,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"1173:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3555,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"1182:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3551,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"1153:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3557,"nodeType":"ExpressionStatement","src":"1153:34:16"}]},"functionSelector":"1f7fdffa","id":3559,"implemented":true,"kind":"function","modifiers":[{"id":3549,"kind":"modifierInvocation","modifierName":{"id":3548,"name":"onlyOwner","nameLocations":["1133:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1133:9:16"},"nodeType":"ModifierInvocation","src":"1133:9:16"}],"name":"mintBatch","nameLocation":"1037:9:16","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"to","nameLocation":"1055:2:16","nodeType":"VariableDeclaration","scope":3559,"src":"1047:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3537,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3541,"mutability":"mutable","name":"ids","nameLocation":"1076:3:16","nodeType":"VariableDeclaration","scope":3559,"src":"1059:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3540,"nodeType":"ArrayTypeName","src":"1059:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"amounts","nameLocation":"1098:7:16","nodeType":"VariableDeclaration","scope":3559,"src":"1081:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1081:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3543,"nodeType":"ArrayTypeName","src":"1081:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"data","nameLocation":"1120:4:16","nodeType":"VariableDeclaration","scope":3559,"src":"1107:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3545,"name":"bytes","nodeType":"ElementaryTypeName","src":"1107:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1046:79:16"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[],"src":"1142:0:16"},"scope":3560,"src":"1028:167:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3561,"src":"399:799:16","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1355,1370,1379,1386]}],"src":"39:1159:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol":{"ERC1155URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with storage based token URI management. Inspired by the ERC721URIStorage extension\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the concatenation of the `_baseURI` and the token-specific uri if the latter is set This enables the following behaviors: - if `_tokenURIs[tokenId]` is set, then the result is the concatenation   of `_baseURI` and `_tokenURIs[tokenId]` (keep in mind that `_baseURI`   is empty per default); - if `_tokenURIs[tokenId]` is NOT set then we fallback to `super.uri()`   which in most cases will contain `ERC1155._uri`; - if `_tokenURIs[tokenId]` is NOT set, and if the parents do not have a   uri value set, then the result is empty.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":\"ERC1155URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0xb4eb1c685e07054beaab5d980a18dec0ea59470154fa1ef847f8cfb6ddc1f543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cea55f4390e3c35e08616bb3c4932ab54157eb60e3939798860b26bdd62fac0\",\"dweb:/ipfs/QmWTMWhGVPnaGhwExT8618GSqm2gejaf8yanp9fjsd8oQS\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1628d4e1a7dcf0af39a3793f82bb6010f1783e1a267f5a9c899c235b161af2a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH3 0x8D4E1A PUSH30 0xCF0AF39A3793F82BB6010F1783E1A267F5A9C899C235B161AF2A64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"276:4526:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1628d4e1a7dcf0af39a3793f82bb6010f1783e1a267f5a9c899c235b161af2a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH3 0x8D4E1A PUSH30 0xCF0AF39A3793F82BB6010F1783E1A267F5A9C899C235B161AF2A64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"276:4526:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/ERC1155Token.sol":{"ERC1155Token":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_345":{"entryPoint":null,"id":345,"parameterSlots":1,"returnSlots":0},"@_3475":{"entryPoint":null,"id":3475,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_setURI_958":{"entryPoint":194,"id":958,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":215,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":465,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":482,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":669,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":511,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":990,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":445,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":413,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":825,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1145,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":690,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":616,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1115,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":815,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1083,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":569,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":522,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":865,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":706,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1070,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":923,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":719,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":875,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":918,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:17","statements":[{"nodeType":"YulAssignment","src":"62:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:17"},"nodeType":"YulFunctionCall","src":"73:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:126:17"},{"body":{"nodeType":"YulBlock","src":"184:51:17","statements":[{"nodeType":"YulAssignment","src":"194:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:17"},"nodeType":"YulFunctionCall","src":"205:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:17","type":""}],"src":"139:96:17"},{"body":{"nodeType":"YulBlock","src":"306:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:17"},"nodeType":"YulFunctionCall","src":"328:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:17"},"nodeType":"YulFunctionCall","src":"316:37:17"},"nodeType":"YulExpressionStatement","src":"316:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:17","type":""}],"src":"241:118:17"},{"body":{"nodeType":"YulBlock","src":"463:124:17","statements":[{"nodeType":"YulAssignment","src":"473:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:17"},"nodeType":"YulFunctionCall","src":"481:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:17"},"nodeType":"YulFunctionCall","src":"562:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:17"},"nodeType":"YulFunctionCall","src":"509:71:17"},"nodeType":"YulExpressionStatement","src":"509:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:17","type":""}],"src":"365:222:17"},{"body":{"nodeType":"YulBlock","src":"652:40:17","statements":[{"nodeType":"YulAssignment","src":"663:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"679:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"673:5:17"},"nodeType":"YulFunctionCall","src":"673:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"663:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"635:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"645:6:17","type":""}],"src":"593:99:17"},{"body":{"nodeType":"YulBlock","src":"726:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"743:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"746:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"736:6:17"},"nodeType":"YulFunctionCall","src":"736:88:17"},"nodeType":"YulExpressionStatement","src":"736:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"840:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"833:6:17"},"nodeType":"YulFunctionCall","src":"833:15:17"},"nodeType":"YulExpressionStatement","src":"833:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"864:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"867:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"857:6:17"},"nodeType":"YulFunctionCall","src":"857:15:17"},"nodeType":"YulExpressionStatement","src":"857:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"698:180:17"},{"body":{"nodeType":"YulBlock","src":"912:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"929:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"932:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"922:6:17"},"nodeType":"YulFunctionCall","src":"922:88:17"},"nodeType":"YulExpressionStatement","src":"922:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1029:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1019:6:17"},"nodeType":"YulFunctionCall","src":"1019:15:17"},"nodeType":"YulExpressionStatement","src":"1019:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1050:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1053:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1043:6:17"},"nodeType":"YulFunctionCall","src":"1043:15:17"},"nodeType":"YulExpressionStatement","src":"1043:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"884:180:17"},{"body":{"nodeType":"YulBlock","src":"1121:269:17","statements":[{"nodeType":"YulAssignment","src":"1131:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1145:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1141:3:17"},"nodeType":"YulFunctionCall","src":"1141:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1131:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"1162:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1192:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1198:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1188:3:17"},"nodeType":"YulFunctionCall","src":"1188:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1166:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1239:51:17","statements":[{"nodeType":"YulAssignment","src":"1253:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1267:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1275:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1263:3:17"},"nodeType":"YulFunctionCall","src":"1263:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1253:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1219:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1212:6:17"},"nodeType":"YulFunctionCall","src":"1212:26:17"},"nodeType":"YulIf","src":"1209:81:17"},{"body":{"nodeType":"YulBlock","src":"1342:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1356:16:17"},"nodeType":"YulFunctionCall","src":"1356:18:17"},"nodeType":"YulExpressionStatement","src":"1356:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1306:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1329:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1326:2:17"},"nodeType":"YulFunctionCall","src":"1326:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1303:2:17"},"nodeType":"YulFunctionCall","src":"1303:38:17"},"nodeType":"YulIf","src":"1300:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1105:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1114:6:17","type":""}],"src":"1070:320:17"},{"body":{"nodeType":"YulBlock","src":"1450:87:17","statements":[{"nodeType":"YulAssignment","src":"1460:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1468:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1460:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1488:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1491:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:17"},"nodeType":"YulFunctionCall","src":"1481:14:17"},"nodeType":"YulExpressionStatement","src":"1481:14:17"},{"nodeType":"YulAssignment","src":"1504:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1525:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1512:9:17"},"nodeType":"YulFunctionCall","src":"1512:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1504:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1437:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1445:4:17","type":""}],"src":"1396:141:17"},{"body":{"nodeType":"YulBlock","src":"1587:49:17","statements":[{"nodeType":"YulAssignment","src":"1597:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1615:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1622:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:17"},"nodeType":"YulFunctionCall","src":"1611:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"1627:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1607:3:17"},"nodeType":"YulFunctionCall","src":"1607:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1597:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1580:6:17","type":""}],"src":"1543:93:17"},{"body":{"nodeType":"YulBlock","src":"1695:54:17","statements":[{"nodeType":"YulAssignment","src":"1705:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1730:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"1736:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1726:3:17"},"nodeType":"YulFunctionCall","src":"1726:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1705:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1670:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"1676:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1686:8:17","type":""}],"src":"1642:107:17"},{"body":{"nodeType":"YulBlock","src":"1831:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1841:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1862:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1874:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1858:3:17"},"nodeType":"YulFunctionCall","src":"1858:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1845:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1885:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1916:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1927:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1897:18:17"},"nodeType":"YulFunctionCall","src":"1897:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1889:4:17","type":""}]},{"nodeType":"YulAssignment","src":"2003:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2034:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2045:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2015:18:17"},"nodeType":"YulFunctionCall","src":"2015:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2003:8:17"}]},{"nodeType":"YulAssignment","src":"2063:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2076:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2087:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2083:3:17"},"nodeType":"YulFunctionCall","src":"2083:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2072:3:17"},"nodeType":"YulFunctionCall","src":"2072:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2063:5:17"}]},{"nodeType":"YulAssignment","src":"2102:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2115:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2126:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"2136:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2122:3:17"},"nodeType":"YulFunctionCall","src":"2122:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2112:2:17"},"nodeType":"YulFunctionCall","src":"2112:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2102:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1792:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1799:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1811:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1824:6:17","type":""}],"src":"1755:393:17"},{"body":{"nodeType":"YulBlock","src":"2199:32:17","statements":[{"nodeType":"YulAssignment","src":"2209:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2220:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2209:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2181:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2191:7:17","type":""}],"src":"2154:77:17"},{"body":{"nodeType":"YulBlock","src":"2269:28:17","statements":[{"nodeType":"YulAssignment","src":"2279:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2286:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2279:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2255:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2265:3:17","type":""}],"src":"2237:60:17"},{"body":{"nodeType":"YulBlock","src":"2363:82:17","statements":[{"nodeType":"YulAssignment","src":"2373:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2431:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2413:17:17"},"nodeType":"YulFunctionCall","src":"2413:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2404:8:17"},"nodeType":"YulFunctionCall","src":"2404:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2386:17:17"},"nodeType":"YulFunctionCall","src":"2386:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2373:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2343:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2353:9:17","type":""}],"src":"2303:142:17"},{"body":{"nodeType":"YulBlock","src":"2498:28:17","statements":[{"nodeType":"YulAssignment","src":"2508:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2515:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2508:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2484:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2494:3:17","type":""}],"src":"2451:75:17"},{"body":{"nodeType":"YulBlock","src":"2608:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2618:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2673:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2642:30:17"},"nodeType":"YulFunctionCall","src":"2642:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2622:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2697:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2737:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2731:5:17"},"nodeType":"YulFunctionCall","src":"2731:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2776:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2752:23:17"},"nodeType":"YulFunctionCall","src":"2752:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2703:27:17"},"nodeType":"YulFunctionCall","src":"2703:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2690:6:17"},"nodeType":"YulFunctionCall","src":"2690:105:17"},"nodeType":"YulExpressionStatement","src":"2690:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2585:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2591:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2599:7:17","type":""}],"src":"2532:269:17"},{"body":{"nodeType":"YulBlock","src":"2856:24:17","statements":[{"nodeType":"YulAssignment","src":"2866:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2873:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2866:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2852:3:17","type":""}],"src":"2807:73:17"},{"body":{"nodeType":"YulBlock","src":"2939:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2949:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2963:30:17"},"nodeType":"YulFunctionCall","src":"2963:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2953:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3048:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3054:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3062:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3004:43:17"},"nodeType":"YulFunctionCall","src":"3004:65:17"},"nodeType":"YulExpressionStatement","src":"3004:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2925:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2931:6:17","type":""}],"src":"2886:189:17"},{"body":{"nodeType":"YulBlock","src":"3131:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"3198:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3242:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3212:29:17"},"nodeType":"YulFunctionCall","src":"3212:39:17"},"nodeType":"YulExpressionStatement","src":"3212:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3151:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"3158:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3148:2:17"},"nodeType":"YulFunctionCall","src":"3148:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3163:26:17","statements":[{"nodeType":"YulAssignment","src":"3165:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3178:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3185:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:17"},"nodeType":"YulFunctionCall","src":"3174:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3165:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3145:2:17","statements":[]},"src":"3141:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3119:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"3126:3:17","type":""}],"src":"3081:186:17"},{"body":{"nodeType":"YulBlock","src":"3352:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"3378:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3392:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3440:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"3408:31:17"},"nodeType":"YulFunctionCall","src":"3408:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3396:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3459:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3482:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3510:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3492:17:17"},"nodeType":"YulFunctionCall","src":"3492:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:17"},"nodeType":"YulFunctionCall","src":"3478:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3463:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3679:27:17","statements":[{"nodeType":"YulAssignment","src":"3681:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3696:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3681:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3663:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3660:2:17"},"nodeType":"YulFunctionCall","src":"3660:18:17"},"nodeType":"YulIf","src":"3657:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3748:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3765:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3793:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3775:17:17"},"nodeType":"YulFunctionCall","src":"3775:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:17"},"nodeType":"YulFunctionCall","src":"3761:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3719:28:17"},"nodeType":"YulFunctionCall","src":"3719:80:17"},"nodeType":"YulExpressionStatement","src":"3719:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3369:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3366:2:17"},"nodeType":"YulFunctionCall","src":"3366:11:17"},"nodeType":"YulIf","src":"3363:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3328:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"3335:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3340:10:17","type":""}],"src":"3273:543:17"},{"body":{"nodeType":"YulBlock","src":"3885:54:17","statements":[{"nodeType":"YulAssignment","src":"3895:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3920:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"3926:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3916:3:17"},"nodeType":"YulFunctionCall","src":"3916:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3895:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3860:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"3866:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3876:8:17","type":""}],"src":"3822:117:17"},{"body":{"nodeType":"YulBlock","src":"3996:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4006:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4055:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4058:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4051:3:17"},"nodeType":"YulFunctionCall","src":"4051:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4066:3:17"},"nodeType":"YulFunctionCall","src":"4066:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4022:28:17"},"nodeType":"YulFunctionCall","src":"4022:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4018:3:17"},"nodeType":"YulFunctionCall","src":"4018:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4010:4:17","type":""}]},{"nodeType":"YulAssignment","src":"4083:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4097:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"4103:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4093:3:17"},"nodeType":"YulFunctionCall","src":"4093:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4083:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3973:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3979:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3989:6:17","type":""}],"src":"3945:169:17"},{"body":{"nodeType":"YulBlock","src":"4200:214:17","statements":[{"nodeType":"YulAssignment","src":"4333:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4360:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"4366:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4341:18:17"},"nodeType":"YulFunctionCall","src":"4341:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4333:4:17"}]},{"nodeType":"YulAssignment","src":"4379:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4390:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4400:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"4403:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4396:3:17"},"nodeType":"YulFunctionCall","src":"4396:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4387:2:17"},"nodeType":"YulFunctionCall","src":"4387:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4379:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4181:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"4187:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4195:4:17","type":""}],"src":"4119:295:17"},{"body":{"nodeType":"YulBlock","src":"4511:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4522:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4569:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4536:32:17"},"nodeType":"YulFunctionCall","src":"4536:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4526:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4658:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4660:16:17"},"nodeType":"YulFunctionCall","src":"4660:18:17"},"nodeType":"YulExpressionStatement","src":"4660:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4630:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4638:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4627:2:17"},"nodeType":"YulFunctionCall","src":"4627:30:17"},"nodeType":"YulIf","src":"4624:56:17"},{"nodeType":"YulVariableDeclaration","src":"4690:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4736:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4730:5:17"},"nodeType":"YulFunctionCall","src":"4730:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4704:25:17"},"nodeType":"YulFunctionCall","src":"4704:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4694:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4835:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4841:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4849:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4789:45:17"},"nodeType":"YulFunctionCall","src":"4789:67:17"},"nodeType":"YulExpressionStatement","src":"4789:67:17"},{"nodeType":"YulVariableDeclaration","src":"4866:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4883:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4870:9:17","type":""}]},{"nodeType":"YulAssignment","src":"4894:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4907:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4894:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4958:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4972:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4991:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5003:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4999:3:17"},"nodeType":"YulFunctionCall","src":"4999:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:17"},"nodeType":"YulFunctionCall","src":"4987:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4976:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5023:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5069:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5037:31:17"},"nodeType":"YulFunctionCall","src":"5037:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5027:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5087:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5096:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5091:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5155:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5180:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5198:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5203:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5194:3:17"},"nodeType":"YulFunctionCall","src":"5194:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5188:5:17"},"nodeType":"YulFunctionCall","src":"5188:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5173:6:17"},"nodeType":"YulFunctionCall","src":"5173:42:17"},"nodeType":"YulExpressionStatement","src":"5173:42:17"},{"nodeType":"YulAssignment","src":"5232:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5246:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5254:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5242:3:17"},"nodeType":"YulFunctionCall","src":"5242:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5232:6:17"}]},{"nodeType":"YulAssignment","src":"5273:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5290:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5301:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:17"},"nodeType":"YulFunctionCall","src":"5286:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5273:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5121:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5124:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5118:2:17"},"nodeType":"YulFunctionCall","src":"5118:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5133:21:17","statements":[{"nodeType":"YulAssignment","src":"5135:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5144:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"5147:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:17"},"nodeType":"YulFunctionCall","src":"5140:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5135:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5114:3:17","statements":[]},"src":"5110:208:17"},{"body":{"nodeType":"YulBlock","src":"5354:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5372:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5399:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5404:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:17"},"nodeType":"YulFunctionCall","src":"5395:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5389:5:17"},"nodeType":"YulFunctionCall","src":"5389:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5376:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5439:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5466:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5481:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5489:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5477:3:17"},"nodeType":"YulFunctionCall","src":"5477:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5447:18:17"},"nodeType":"YulFunctionCall","src":"5447:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5432:6:17"},"nodeType":"YulFunctionCall","src":"5432:64:17"},"nodeType":"YulExpressionStatement","src":"5432:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5337:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"5346:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5334:2:17"},"nodeType":"YulFunctionCall","src":"5334:19:17"},"nodeType":"YulIf","src":"5331:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5530:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5544:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5552:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5540:3:17"},"nodeType":"YulFunctionCall","src":"5540:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:17"},"nodeType":"YulFunctionCall","src":"5536:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5523:6:17"},"nodeType":"YulFunctionCall","src":"5523:36:17"},"nodeType":"YulExpressionStatement","src":"5523:36:17"}]},"nodeType":"YulCase","src":"4951:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4956:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5586:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5613:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5604:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5637:67:17","statements":[{"nodeType":"YulAssignment","src":"5655:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5674:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5679:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:17"},"nodeType":"YulFunctionCall","src":"5670:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5664:5:17"},"nodeType":"YulFunctionCall","src":"5664:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5655:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5630:6:17"},"nodeType":"YulIf","src":"5627:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5724:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5783:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"5790:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5730:52:17"},"nodeType":"YulFunctionCall","src":"5730:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5717:6:17"},"nodeType":"YulFunctionCall","src":"5717:81:17"},"nodeType":"YulExpressionStatement","src":"5717:81:17"}]},"nodeType":"YulCase","src":"5578:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4931:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4939:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4928:2:17"},"nodeType":"YulFunctionCall","src":"4928:14:17"},"nodeType":"YulSwitch","src":"4921:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4500:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"4506:3:17","type":""}],"src":"4419:1395:17"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5033604051806020016040528060008152506200003481620000c260201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620001e2565b60405180910390fd5b620000bb81620000d760201b60201c565b5062000560565b8060029081620000d3919062000479565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ca826200019d565b9050919050565b620001dc81620001bd565b82525050565b6000602082019050620001f96000830184620001d1565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028157607f821691505b60208210810362000297576200029662000239565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c2565b6200030d8683620002c2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200035a620003546200034e8462000325565b6200032f565b62000325565b9050919050565b6000819050919050565b620003768362000339565b6200038e620003858262000361565b848454620002cf565b825550505050565b600090565b620003a562000396565b620003b28184846200036b565b505050565b5b81811015620003da57620003ce6000826200039b565b600181019050620003b8565b5050565b601f8211156200042957620003f3816200029d565b620003fe84620002b2565b810160208510156200040e578190505b620004266200041d85620002b2565b830182620003b7565b50505b505050565b600082821c905092915050565b60006200044e600019846008026200042e565b1980831691505092915050565b60006200046983836200043b565b9150826002028217905092915050565b6200048482620001ff565b67ffffffffffffffff811115620004a0576200049f6200020a565b5b620004ac825462000268565b620004b9828285620003de565b600060209050601f831160018114620004f15760008415620004dc578287015190505b620004e885826200045b565b86555062000558565b601f19841662000501866200029d565b60005b828110156200052b5784890151825560018201915060208501945060208101905062000504565b868310156200054b578489015162000547601f8916826200043b565b8355505b6001600288020188555050505b505050505050565b6130bf80620005706000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c8063715018a6116100a2578063d547cfb711610071578063d547cfb71461029f578063e985e9c5146102bd578063f242432a146102ed578063f2fde38b14610309578063f5298aca146103255761010a565b8063715018a61461023f578063731133e9146102495780638da5cb5b14610265578063a22cb465146102835761010a565b80631f7fdffa116100de5780631f7fdffa146101bb5780632eb2c2d6146101d75780634e1273f4146101f35780636b20c454146102235761010a565b8062fdd58e1461010f57806301ffc9a71461013f57806302fe53051461016f5780630e89341c1461018b575b600080fd5b61012960048036038101906101249190611dd8565b610341565b6040516101369190611e27565b60405180910390f35b61015960048036038101906101549190611e9a565b61039b565b6040516101669190611ee2565b60405180910390f35b61018960048036038101906101849190612043565b61047d565b005b6101a560048036038101906101a0919061208c565b61052b565b6040516101b29190612138565b60405180910390f35b6101d560048036038101906101d091906122c3565b61055f565b005b6101f160048036038101906101ec919061237e565b610579565b005b61020d60048036038101906102089190612510565b610621565b60405161021a9190612646565b60405180910390f35b61023d60048036038101906102389190612668565b610730565b005b6102476107dc565b005b610263600480360381019061025e91906126f3565b6107f0565b005b61026d610814565b60405161027a9190612785565b60405180910390f35b61029d600480360381019061029891906127cc565b61083e565b005b6102a7610854565b6040516102b49190612138565b60405180910390f35b6102d760048036038101906102d2919061280c565b6108e2565b6040516102e49190611ee2565b60405180910390f35b6103076004803603810190610302919061284c565b610976565b005b610323600480360381019061031e91906128e3565b610a1e565b005b61033f600480360381019061033a9190612910565b610aa4565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610476575061047582610b50565b5b9050919050565b610485610bba565b80600490816104949190612b6f565b50610528600480546104a590612992565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190612992565b801561051e5780601f106104f35761010080835404028352916020019161051e565b820191906000526020600020905b81548152906001019060200180831161050157829003601f168201915b5050505050610c41565b50565b6060600461053883610c54565b604051602001610549929190612d26565b6040516020818303038152906040529050919050565b610567610bba565b61057384848484610d22565b50505050565b6000610583610da8565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156105c857506105c686826108e2565b155b1561060c5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610603929190612d59565b60405180910390fd5b6106198686868686610db0565b505050505050565b6060815183511461066d57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610664929190612d82565b60405180910390fd5b6000835167ffffffffffffffff81111561068a57610689611f18565b5b6040519080825280602002602001820160405280156106b85781602001602082028036833780820191505090505b50905060005b8451811015610725576106f56106dd8287610ea890919063ffffffff16565b6106f08387610ebc90919063ffffffff16565b610341565b82828151811061070857610707612dab565b5b6020026020010181815250508061071e90612e09565b90506106be565b508091505092915050565b610738610da8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610781575061077f8361077a610da8565b6108e2565b155b156107cc5761078e610da8565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107c3929190612d59565b60405180910390fd5b6107d7838383610ed0565b505050565b6107e4610bba565b6107ee6000610f64565b565b6107f8610bba565b6108048484848461102a565b61080d8361052b565b5050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610850610849610da8565b83836110c3565b5050565b6004805461086190612992565b80601f016020809104026020016040519081016040528092919081815260200182805461088d90612992565b80156108da5780601f106108af576101008083540402835291602001916108da565b820191906000526020600020905b8154815290600101906020018083116108bd57829003601f168201915b505050505081565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610980610da8565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156109c557506109c386826108e2565b155b15610a095780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610a00929190612d59565b60405180910390fd5b610a168686868686611233565b505050505050565b610a26610bba565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a985760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a8f9190612785565b60405180910390fd5b610aa181610f64565b50565b610aac610da8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610af55750610af383610aee610da8565b6108e2565b155b15610b4057610b02610da8565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610b37929190612d59565b60405180910390fd5b610b4b83838361133e565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610bc2610da8565b73ffffffffffffffffffffffffffffffffffffffff16610be0610814565b73ffffffffffffffffffffffffffffffffffffffff1614610c3f57610c03610da8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c369190612785565b60405180910390fd5b565b8060029081610c509190612b6f565b5050565b606060006001610c63846113e5565b01905060008167ffffffffffffffff811115610c8257610c81611f18565b5b6040519080825280601f01601f191660200182016040528015610cb45781602001600182028036833780820191505090505b509050600082602001820190505b600115610d17578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610d0b57610d0a612e51565b5b04945060008503610cc2575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d945760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d8b9190612785565b60405180910390fd5b610da2600085858585611538565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e225760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610e199190612785565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e945760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610e8b9190612785565b60405180910390fd5b610ea18585858585611538565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f425760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f399190612785565b60405180910390fd5b610f5f836000848460405180602001604052806000815250611538565b505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361109c5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110939190612785565b60405180910390fd5b6000806110a985856115ea565b915091506110bb600087848487611538565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111355760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161112c9190612785565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112269190611ee2565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112a55760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161129c9190612785565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036113175760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161130e9190612785565b60405180910390fd5b60008061132485856115ea565b915091506113358787848487611538565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113b05760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016113a79190612785565b60405180910390fd5b6000806113bd84846115ea565b915091506113de856000848460405180602001604052806000815250611538565b5050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611443577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161143957611438612e51565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611480576d04ee2d6d415b85acef8100000000838161147657611475612e51565b5b0492506020810190505b662386f26fc1000083106114af57662386f26fc1000083816114a5576114a4612e51565b5b0492506010810190505b6305f5e10083106114d8576305f5e10083816114ce576114cd612e51565b5b0492506008810190505b61271083106114fd5761271083816114f3576114f2612e51565b5b0492506004810190505b60648310611520576064838161151657611515612e51565b5b0492506002810190505b600a831061152f576001810190505b80915050919050565b6115448585858561161a565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146115e3576000611582610da8565b905060018451036115d25760006115a3600086610ebc90919063ffffffff16565b905060006115bb600086610ebc90919063ffffffff16565b90506115cb8389898585896119c8565b50506115e1565b6115e0818787878787611b7c565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461166457815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161165b929190612d82565b60405180910390fd5b600061166e610da8565b905060005b83518110156118835760006116918286610ebc90919063ffffffff16565b905060006116a88386610ebc90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146117d557600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561177d57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016117749493929190612e80565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611870578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118689190612ec5565b925050819055505b50508061187c90612e09565b9050611673565b5060018351036119425760006118a3600085610ebc90919063ffffffff16565b905060006118bb600085610ebc90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611933929190612d82565b60405180910390a450506119c1565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516119b8929190612ef9565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611b74578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611a29959493929190612f85565b6020604051808303816000875af1925050508015611a6557506040513d601f19601f82011682018060405250810190611a629190612ff4565b60015b611ae9573d8060008114611a95576040519150601f19603f3d011682016040523d82523d6000602084013e611a9a565b606091505b506000815103611ae157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ad89190612785565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611b7257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611b699190612785565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611d28578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611bdd959493929190613021565b6020604051808303816000875af1925050508015611c1957506040513d601f19601f82011682018060405250810190611c169190612ff4565b60015b611c9d573d8060008114611c49576040519150601f19603f3d011682016040523d82523d6000602084013e611c4e565b606091505b506000815103611c9557846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611c8c9190612785565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d2657846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611d1d9190612785565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d6f82611d44565b9050919050565b611d7f81611d64565b8114611d8a57600080fd5b50565b600081359050611d9c81611d76565b92915050565b6000819050919050565b611db581611da2565b8114611dc057600080fd5b50565b600081359050611dd281611dac565b92915050565b60008060408385031215611def57611dee611d3a565b5b6000611dfd85828601611d8d565b9250506020611e0e85828601611dc3565b9150509250929050565b611e2181611da2565b82525050565b6000602082019050611e3c6000830184611e18565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e7781611e42565b8114611e8257600080fd5b50565b600081359050611e9481611e6e565b92915050565b600060208284031215611eb057611eaf611d3a565b5b6000611ebe84828501611e85565b91505092915050565b60008115159050919050565b611edc81611ec7565b82525050565b6000602082019050611ef76000830184611ed3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f5082611f07565b810181811067ffffffffffffffff82111715611f6f57611f6e611f18565b5b80604052505050565b6000611f82611d30565b9050611f8e8282611f47565b919050565b600067ffffffffffffffff821115611fae57611fad611f18565b5b611fb782611f07565b9050602081019050919050565b82818337600083830152505050565b6000611fe6611fe184611f93565b611f78565b90508281526020810184848401111561200257612001611f02565b5b61200d848285611fc4565b509392505050565b600082601f83011261202a57612029611efd565b5b813561203a848260208601611fd3565b91505092915050565b60006020828403121561205957612058611d3a565b5b600082013567ffffffffffffffff81111561207757612076611d3f565b5b61208384828501612015565b91505092915050565b6000602082840312156120a2576120a1611d3a565b5b60006120b084828501611dc3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120f35780820151818401526020810190506120d8565b60008484015250505050565b600061210a826120b9565b61211481856120c4565b93506121248185602086016120d5565b61212d81611f07565b840191505092915050565b6000602082019050818103600083015261215281846120ff565b905092915050565b600067ffffffffffffffff82111561217557612174611f18565b5b602082029050602081019050919050565b600080fd5b600061219e6121998461215a565b611f78565b905080838252602082019050602084028301858111156121c1576121c0612186565b5b835b818110156121ea57806121d68882611dc3565b8452602084019350506020810190506121c3565b5050509392505050565b600082601f83011261220957612208611efd565b5b813561221984826020860161218b565b91505092915050565b600067ffffffffffffffff82111561223d5761223c611f18565b5b61224682611f07565b9050602081019050919050565b600061226661226184612222565b611f78565b90508281526020810184848401111561228257612281611f02565b5b61228d848285611fc4565b509392505050565b600082601f8301126122aa576122a9611efd565b5b81356122ba848260208601612253565b91505092915050565b600080600080608085870312156122dd576122dc611d3a565b5b60006122eb87828801611d8d565b945050602085013567ffffffffffffffff81111561230c5761230b611d3f565b5b612318878288016121f4565b935050604085013567ffffffffffffffff81111561233957612338611d3f565b5b612345878288016121f4565b925050606085013567ffffffffffffffff81111561236657612365611d3f565b5b61237287828801612295565b91505092959194509250565b600080600080600060a0868803121561239a57612399611d3a565b5b60006123a888828901611d8d565b95505060206123b988828901611d8d565b945050604086013567ffffffffffffffff8111156123da576123d9611d3f565b5b6123e6888289016121f4565b935050606086013567ffffffffffffffff81111561240757612406611d3f565b5b612413888289016121f4565b925050608086013567ffffffffffffffff81111561243457612433611d3f565b5b61244088828901612295565b9150509295509295909350565b600067ffffffffffffffff82111561246857612467611f18565b5b602082029050602081019050919050565b600061248c6124878461244d565b611f78565b905080838252602082019050602084028301858111156124af576124ae612186565b5b835b818110156124d857806124c48882611d8d565b8452602084019350506020810190506124b1565b5050509392505050565b600082601f8301126124f7576124f6611efd565b5b8135612507848260208601612479565b91505092915050565b6000806040838503121561252757612526611d3a565b5b600083013567ffffffffffffffff81111561254557612544611d3f565b5b612551858286016124e2565b925050602083013567ffffffffffffffff81111561257257612571611d3f565b5b61257e858286016121f4565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6125bd81611da2565b82525050565b60006125cf83836125b4565b60208301905092915050565b6000602082019050919050565b60006125f382612588565b6125fd8185612593565b9350612608836125a4565b8060005b8381101561263957815161262088826125c3565b975061262b836125db565b92505060018101905061260c565b5085935050505092915050565b6000602082019050818103600083015261266081846125e8565b905092915050565b60008060006060848603121561268157612680611d3a565b5b600061268f86828701611d8d565b935050602084013567ffffffffffffffff8111156126b0576126af611d3f565b5b6126bc868287016121f4565b925050604084013567ffffffffffffffff8111156126dd576126dc611d3f565b5b6126e9868287016121f4565b9150509250925092565b6000806000806080858703121561270d5761270c611d3a565b5b600061271b87828801611d8d565b945050602061272c87828801611dc3565b935050604061273d87828801611dc3565b925050606085013567ffffffffffffffff81111561275e5761275d611d3f565b5b61276a87828801612295565b91505092959194509250565b61277f81611d64565b82525050565b600060208201905061279a6000830184612776565b92915050565b6127a981611ec7565b81146127b457600080fd5b50565b6000813590506127c6816127a0565b92915050565b600080604083850312156127e3576127e2611d3a565b5b60006127f185828601611d8d565b9250506020612802858286016127b7565b9150509250929050565b6000806040838503121561282357612822611d3a565b5b600061283185828601611d8d565b925050602061284285828601611d8d565b9150509250929050565b600080600080600060a0868803121561286857612867611d3a565b5b600061287688828901611d8d565b955050602061288788828901611d8d565b945050604061289888828901611dc3565b93505060606128a988828901611dc3565b925050608086013567ffffffffffffffff8111156128ca576128c9611d3f565b5b6128d688828901612295565b9150509295509295909350565b6000602082840312156128f9576128f8611d3a565b5b600061290784828501611d8d565b91505092915050565b60008060006060848603121561292957612928611d3a565b5b600061293786828701611d8d565b935050602061294886828701611dc3565b925050604061295986828701611dc3565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129aa57607f821691505b6020821081036129bd576129bc612963565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612a257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826129e8565b612a2f86836129e8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612a6c612a67612a6284611da2565b612a47565b611da2565b9050919050565b6000819050919050565b612a8683612a51565b612a9a612a9282612a73565b8484546129f5565b825550505050565b600090565b612aaf612aa2565b612aba818484612a7d565b505050565b5b81811015612ade57612ad3600082612aa7565b600181019050612ac0565b5050565b601f821115612b2357612af4816129c3565b612afd846129d8565b81016020851015612b0c578190505b612b20612b18856129d8565b830182612abf565b50505b505050565b600082821c905092915050565b6000612b4660001984600802612b28565b1980831691505092915050565b6000612b5f8383612b35565b9150826002028217905092915050565b612b78826120b9565b67ffffffffffffffff811115612b9157612b90611f18565b5b612b9b8254612992565b612ba6828285612ae2565b600060209050601f831160018114612bd95760008415612bc7578287015190505b612bd18582612b53565b865550612c39565b601f198416612be7866129c3565b60005b82811015612c0f57848901518255600182019150602085019450602081019050612bea565b86831015612c2c5784890151612c28601f891682612b35565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154612c5981612992565b612c638186612c41565b94506001821660008114612c7e5760018114612c9357612cc6565b60ff1983168652811515820286019350612cc6565b612c9c856129c3565b60005b83811015612cbe57815481890152600182019150602081019050612c9f565b838801955050505b50505092915050565b6000612cda826120b9565b612ce48185612c41565b9350612cf48185602086016120d5565b80840191505092915050565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815250565b6000612d328285612c4c565b9150612d3e8284612ccf565b9150612d4982612d00565b6005820191508190509392505050565b6000604082019050612d6e6000830185612776565b612d7b6020830184612776565b9392505050565b6000604082019050612d976000830185611e18565b612da46020830184611e18565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e1482611da2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e4657612e45612dda565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000608082019050612e956000830187612776565b612ea26020830186611e18565b612eaf6040830185611e18565b612ebc6060830184611e18565b95945050505050565b6000612ed082611da2565b9150612edb83611da2565b9250828201905080821115612ef357612ef2612dda565b5b92915050565b60006040820190508181036000830152612f1381856125e8565b90508181036020830152612f2781846125e8565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000612f5782612f30565b612f618185612f3b565b9350612f718185602086016120d5565b612f7a81611f07565b840191505092915050565b600060a082019050612f9a6000830188612776565b612fa76020830187612776565b612fb46040830186611e18565b612fc16060830185611e18565b8181036080830152612fd38184612f4c565b90509695505050505050565b600081519050612fee81611e6e565b92915050565b60006020828403121561300a57613009611d3a565b5b600061301884828501612fdf565b91505092915050565b600060a0820190506130366000830188612776565b6130436020830187612776565b818103604083015261305581866125e8565b9050818103606083015261306981856125e8565b9050818103608083015261307d8184612f4c565b9050969550505050505056fea2646970667358221220cea2f80ae3c28625a116cddbfb17602916328a037bcd71a76ea0b43c117c150664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x34 DUP2 PUSH3 0xC2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0xD7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x560 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD3 SWAP2 SWAP1 PUSH3 0x479 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CA DUP3 PUSH3 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1DC DUP2 PUSH3 0x1BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x281 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x297 JUMPI PUSH3 0x296 PUSH3 0x239 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x301 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2C2 JUMP JUMPDEST PUSH3 0x30D DUP7 DUP4 PUSH3 0x2C2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35A PUSH3 0x354 PUSH3 0x34E DUP5 PUSH3 0x325 JUMP JUMPDEST PUSH3 0x32F JUMP JUMPDEST PUSH3 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x376 DUP4 PUSH3 0x339 JUMP JUMPDEST PUSH3 0x38E PUSH3 0x385 DUP3 PUSH3 0x361 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2CF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A5 PUSH3 0x396 JUMP JUMPDEST PUSH3 0x3B2 DUP2 DUP5 DUP5 PUSH3 0x36B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3DA JUMPI PUSH3 0x3CE PUSH1 0x0 DUP3 PUSH3 0x39B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x429 JUMPI PUSH3 0x3F3 DUP2 PUSH3 0x29D JUMP JUMPDEST PUSH3 0x3FE DUP5 PUSH3 0x2B2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x426 PUSH3 0x41D DUP6 PUSH3 0x2B2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x469 DUP4 DUP4 PUSH3 0x43B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x484 DUP3 PUSH3 0x1FF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4A0 JUMPI PUSH3 0x49F PUSH3 0x20A JUMP JUMPDEST JUMPDEST PUSH3 0x4AC DUP3 SLOAD PUSH3 0x268 JUMP JUMPDEST PUSH3 0x4B9 DUP3 DUP3 DUP6 PUSH3 0x3DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4F1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4DC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E8 DUP6 DUP3 PUSH3 0x45B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x558 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x501 DUP7 PUSH3 0x29D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x52B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x504 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x54B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x547 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x43B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x30BF DUP1 PUSH3 0x570 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547CFB7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x325 JUMPI PUSH2 0x10A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x283 JUMPI PUSH2 0x10A JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x223 JUMPI PUSH2 0x10A JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x2910 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x466 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x476 JUMPI POP PUSH2 0x475 DUP3 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 PUSH2 0xBBA JUMP JUMPDEST DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST POP PUSH2 0x528 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4A5 SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x501 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xC41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH2 0x538 DUP4 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x549 SWAP3 SWAP2 SWAP1 PUSH2 0x2D26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x567 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x573 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI POP PUSH2 0x5C6 DUP7 DUP3 PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x60C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xDB0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x66D JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x664 SWAP3 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH2 0x6F5 PUSH2 0x6DD DUP3 DUP8 PUSH2 0xEA8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP8 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x71E SWAP1 PUSH2 0x2E09 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x738 PUSH2 0xDA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI POP PUSH2 0x77F DUP4 PUSH2 0x77A PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7CC JUMPI PUSH2 0x78E PUSH2 0xDA8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D7 DUP4 DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x7EE PUSH1 0x0 PUSH2 0xF64 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x804 DUP5 DUP5 DUP5 DUP5 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x80D DUP4 PUSH2 0x52B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x850 PUSH2 0x849 PUSH2 0xDA8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x861 SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88D SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI POP PUSH2 0x9C3 DUP7 DUP3 PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA09 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA00 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA16 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1233 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA26 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA98 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA1 DUP2 PUSH2 0xF64 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAAC PUSH2 0xDA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAF5 JUMPI POP PUSH2 0xAF3 DUP4 PUSH2 0xAEE PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB40 JUMPI PUSH2 0xB02 PUSH2 0xDA8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4B DUP4 DUP4 DUP4 PUSH2 0x133E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC2 PUSH2 0xDA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE0 PUSH2 0x814 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3F JUMPI PUSH2 0xC03 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xC63 DUP5 PUSH2 0x13E5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC81 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xD17 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xCC2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA2 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE22 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF39 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5F DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1093 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10A9 DUP6 DUP6 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10BB PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1135 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1317 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1324 DUP6 DUP6 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1335 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13BD DUP5 DUP5 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x13DE DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1443 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1439 JUMPI PUSH2 0x1438 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1480 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1476 JUMPI PUSH2 0x1475 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14AF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x14D8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14CE JUMPI PUSH2 0x14CD PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x14FD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1520 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x152F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1544 DUP6 DUP6 DUP6 DUP6 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15E3 JUMPI PUSH1 0x0 PUSH2 0x1582 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x15D2 JUMPI PUSH1 0x0 PUSH2 0x15A3 PUSH1 0x0 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15BB PUSH1 0x0 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x15CB DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x19C8 JUMP JUMPDEST POP POP PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x15E0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1664 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165B SWAP3 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x166E PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 PUSH2 0x1691 DUP3 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16A8 DUP4 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x177D JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1774 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1870 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1868 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x187C SWAP1 PUSH2 0x2E09 JUMP JUMPDEST SWAP1 POP PUSH2 0x1673 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1942 JUMPI PUSH1 0x0 PUSH2 0x18A3 PUSH1 0x0 DUP6 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18BB PUSH1 0x0 DUP6 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1933 SWAP3 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x19C1 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x19B8 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1B74 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A29 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A65 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AE9 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1AE1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1B72 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1D28 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3021 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C19 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C16 SWAP2 SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C9D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1C95 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D26 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1D SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7F DUP2 PUSH2 0x1D64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9C DUP2 PUSH2 0x1D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB5 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD2 DUP2 PUSH2 0x1DAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DEF JUMPI PUSH2 0x1DEE PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DFD DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E0E DUP6 DUP3 DUP7 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E21 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E77 DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E94 DUP2 PUSH2 0x1E6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EBE DUP5 DUP3 DUP6 ADD PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x1EC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F50 DUP3 PUSH2 0x1F07 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F6F JUMPI PUSH2 0x1F6E PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F82 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F8E DUP3 DUP3 PUSH2 0x1F47 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB7 DUP3 PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 PUSH2 0x1FE1 DUP5 PUSH2 0x1F93 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2002 JUMPI PUSH2 0x2001 PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x200D DUP5 DUP3 DUP6 PUSH2 0x1FC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x203A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2059 JUMPI PUSH2 0x2058 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2083 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A2 JUMPI PUSH2 0x20A1 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B0 DUP5 DUP3 DUP6 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210A DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x2114 DUP2 DUP6 PUSH2 0x20C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2124 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x212D DUP2 PUSH2 0x1F07 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2152 DUP2 DUP5 PUSH2 0x20FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x219E PUSH2 0x2199 DUP5 PUSH2 0x215A JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x21C0 PUSH2 0x2186 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21EA JUMPI DUP1 PUSH2 0x21D6 DUP9 DUP3 PUSH2 0x1DC3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21C3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2209 JUMPI PUSH2 0x2208 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2219 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x218B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x223D JUMPI PUSH2 0x223C PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH2 0x2246 DUP3 PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2266 PUSH2 0x2261 DUP5 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2282 JUMPI PUSH2 0x2281 PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x228D DUP5 DUP3 DUP6 PUSH2 0x1FC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22DD JUMPI PUSH2 0x22DC PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22EB DUP8 DUP3 DUP9 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230C JUMPI PUSH2 0x230B PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2318 DUP8 DUP3 DUP9 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2339 JUMPI PUSH2 0x2338 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2345 DUP8 DUP3 DUP9 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2372 DUP8 DUP3 DUP9 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x239A JUMPI PUSH2 0x2399 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A8 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23B9 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23DA JUMPI PUSH2 0x23D9 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x23E6 DUP9 DUP3 DUP10 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2407 JUMPI PUSH2 0x2406 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2413 DUP9 DUP3 DUP10 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2433 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2440 DUP9 DUP3 DUP10 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C PUSH2 0x2487 DUP5 PUSH2 0x244D JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x24AF JUMPI PUSH2 0x24AE PUSH2 0x2186 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24D8 JUMPI DUP1 PUSH2 0x24C4 DUP9 DUP3 PUSH2 0x1D8D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24B1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24F7 JUMPI PUSH2 0x24F6 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2507 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2527 JUMPI PUSH2 0x2526 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2551 DUP6 DUP3 DUP7 ADD PUSH2 0x24E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2572 JUMPI PUSH2 0x2571 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x257E DUP6 DUP3 DUP7 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25BD DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CF DUP4 DUP4 PUSH2 0x25B4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F3 DUP3 PUSH2 0x2588 JUMP JUMPDEST PUSH2 0x25FD DUP2 DUP6 PUSH2 0x2593 JUMP JUMPDEST SWAP4 POP PUSH2 0x2608 DUP4 PUSH2 0x25A4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2639 JUMPI DUP2 MLOAD PUSH2 0x2620 DUP9 DUP3 PUSH2 0x25C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x262B DUP4 PUSH2 0x25DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x260C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2660 DUP2 DUP5 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2681 JUMPI PUSH2 0x2680 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x268F DUP7 DUP3 DUP8 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B0 JUMPI PUSH2 0x26AF PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x26BC DUP7 DUP3 DUP8 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26DD JUMPI PUSH2 0x26DC PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x26E9 DUP7 DUP3 DUP8 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x270D JUMPI PUSH2 0x270C PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x271B DUP8 DUP3 DUP9 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x272C DUP8 DUP3 DUP9 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x273D DUP8 DUP3 DUP9 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x275E JUMPI PUSH2 0x275D PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x276A DUP8 DUP3 DUP9 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x277F DUP2 PUSH2 0x1D64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x279A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27A9 DUP2 PUSH2 0x1EC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x27B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C6 DUP2 PUSH2 0x27A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E3 JUMPI PUSH2 0x27E2 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2802 DUP6 DUP3 DUP7 ADD PUSH2 0x27B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x2822 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2831 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2842 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2868 JUMPI PUSH2 0x2867 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2876 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2887 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2898 DUP9 DUP3 DUP10 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x28A9 DUP9 DUP3 DUP10 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28CA JUMPI PUSH2 0x28C9 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x28D6 DUP9 DUP3 DUP10 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F9 JUMPI PUSH2 0x28F8 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2907 DUP5 DUP3 DUP6 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2929 JUMPI PUSH2 0x2928 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2937 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2948 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2959 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29BD JUMPI PUSH2 0x29BC PUSH2 0x2963 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2A25 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29E8 JUMP JUMPDEST PUSH2 0x2A2F DUP7 DUP4 PUSH2 0x29E8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6C PUSH2 0x2A67 PUSH2 0x2A62 DUP5 PUSH2 0x1DA2 JUMP JUMPDEST PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A86 DUP4 PUSH2 0x2A51 JUMP JUMPDEST PUSH2 0x2A9A PUSH2 0x2A92 DUP3 PUSH2 0x2A73 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x29F5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2AAF PUSH2 0x2AA2 JUMP JUMPDEST PUSH2 0x2ABA DUP2 DUP5 DUP5 PUSH2 0x2A7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2ADE JUMPI PUSH2 0x2AD3 PUSH1 0x0 DUP3 PUSH2 0x2AA7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2AC0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2AF4 DUP2 PUSH2 0x29C3 JUMP JUMPDEST PUSH2 0x2AFD DUP5 PUSH2 0x29D8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B0C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2B20 PUSH2 0x2B18 DUP6 PUSH2 0x29D8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2ABF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B46 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B28 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5F DUP4 DUP4 PUSH2 0x2B35 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B78 DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B91 JUMPI PUSH2 0x2B90 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH2 0x2B9B DUP3 SLOAD PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2BA6 DUP3 DUP3 DUP6 PUSH2 0x2AE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2BD9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2BC7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2BD1 DUP6 DUP3 PUSH2 0x2B53 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2BE7 DUP7 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C0F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BEA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2C2C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2C28 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2B35 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2C59 DUP2 PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2C63 DUP2 DUP7 PUSH2 0x2C41 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2C7E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2C93 JUMPI PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2CC6 JUMP JUMPDEST PUSH2 0x2C9C DUP6 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CBE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C9F JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDA DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x2CE4 DUP2 DUP6 PUSH2 0x2C41 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CF4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E6A736F6E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D32 DUP3 DUP6 PUSH2 0x2C4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3E DUP3 DUP5 PUSH2 0x2CCF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D49 DUP3 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D6E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2D7B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2776 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E14 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2E46 JUMPI PUSH2 0x2E45 PUSH2 0x2DDA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E95 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2EA2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2EBC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E18 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED0 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDB DUP4 PUSH2 0x1DA2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EF3 JUMPI PUSH2 0x2EF2 PUSH2 0x2DDA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F13 DUP2 DUP6 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2F27 DUP2 DUP5 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F57 DUP3 PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x2F61 DUP2 DUP6 PUSH2 0x2F3B JUMP JUMPDEST SWAP4 POP PUSH2 0x2F71 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x2F7A DUP2 PUSH2 0x1F07 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F9A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2FA7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2FB4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2FC1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2FD3 DUP2 DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FEE DUP2 PUSH2 0x1E6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x300A JUMPI PUSH2 0x3009 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3018 DUP5 DUP3 DUP6 ADD PUSH2 0x2FDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3036 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x3043 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2776 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3055 DUP2 DUP7 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3069 DUP2 DUP6 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x307D DUP2 DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE LOG2 0xF8 EXP 0xE3 0xC2 DUP7 0x25 LOG1 AND 0xCD 0xDB 0xFB OR PUSH1 0x29 AND ORIGIN DUP11 SUB PUSH28 0xCD71A76EA0B43C117C150664736F6C63430008140033000000000000 ","sourceMap":"399:799:16:-:0;;;498:48;;;;;;;;;;532:10;1251:62:2;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;399:799:16;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;399:799:16:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1334":{"entryPoint":5610,"id":1334,"parameterSlots":2,"returnSlots":2},"@_burnBatch_1140":{"entryPoint":3792,"id":1140,"parameterSlots":3,"returnSlots":0},"@_burn_1101":{"entryPoint":4926,"id":1101,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3002,"id":84,"parameterSlots":0,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1318":{"entryPoint":7036,"id":1318,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1248":{"entryPoint":6600,"id":1248,"parameterSlots":6,"returnSlots":0},"@_mintBatch_1051":{"entryPoint":3362,"id":1051,"parameterSlots":4,"returnSlots":0},"@_mint_1010":{"entryPoint":4138,"id":1010,"parameterSlots":4,"returnSlots":0},"@_msgSender_1879":{"entryPoint":3496,"id":1879,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_947":{"entryPoint":3504,"id":947,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_892":{"entryPoint":4659,"id":892,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1180":{"entryPoint":4291,"id":1180,"parameterSlots":3,"returnSlots":0},"@_setURI_958":{"entryPoint":3137,"id":958,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3940,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_826":{"entryPoint":5432,"id":826,"parameterSlots":5,"returnSlots":0},"@_update_750":{"entryPoint":5658,"id":750,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_474":{"entryPoint":1569,"id":474,"parameterSlots":2,"returnSlots":1},"@balanceOf_404":{"entryPoint":833,"id":404,"parameterSlots":2,"returnSlots":1},"@baseTokenURI_3464":{"entryPoint":2132,"id":3464,"parameterSlots":0,"returnSlots":0},"@burnBatch_1579":{"entryPoint":1840,"id":1579,"parameterSlots":3,"returnSlots":0},"@burn_1542":{"entryPoint":2724,"id":1542,"parameterSlots":3,"returnSlots":0},"@isApprovedForAll_507":{"entryPoint":2274,"id":507,"parameterSlots":2,"returnSlots":1},"@log10_3164":{"entryPoint":5093,"id":3164,"parameterSlots":1,"returnSlots":1},"@mintBatch_3559":{"entryPoint":1375,"id":3559,"parameterSlots":4,"returnSlots":0},"@mint_3536":{"entryPoint":2032,"id":3536,"parameterSlots":4,"returnSlots":0},"@owner_67":{"entryPoint":2068,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2012,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_597":{"entryPoint":1401,"id":597,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_551":{"entryPoint":2422,"id":551,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_490":{"entryPoint":2110,"id":490,"parameterSlots":2,"returnSlots":0},"@setURI_3491":{"entryPoint":1149,"id":3491,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2277":{"entryPoint":2896,"id":2277,"parameterSlots":1,"returnSlots":1},"@supportsInterface_376":{"entryPoint":923,"id":376,"parameterSlots":1,"returnSlots":1},"@toString_2067":{"entryPoint":3156,"id":2067,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2590,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_1853":{"entryPoint":3772,"id":1853,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_1866":{"entryPoint":3752,"id":1866,"parameterSlots":2,"returnSlots":1},"@uri_3511":{"entryPoint":1323,"id":3511,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9337,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8587,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8787,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8147,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7565,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12255,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10252,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":9086,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":10316,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9832,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":8899,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10188,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7640,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":10512,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9971,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9488,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7834,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":8259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10102,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7891,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11340,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack":{"entryPoint":11520,"id":null,"parameterSlots":1,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9652,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7704,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed":{"entryPoint":11558,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11609,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12321,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12165,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11904,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12025,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11650,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":8056,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7472,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9293,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8538,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8738,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8083,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9636,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10691,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9608,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12080,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8377,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9691,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9619,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12091,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8388,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11329,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11973,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10978,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7524,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7746,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7586,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10943,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":10833,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11119,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8132,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8405,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10712,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10642,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":11091,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8007,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10823,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11785,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":11061,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11738,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11857,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10595,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11691,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7960,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10867,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7933,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8582,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7938,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7487,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7482,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7943,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10728,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":11048,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10919,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10741,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10877,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7542,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10144,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7790,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7596,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10914,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:36072:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"748:87:17","statements":[{"nodeType":"YulAssignment","src":"758:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:17"},"nodeType":"YulFunctionCall","src":"767:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:17"},"nodeType":"YulFunctionCall","src":"796:33:17"},"nodeType":"YulExpressionStatement","src":"796:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:17","type":""}],"src":"696:139:17"},{"body":{"nodeType":"YulBlock","src":"886:32:17","statements":[{"nodeType":"YulAssignment","src":"896:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:17","type":""}],"src":"841:77:17"},{"body":{"nodeType":"YulBlock","src":"967:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:17"},"nodeType":"YulFunctionCall","src":"1026:12:17"},"nodeType":"YulExpressionStatement","src":"1026:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:17"},"nodeType":"YulFunctionCall","src":"997:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:17"},"nodeType":"YulFunctionCall","src":"987:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:17"},"nodeType":"YulFunctionCall","src":"980:43:17"},"nodeType":"YulIf","src":"977:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:17","type":""}],"src":"924:122:17"},{"body":{"nodeType":"YulBlock","src":"1104:87:17","statements":[{"nodeType":"YulAssignment","src":"1114:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:17"},"nodeType":"YulFunctionCall","src":"1123:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:17"},"nodeType":"YulFunctionCall","src":"1152:33:17"},"nodeType":"YulExpressionStatement","src":"1152:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:17","type":""}],"src":"1052:139:17"},{"body":{"nodeType":"YulBlock","src":"1280:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:17"},"nodeType":"YulFunctionCall","src":"1328:79:17"},"nodeType":"YulExpressionStatement","src":"1328:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:17"},"nodeType":"YulFunctionCall","src":"1297:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:17"},"nodeType":"YulFunctionCall","src":"1293:32:17"},"nodeType":"YulIf","src":"1290:119:17"},{"nodeType":"YulBlock","src":"1419:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:17"},"nodeType":"YulFunctionCall","src":"1494:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:17"},"nodeType":"YulFunctionCall","src":"1473:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:17"}]}]},{"nodeType":"YulBlock","src":"1546:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:17"},"nodeType":"YulFunctionCall","src":"1622:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:17"},"nodeType":"YulFunctionCall","src":"1601:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:17","type":""}],"src":"1197:474:17"},{"body":{"nodeType":"YulBlock","src":"1742:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:17"},"nodeType":"YulFunctionCall","src":"1764:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:17"},"nodeType":"YulFunctionCall","src":"1752:37:17"},"nodeType":"YulExpressionStatement","src":"1752:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:17","type":""}],"src":"1677:118:17"},{"body":{"nodeType":"YulBlock","src":"1899:124:17","statements":[{"nodeType":"YulAssignment","src":"1909:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:17"},"nodeType":"YulFunctionCall","src":"1917:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:17"},"nodeType":"YulFunctionCall","src":"1998:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:17"},"nodeType":"YulFunctionCall","src":"1945:71:17"},"nodeType":"YulExpressionStatement","src":"1945:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:17","type":""}],"src":"1801:222:17"},{"body":{"nodeType":"YulBlock","src":"2073:105:17","statements":[{"nodeType":"YulAssignment","src":"2083:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:17"},"nodeType":"YulFunctionCall","src":"2094:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:17","type":""}],"src":"2029:149:17"},{"body":{"nodeType":"YulBlock","src":"2226:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:17"},"nodeType":"YulFunctionCall","src":"2284:12:17"},"nodeType":"YulExpressionStatement","src":"2284:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:17"},"nodeType":"YulFunctionCall","src":"2256:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:17"},"nodeType":"YulFunctionCall","src":"2246:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:17"},"nodeType":"YulFunctionCall","src":"2239:42:17"},"nodeType":"YulIf","src":"2236:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:17","type":""}],"src":"2184:120:17"},{"body":{"nodeType":"YulBlock","src":"2361:86:17","statements":[{"nodeType":"YulAssignment","src":"2371:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:17"},"nodeType":"YulFunctionCall","src":"2380:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:17"},"nodeType":"YulFunctionCall","src":"2409:32:17"},"nodeType":"YulExpressionStatement","src":"2409:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:17","type":""}],"src":"2310:137:17"},{"body":{"nodeType":"YulBlock","src":"2518:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:17"},"nodeType":"YulFunctionCall","src":"2566:79:17"},"nodeType":"YulExpressionStatement","src":"2566:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:17"},"nodeType":"YulFunctionCall","src":"2535:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:17"},"nodeType":"YulFunctionCall","src":"2531:32:17"},"nodeType":"YulIf","src":"2528:119:17"},{"nodeType":"YulBlock","src":"2657:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:17"},"nodeType":"YulFunctionCall","src":"2731:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:17"},"nodeType":"YulFunctionCall","src":"2711:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:17","type":""}],"src":"2453:327:17"},{"body":{"nodeType":"YulBlock","src":"2828:48:17","statements":[{"nodeType":"YulAssignment","src":"2838:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:17"},"nodeType":"YulFunctionCall","src":"2856:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:17"},"nodeType":"YulFunctionCall","src":"2849:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:17","type":""}],"src":"2786:90:17"},{"body":{"nodeType":"YulBlock","src":"2941:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:17"},"nodeType":"YulFunctionCall","src":"2963:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:17"},"nodeType":"YulFunctionCall","src":"2951:34:17"},"nodeType":"YulExpressionStatement","src":"2951:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:17","type":""}],"src":"2882:109:17"},{"body":{"nodeType":"YulBlock","src":"3089:118:17","statements":[{"nodeType":"YulAssignment","src":"3099:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:17"},"nodeType":"YulFunctionCall","src":"3107:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:17"},"nodeType":"YulFunctionCall","src":"3182:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:17"},"nodeType":"YulFunctionCall","src":"3135:65:17"},"nodeType":"YulExpressionStatement","src":"3135:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:17","type":""}],"src":"2997:210:17"},{"body":{"nodeType":"YulBlock","src":"3302:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3322:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3312:6:17"},"nodeType":"YulFunctionCall","src":"3312:12:17"},"nodeType":"YulExpressionStatement","src":"3312:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3213:117:17"},{"body":{"nodeType":"YulBlock","src":"3425:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3442:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3445:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3435:6:17"},"nodeType":"YulFunctionCall","src":"3435:12:17"},"nodeType":"YulExpressionStatement","src":"3435:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3336:117:17"},{"body":{"nodeType":"YulBlock","src":"3507:54:17","statements":[{"nodeType":"YulAssignment","src":"3517:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3535:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3542:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3531:3:17"},"nodeType":"YulFunctionCall","src":"3531:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3551:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3547:3:17"},"nodeType":"YulFunctionCall","src":"3547:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3527:3:17"},"nodeType":"YulFunctionCall","src":"3527:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3517:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3490:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3500:6:17","type":""}],"src":"3459:102:17"},{"body":{"nodeType":"YulBlock","src":"3595:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3612:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3615:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3605:6:17"},"nodeType":"YulFunctionCall","src":"3605:88:17"},"nodeType":"YulExpressionStatement","src":"3605:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3709:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3712:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3702:6:17"},"nodeType":"YulFunctionCall","src":"3702:15:17"},"nodeType":"YulExpressionStatement","src":"3702:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3736:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3726:6:17"},"nodeType":"YulFunctionCall","src":"3726:15:17"},"nodeType":"YulExpressionStatement","src":"3726:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3567:180:17"},{"body":{"nodeType":"YulBlock","src":"3796:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3806:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3828:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3858:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3836:21:17"},"nodeType":"YulFunctionCall","src":"3836:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:17"},"nodeType":"YulFunctionCall","src":"3824:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3810:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3975:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3977:16:17"},"nodeType":"YulFunctionCall","src":"3977:18:17"},"nodeType":"YulExpressionStatement","src":"3977:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3918:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3930:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3915:2:17"},"nodeType":"YulFunctionCall","src":"3915:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3954:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3966:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3951:2:17"},"nodeType":"YulFunctionCall","src":"3951:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3912:2:17"},"nodeType":"YulFunctionCall","src":"3912:62:17"},"nodeType":"YulIf","src":"3909:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4013:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4017:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4006:6:17"},"nodeType":"YulFunctionCall","src":"4006:22:17"},"nodeType":"YulExpressionStatement","src":"4006:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3782:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3790:4:17","type":""}],"src":"3753:281:17"},{"body":{"nodeType":"YulBlock","src":"4081:88:17","statements":[{"nodeType":"YulAssignment","src":"4091:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4101:18:17"},"nodeType":"YulFunctionCall","src":"4101:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4091:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4150:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"4158:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4130:19:17"},"nodeType":"YulFunctionCall","src":"4130:33:17"},"nodeType":"YulExpressionStatement","src":"4130:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4065:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4074:6:17","type":""}],"src":"4040:129:17"},{"body":{"nodeType":"YulBlock","src":"4242:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"4347:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4349:16:17"},"nodeType":"YulFunctionCall","src":"4349:18:17"},"nodeType":"YulExpressionStatement","src":"4349:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4319:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4327:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4316:2:17"},"nodeType":"YulFunctionCall","src":"4316:30:17"},"nodeType":"YulIf","src":"4313:56:17"},{"nodeType":"YulAssignment","src":"4379:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4409:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4387:21:17"},"nodeType":"YulFunctionCall","src":"4387:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4379:4:17"}]},{"nodeType":"YulAssignment","src":"4453:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4465:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4471:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:17"},"nodeType":"YulFunctionCall","src":"4461:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4453:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4226:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4237:4:17","type":""}],"src":"4175:308:17"},{"body":{"nodeType":"YulBlock","src":"4553:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4576:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"4581:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4586:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4563:12:17"},"nodeType":"YulFunctionCall","src":"4563:30:17"},"nodeType":"YulExpressionStatement","src":"4563:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4613:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4618:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4609:3:17"},"nodeType":"YulFunctionCall","src":"4609:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4627:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4602:6:17"},"nodeType":"YulFunctionCall","src":"4602:27:17"},"nodeType":"YulExpressionStatement","src":"4602:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4535:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4540:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4545:6:17","type":""}],"src":"4489:146:17"},{"body":{"nodeType":"YulBlock","src":"4725:341:17","statements":[{"nodeType":"YulAssignment","src":"4735:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4802:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4760:41:17"},"nodeType":"YulFunctionCall","src":"4760:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4744:15:17"},"nodeType":"YulFunctionCall","src":"4744:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4735:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4826:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4833:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4819:6:17"},"nodeType":"YulFunctionCall","src":"4819:21:17"},"nodeType":"YulExpressionStatement","src":"4819:21:17"},{"nodeType":"YulVariableDeclaration","src":"4849:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4864:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4871:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4860:3:17"},"nodeType":"YulFunctionCall","src":"4860:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4853:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4914:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4916:77:17"},"nodeType":"YulFunctionCall","src":"4916:79:17"},"nodeType":"YulExpressionStatement","src":"4916:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4895:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4900:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4891:3:17"},"nodeType":"YulFunctionCall","src":"4891:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"4909:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4888:2:17"},"nodeType":"YulFunctionCall","src":"4888:25:17"},"nodeType":"YulIf","src":"4885:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5043:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"5048:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5053:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5006:36:17"},"nodeType":"YulFunctionCall","src":"5006:54:17"},"nodeType":"YulExpressionStatement","src":"5006:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4698:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4703:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4711:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4719:5:17","type":""}],"src":"4641:425:17"},{"body":{"nodeType":"YulBlock","src":"5148:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"5197:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5199:77:17"},"nodeType":"YulFunctionCall","src":"5199:79:17"},"nodeType":"YulExpressionStatement","src":"5199:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5176:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5184:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5172:3:17"},"nodeType":"YulFunctionCall","src":"5172:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"5191:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5168:3:17"},"nodeType":"YulFunctionCall","src":"5168:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5161:6:17"},"nodeType":"YulFunctionCall","src":"5161:35:17"},"nodeType":"YulIf","src":"5158:122:17"},{"nodeType":"YulVariableDeclaration","src":"5289:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5316:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5303:12:17"},"nodeType":"YulFunctionCall","src":"5303:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5293:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5332:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5393:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5401:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5389:3:17"},"nodeType":"YulFunctionCall","src":"5389:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5408:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5416:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5341:47:17"},"nodeType":"YulFunctionCall","src":"5341:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5332:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5126:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"5134:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5142:5:17","type":""}],"src":"5086:340:17"},{"body":{"nodeType":"YulBlock","src":"5508:433:17","statements":[{"body":{"nodeType":"YulBlock","src":"5554:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5556:77:17"},"nodeType":"YulFunctionCall","src":"5556:79:17"},"nodeType":"YulExpressionStatement","src":"5556:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5529:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5525:3:17"},"nodeType":"YulFunctionCall","src":"5525:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5550:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5521:3:17"},"nodeType":"YulFunctionCall","src":"5521:32:17"},"nodeType":"YulIf","src":"5518:119:17"},{"nodeType":"YulBlock","src":"5647:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5662:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5693:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5704:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5689:3:17"},"nodeType":"YulFunctionCall","src":"5689:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5676:12:17"},"nodeType":"YulFunctionCall","src":"5676:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5666:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5754:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5756:77:17"},"nodeType":"YulFunctionCall","src":"5756:79:17"},"nodeType":"YulExpressionStatement","src":"5756:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5726:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5734:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5723:2:17"},"nodeType":"YulFunctionCall","src":"5723:30:17"},"nodeType":"YulIf","src":"5720:117:17"},{"nodeType":"YulAssignment","src":"5851:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5896:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5907:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5892:3:17"},"nodeType":"YulFunctionCall","src":"5892:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5916:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5861:30:17"},"nodeType":"YulFunctionCall","src":"5861:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5851:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5478:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5489:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5501:6:17","type":""}],"src":"5432:509:17"},{"body":{"nodeType":"YulBlock","src":"6013:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"6059:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6061:77:17"},"nodeType":"YulFunctionCall","src":"6061:79:17"},"nodeType":"YulExpressionStatement","src":"6061:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6034:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6043:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6030:3:17"},"nodeType":"YulFunctionCall","src":"6030:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6055:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6026:3:17"},"nodeType":"YulFunctionCall","src":"6026:32:17"},"nodeType":"YulIf","src":"6023:119:17"},{"nodeType":"YulBlock","src":"6152:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6167:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6181:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6171:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6196:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6231:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6242:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6227:3:17"},"nodeType":"YulFunctionCall","src":"6227:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6251:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6206:20:17"},"nodeType":"YulFunctionCall","src":"6206:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6196:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5983:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5994:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6006:6:17","type":""}],"src":"5947:329:17"},{"body":{"nodeType":"YulBlock","src":"6341:40:17","statements":[{"nodeType":"YulAssignment","src":"6352:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6368:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6362:5:17"},"nodeType":"YulFunctionCall","src":"6362:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6352:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6334:6:17","type":""}],"src":"6282:99:17"},{"body":{"nodeType":"YulBlock","src":"6483:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6500:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6505:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6493:6:17"},"nodeType":"YulFunctionCall","src":"6493:19:17"},"nodeType":"YulExpressionStatement","src":"6493:19:17"},{"nodeType":"YulAssignment","src":"6521:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6540:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6545:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:17"},"nodeType":"YulFunctionCall","src":"6536:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6521:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6455:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"6460:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6471:11:17","type":""}],"src":"6387:169:17"},{"body":{"nodeType":"YulBlock","src":"6624:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6634:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6643:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6638:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6703:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6728:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"6733:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6724:3:17"},"nodeType":"YulFunctionCall","src":"6724:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6747:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"6752:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:17"},"nodeType":"YulFunctionCall","src":"6743:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6737:5:17"},"nodeType":"YulFunctionCall","src":"6737:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6717:6:17"},"nodeType":"YulFunctionCall","src":"6717:39:17"},"nodeType":"YulExpressionStatement","src":"6717:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6664:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"6667:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6661:2:17"},"nodeType":"YulFunctionCall","src":"6661:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6675:19:17","statements":[{"nodeType":"YulAssignment","src":"6677:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6686:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6682:3:17"},"nodeType":"YulFunctionCall","src":"6682:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6677:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"6657:3:17","statements":[]},"src":"6653:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6786:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"6791:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6782:3:17"},"nodeType":"YulFunctionCall","src":"6782:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"6800:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6775:6:17"},"nodeType":"YulFunctionCall","src":"6775:27:17"},"nodeType":"YulExpressionStatement","src":"6775:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6606:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6611:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"6616:6:17","type":""}],"src":"6562:246:17"},{"body":{"nodeType":"YulBlock","src":"6906:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6916:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6963:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6930:32:17"},"nodeType":"YulFunctionCall","src":"6930:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6920:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6978:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7044:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7049:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6985:58:17"},"nodeType":"YulFunctionCall","src":"6985:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6978:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7104:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"7111:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:17"},"nodeType":"YulFunctionCall","src":"7100:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"7118:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"7123:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7065:34:17"},"nodeType":"YulFunctionCall","src":"7065:65:17"},"nodeType":"YulExpressionStatement","src":"7065:65:17"},{"nodeType":"YulAssignment","src":"7139:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7150:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7177:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7155:21:17"},"nodeType":"YulFunctionCall","src":"7155:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7146:3:17"},"nodeType":"YulFunctionCall","src":"7146:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7139:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6887:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6894:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6902:3:17","type":""}],"src":"6814:377:17"},{"body":{"nodeType":"YulBlock","src":"7315:195:17","statements":[{"nodeType":"YulAssignment","src":"7325:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7337:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7348:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7333:3:17"},"nodeType":"YulFunctionCall","src":"7333:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7325:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7372:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7383:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7368:3:17"},"nodeType":"YulFunctionCall","src":"7368:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7391:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7397:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7387:3:17"},"nodeType":"YulFunctionCall","src":"7387:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7361:6:17"},"nodeType":"YulFunctionCall","src":"7361:47:17"},"nodeType":"YulExpressionStatement","src":"7361:47:17"},{"nodeType":"YulAssignment","src":"7417:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7489:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"7498:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7425:63:17"},"nodeType":"YulFunctionCall","src":"7425:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7417:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7287:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7299:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7310:4:17","type":""}],"src":"7197:313:17"},{"body":{"nodeType":"YulBlock","src":"7598:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"7703:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7705:16:17"},"nodeType":"YulFunctionCall","src":"7705:18:17"},"nodeType":"YulExpressionStatement","src":"7705:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7675:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7683:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7672:2:17"},"nodeType":"YulFunctionCall","src":"7672:30:17"},"nodeType":"YulIf","src":"7669:56:17"},{"nodeType":"YulAssignment","src":"7735:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7747:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7755:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7743:3:17"},"nodeType":"YulFunctionCall","src":"7743:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7735:4:17"}]},{"nodeType":"YulAssignment","src":"7797:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7809:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"7815:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7805:3:17"},"nodeType":"YulFunctionCall","src":"7805:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7797:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7582:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7593:4:17","type":""}],"src":"7516:311:17"},{"body":{"nodeType":"YulBlock","src":"7922:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7939:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7942:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7932:6:17"},"nodeType":"YulFunctionCall","src":"7932:12:17"},"nodeType":"YulExpressionStatement","src":"7932:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"7833:117:17"},{"body":{"nodeType":"YulBlock","src":"8075:608:17","statements":[{"nodeType":"YulAssignment","src":"8085:90:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8167:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8110:56:17"},"nodeType":"YulFunctionCall","src":"8110:64:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8094:15:17"},"nodeType":"YulFunctionCall","src":"8094:81:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8085:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"8184:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"8195:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8188:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8217:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"8224:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8210:6:17"},"nodeType":"YulFunctionCall","src":"8210:21:17"},"nodeType":"YulExpressionStatement","src":"8210:21:17"},{"nodeType":"YulAssignment","src":"8240:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8251:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8258:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8247:3:17"},"nodeType":"YulFunctionCall","src":"8247:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8240:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"8273:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8291:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8303:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8311:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8299:3:17"},"nodeType":"YulFunctionCall","src":"8299:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8287:3:17"},"nodeType":"YulFunctionCall","src":"8287:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8277:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8345:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8359:77:17"},"nodeType":"YulFunctionCall","src":"8359:79:17"},"nodeType":"YulExpressionStatement","src":"8359:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8332:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"8340:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8329:2:17"},"nodeType":"YulFunctionCall","src":"8329:15:17"},"nodeType":"YulIf","src":"8326:122:17"},{"body":{"nodeType":"YulBlock","src":"8533:144:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8548:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"8566:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"8552:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8590:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"8616:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"8628:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8595:20:17"},"nodeType":"YulFunctionCall","src":"8595:37:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8583:6:17"},"nodeType":"YulFunctionCall","src":"8583:50:17"},"nodeType":"YulExpressionStatement","src":"8583:50:17"},{"nodeType":"YulAssignment","src":"8646:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8657:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8662:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8653:3:17"},"nodeType":"YulFunctionCall","src":"8653:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8646:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8486:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8491:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8483:2:17"},"nodeType":"YulFunctionCall","src":"8483:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8499:25:17","statements":[{"nodeType":"YulAssignment","src":"8501:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8512:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8517:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8508:3:17"},"nodeType":"YulFunctionCall","src":"8508:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8501:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"8461:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8463:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"8474:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8467:3:17","type":""}]}]},"src":"8457:220:17"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8045:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8053:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8061:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8069:5:17","type":""}],"src":"7973:710:17"},{"body":{"nodeType":"YulBlock","src":"8783:293:17","statements":[{"body":{"nodeType":"YulBlock","src":"8832:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8834:77:17"},"nodeType":"YulFunctionCall","src":"8834:79:17"},"nodeType":"YulExpressionStatement","src":"8834:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8811:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8819:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:17"},"nodeType":"YulFunctionCall","src":"8807:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"8826:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8803:3:17"},"nodeType":"YulFunctionCall","src":"8803:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8796:6:17"},"nodeType":"YulFunctionCall","src":"8796:35:17"},"nodeType":"YulIf","src":"8793:122:17"},{"nodeType":"YulVariableDeclaration","src":"8924:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8951:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8938:12:17"},"nodeType":"YulFunctionCall","src":"8938:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8928:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8967:103:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9043:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9051:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9039:3:17"},"nodeType":"YulFunctionCall","src":"9039:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"9058:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"9066:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8976:62:17"},"nodeType":"YulFunctionCall","src":"8976:94:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8967:5:17"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8761:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8769:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8777:5:17","type":""}],"src":"8706:370:17"},{"body":{"nodeType":"YulBlock","src":"9148:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"9253:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9255:16:17"},"nodeType":"YulFunctionCall","src":"9255:18:17"},"nodeType":"YulExpressionStatement","src":"9255:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9225:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9233:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9222:2:17"},"nodeType":"YulFunctionCall","src":"9222:30:17"},"nodeType":"YulIf","src":"9219:56:17"},{"nodeType":"YulAssignment","src":"9285:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9315:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9293:21:17"},"nodeType":"YulFunctionCall","src":"9293:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9285:4:17"}]},{"nodeType":"YulAssignment","src":"9359:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9371:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"9377:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9367:3:17"},"nodeType":"YulFunctionCall","src":"9367:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9359:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9132:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9143:4:17","type":""}],"src":"9082:307:17"},{"body":{"nodeType":"YulBlock","src":"9478:340:17","statements":[{"nodeType":"YulAssignment","src":"9488:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9554:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9513:40:17"},"nodeType":"YulFunctionCall","src":"9513:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9497:15:17"},"nodeType":"YulFunctionCall","src":"9497:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9488:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9578:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"9585:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9571:6:17"},"nodeType":"YulFunctionCall","src":"9571:21:17"},"nodeType":"YulExpressionStatement","src":"9571:21:17"},{"nodeType":"YulVariableDeclaration","src":"9601:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9616:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"9623:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9612:3:17"},"nodeType":"YulFunctionCall","src":"9612:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9605:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9666:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9668:77:17"},"nodeType":"YulFunctionCall","src":"9668:79:17"},"nodeType":"YulExpressionStatement","src":"9668:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9647:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9652:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9643:3:17"},"nodeType":"YulFunctionCall","src":"9643:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"9661:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9640:2:17"},"nodeType":"YulFunctionCall","src":"9640:25:17"},"nodeType":"YulIf","src":"9637:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9795:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"9800:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"9805:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9758:36:17"},"nodeType":"YulFunctionCall","src":"9758:54:17"},"nodeType":"YulExpressionStatement","src":"9758:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9451:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"9456:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9464:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9472:5:17","type":""}],"src":"9395:423:17"},{"body":{"nodeType":"YulBlock","src":"9898:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"9947:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9949:77:17"},"nodeType":"YulFunctionCall","src":"9949:79:17"},"nodeType":"YulExpressionStatement","src":"9949:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9926:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9934:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9922:3:17"},"nodeType":"YulFunctionCall","src":"9922:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"9941:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9918:3:17"},"nodeType":"YulFunctionCall","src":"9918:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9911:6:17"},"nodeType":"YulFunctionCall","src":"9911:35:17"},"nodeType":"YulIf","src":"9908:122:17"},{"nodeType":"YulVariableDeclaration","src":"10039:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10066:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10053:12:17"},"nodeType":"YulFunctionCall","src":"10053:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10043:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10082:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10142:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10150:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10138:3:17"},"nodeType":"YulFunctionCall","src":"10138:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"10157:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"10165:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10091:46:17"},"nodeType":"YulFunctionCall","src":"10091:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10082:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9876:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9884:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9892:5:17","type":""}],"src":"9837:338:17"},{"body":{"nodeType":"YulBlock","src":"10357:1187:17","statements":[{"body":{"nodeType":"YulBlock","src":"10404:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10406:77:17"},"nodeType":"YulFunctionCall","src":"10406:79:17"},"nodeType":"YulExpressionStatement","src":"10406:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10378:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10387:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10374:3:17"},"nodeType":"YulFunctionCall","src":"10374:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"10399:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10370:3:17"},"nodeType":"YulFunctionCall","src":"10370:33:17"},"nodeType":"YulIf","src":"10367:120:17"},{"nodeType":"YulBlock","src":"10497:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10512:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10526:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10516:6:17","type":""}]},{"nodeType":"YulAssignment","src":"10541:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10576:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10587:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10572:3:17"},"nodeType":"YulFunctionCall","src":"10572:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10596:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10551:20:17"},"nodeType":"YulFunctionCall","src":"10551:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10541:6:17"}]}]},{"nodeType":"YulBlock","src":"10624:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10639:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10670:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10681:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10666:3:17"},"nodeType":"YulFunctionCall","src":"10666:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10653:12:17"},"nodeType":"YulFunctionCall","src":"10653:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10643:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10732:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10734:77:17"},"nodeType":"YulFunctionCall","src":"10734:79:17"},"nodeType":"YulExpressionStatement","src":"10734:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10704:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10712:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10701:2:17"},"nodeType":"YulFunctionCall","src":"10701:30:17"},"nodeType":"YulIf","src":"10698:117:17"},{"nodeType":"YulAssignment","src":"10829:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10889:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10900:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10885:3:17"},"nodeType":"YulFunctionCall","src":"10885:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10909:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10839:45:17"},"nodeType":"YulFunctionCall","src":"10839:78:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10829:6:17"}]}]},{"nodeType":"YulBlock","src":"10937:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10952:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10983:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10994:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10979:3:17"},"nodeType":"YulFunctionCall","src":"10979:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10966:12:17"},"nodeType":"YulFunctionCall","src":"10966:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10956:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11045:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11047:77:17"},"nodeType":"YulFunctionCall","src":"11047:79:17"},"nodeType":"YulExpressionStatement","src":"11047:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11017:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11025:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11014:2:17"},"nodeType":"YulFunctionCall","src":"11014:30:17"},"nodeType":"YulIf","src":"11011:117:17"},{"nodeType":"YulAssignment","src":"11142:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11202:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11213:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11198:3:17"},"nodeType":"YulFunctionCall","src":"11198:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11222:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11152:45:17"},"nodeType":"YulFunctionCall","src":"11152:78:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11142:6:17"}]}]},{"nodeType":"YulBlock","src":"11250:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11265:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11296:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11307:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11292:3:17"},"nodeType":"YulFunctionCall","src":"11292:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11279:12:17"},"nodeType":"YulFunctionCall","src":"11279:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11269:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11358:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11360:77:17"},"nodeType":"YulFunctionCall","src":"11360:79:17"},"nodeType":"YulExpressionStatement","src":"11360:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11330:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11338:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11327:2:17"},"nodeType":"YulFunctionCall","src":"11327:30:17"},"nodeType":"YulIf","src":"11324:117:17"},{"nodeType":"YulAssignment","src":"11455:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11499:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11510:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11495:3:17"},"nodeType":"YulFunctionCall","src":"11495:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11519:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11465:29:17"},"nodeType":"YulFunctionCall","src":"11465:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11455:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10303:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10314:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10326:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10334:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10342:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10350:6:17","type":""}],"src":"10181:1363:17"},{"body":{"nodeType":"YulBlock","src":"11743:1316:17","statements":[{"body":{"nodeType":"YulBlock","src":"11790:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11792:77:17"},"nodeType":"YulFunctionCall","src":"11792:79:17"},"nodeType":"YulExpressionStatement","src":"11792:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11764:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11773:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11760:3:17"},"nodeType":"YulFunctionCall","src":"11760:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"11785:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11756:3:17"},"nodeType":"YulFunctionCall","src":"11756:33:17"},"nodeType":"YulIf","src":"11753:120:17"},{"nodeType":"YulBlock","src":"11883:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11898:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11912:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11902:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11927:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11962:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"11973:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11958:3:17"},"nodeType":"YulFunctionCall","src":"11958:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11982:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11937:20:17"},"nodeType":"YulFunctionCall","src":"11937:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11927:6:17"}]}]},{"nodeType":"YulBlock","src":"12010:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12025:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"12039:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12029:6:17","type":""}]},{"nodeType":"YulAssignment","src":"12055:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12090:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12101:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12086:3:17"},"nodeType":"YulFunctionCall","src":"12086:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12110:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12065:20:17"},"nodeType":"YulFunctionCall","src":"12065:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12055:6:17"}]}]},{"nodeType":"YulBlock","src":"12138:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12153:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12184:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12195:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12180:3:17"},"nodeType":"YulFunctionCall","src":"12180:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12167:12:17"},"nodeType":"YulFunctionCall","src":"12167:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12157:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12246:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12248:77:17"},"nodeType":"YulFunctionCall","src":"12248:79:17"},"nodeType":"YulExpressionStatement","src":"12248:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12218:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12226:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12215:2:17"},"nodeType":"YulFunctionCall","src":"12215:30:17"},"nodeType":"YulIf","src":"12212:117:17"},{"nodeType":"YulAssignment","src":"12343:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12403:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12414:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12399:3:17"},"nodeType":"YulFunctionCall","src":"12399:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12423:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12353:45:17"},"nodeType":"YulFunctionCall","src":"12353:78:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12343:6:17"}]}]},{"nodeType":"YulBlock","src":"12451:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12466:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12497:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12508:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12493:3:17"},"nodeType":"YulFunctionCall","src":"12493:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12480:12:17"},"nodeType":"YulFunctionCall","src":"12480:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12470:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12559:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12561:77:17"},"nodeType":"YulFunctionCall","src":"12561:79:17"},"nodeType":"YulExpressionStatement","src":"12561:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12531:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12539:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12528:2:17"},"nodeType":"YulFunctionCall","src":"12528:30:17"},"nodeType":"YulIf","src":"12525:117:17"},{"nodeType":"YulAssignment","src":"12656:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12716:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"12727:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12712:3:17"},"nodeType":"YulFunctionCall","src":"12712:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12736:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12666:45:17"},"nodeType":"YulFunctionCall","src":"12666:78:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12656:6:17"}]}]},{"nodeType":"YulBlock","src":"12764:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12779:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12810:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12821:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12806:3:17"},"nodeType":"YulFunctionCall","src":"12806:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12793:12:17"},"nodeType":"YulFunctionCall","src":"12793:33:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12783:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"12873:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12875:77:17"},"nodeType":"YulFunctionCall","src":"12875:79:17"},"nodeType":"YulExpressionStatement","src":"12875:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12845:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12853:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12842:2:17"},"nodeType":"YulFunctionCall","src":"12842:30:17"},"nodeType":"YulIf","src":"12839:117:17"},{"nodeType":"YulAssignment","src":"12970:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13014:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13025:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13010:3:17"},"nodeType":"YulFunctionCall","src":"13010:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13034:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12980:29:17"},"nodeType":"YulFunctionCall","src":"12980:62:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12970:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11681:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11692:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11704:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11712:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11720:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11728:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11736:6:17","type":""}],"src":"11550:1509:17"},{"body":{"nodeType":"YulBlock","src":"13147:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"13252:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13254:16:17"},"nodeType":"YulFunctionCall","src":"13254:18:17"},"nodeType":"YulExpressionStatement","src":"13254:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13224:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13232:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13221:2:17"},"nodeType":"YulFunctionCall","src":"13221:30:17"},"nodeType":"YulIf","src":"13218:56:17"},{"nodeType":"YulAssignment","src":"13284:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13296:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13304:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13292:3:17"},"nodeType":"YulFunctionCall","src":"13292:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13284:4:17"}]},{"nodeType":"YulAssignment","src":"13346:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13358:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"13364:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13354:3:17"},"nodeType":"YulFunctionCall","src":"13354:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13346:4:17"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13131:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13142:4:17","type":""}],"src":"13065:311:17"},{"body":{"nodeType":"YulBlock","src":"13501:608:17","statements":[{"nodeType":"YulAssignment","src":"13511:90:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13593:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13536:56:17"},"nodeType":"YulFunctionCall","src":"13536:64:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13520:15:17"},"nodeType":"YulFunctionCall","src":"13520:81:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13511:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"13610:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"13621:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13614:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13643:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"13650:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13636:6:17"},"nodeType":"YulFunctionCall","src":"13636:21:17"},"nodeType":"YulExpressionStatement","src":"13636:21:17"},{"nodeType":"YulAssignment","src":"13666:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13677:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13684:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13673:3:17"},"nodeType":"YulFunctionCall","src":"13673:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13666:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"13699:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13717:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13729:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13737:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13725:3:17"},"nodeType":"YulFunctionCall","src":"13725:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13713:3:17"},"nodeType":"YulFunctionCall","src":"13713:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"13703:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"13771:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13785:77:17"},"nodeType":"YulFunctionCall","src":"13785:79:17"},"nodeType":"YulExpressionStatement","src":"13785:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"13758:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"13766:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13755:2:17"},"nodeType":"YulFunctionCall","src":"13755:15:17"},"nodeType":"YulIf","src":"13752:122:17"},{"body":{"nodeType":"YulBlock","src":"13959:144:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13974:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"13992:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"13978:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14016:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"14042:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"14054:3:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14021:20:17"},"nodeType":"YulFunctionCall","src":"14021:37:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14009:6:17"},"nodeType":"YulFunctionCall","src":"14009:50:17"},"nodeType":"YulExpressionStatement","src":"14009:50:17"},{"nodeType":"YulAssignment","src":"14072:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14083:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14088:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14079:3:17"},"nodeType":"YulFunctionCall","src":"14079:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"14072:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13912:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"13917:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13909:2:17"},"nodeType":"YulFunctionCall","src":"13909:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13925:25:17","statements":[{"nodeType":"YulAssignment","src":"13927:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13938:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13943:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:17"},"nodeType":"YulFunctionCall","src":"13934:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"13927:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13887:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13889:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"13900:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"13893:3:17","type":""}]}]},"src":"13883:220:17"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13471:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"13479:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"13487:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13495:5:17","type":""}],"src":"13399:710:17"},{"body":{"nodeType":"YulBlock","src":"14209:293:17","statements":[{"body":{"nodeType":"YulBlock","src":"14258:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14260:77:17"},"nodeType":"YulFunctionCall","src":"14260:79:17"},"nodeType":"YulExpressionStatement","src":"14260:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14237:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14245:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14233:3:17"},"nodeType":"YulFunctionCall","src":"14233:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"14252:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14229:3:17"},"nodeType":"YulFunctionCall","src":"14229:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14222:6:17"},"nodeType":"YulFunctionCall","src":"14222:35:17"},"nodeType":"YulIf","src":"14219:122:17"},{"nodeType":"YulVariableDeclaration","src":"14350:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14377:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14364:12:17"},"nodeType":"YulFunctionCall","src":"14364:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14354:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14393:103:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14469:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14477:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14465:3:17"},"nodeType":"YulFunctionCall","src":"14465:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"14484:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"14492:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14402:62:17"},"nodeType":"YulFunctionCall","src":"14402:94:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14393:5:17"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14187:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"14195:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14203:5:17","type":""}],"src":"14132:370:17"},{"body":{"nodeType":"YulBlock","src":"14641:761:17","statements":[{"body":{"nodeType":"YulBlock","src":"14687:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14689:77:17"},"nodeType":"YulFunctionCall","src":"14689:79:17"},"nodeType":"YulExpressionStatement","src":"14689:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14662:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14671:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14658:3:17"},"nodeType":"YulFunctionCall","src":"14658:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"14683:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14654:3:17"},"nodeType":"YulFunctionCall","src":"14654:32:17"},"nodeType":"YulIf","src":"14651:119:17"},{"nodeType":"YulBlock","src":"14780:302:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14795:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14826:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14837:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14822:3:17"},"nodeType":"YulFunctionCall","src":"14822:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14809:12:17"},"nodeType":"YulFunctionCall","src":"14809:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14799:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"14887:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14889:77:17"},"nodeType":"YulFunctionCall","src":"14889:79:17"},"nodeType":"YulExpressionStatement","src":"14889:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14859:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14867:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14856:2:17"},"nodeType":"YulFunctionCall","src":"14856:30:17"},"nodeType":"YulIf","src":"14853:117:17"},{"nodeType":"YulAssignment","src":"14984:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15044:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15055:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15040:3:17"},"nodeType":"YulFunctionCall","src":"15040:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15064:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14994:45:17"},"nodeType":"YulFunctionCall","src":"14994:78:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14984:6:17"}]}]},{"nodeType":"YulBlock","src":"15092:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15107:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15138:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15149:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15134:3:17"},"nodeType":"YulFunctionCall","src":"15134:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15121:12:17"},"nodeType":"YulFunctionCall","src":"15121:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15111:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15200:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15202:77:17"},"nodeType":"YulFunctionCall","src":"15202:79:17"},"nodeType":"YulExpressionStatement","src":"15202:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15172:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15180:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15169:2:17"},"nodeType":"YulFunctionCall","src":"15169:30:17"},"nodeType":"YulIf","src":"15166:117:17"},{"nodeType":"YulAssignment","src":"15297:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15357:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15368:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15353:3:17"},"nodeType":"YulFunctionCall","src":"15353:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15377:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15307:45:17"},"nodeType":"YulFunctionCall","src":"15307:78:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15297:6:17"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14603:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14614:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14626:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14634:6:17","type":""}],"src":"14508:894:17"},{"body":{"nodeType":"YulBlock","src":"15482:40:17","statements":[{"nodeType":"YulAssignment","src":"15493:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15509:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15503:5:17"},"nodeType":"YulFunctionCall","src":"15503:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15493:6:17"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15465:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15475:6:17","type":""}],"src":"15408:114:17"},{"body":{"nodeType":"YulBlock","src":"15639:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15656:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"15661:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15649:6:17"},"nodeType":"YulFunctionCall","src":"15649:19:17"},"nodeType":"YulExpressionStatement","src":"15649:19:17"},{"nodeType":"YulAssignment","src":"15677:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15696:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15701:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15692:3:17"},"nodeType":"YulFunctionCall","src":"15692:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15677:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15611:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"15616:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15627:11:17","type":""}],"src":"15528:184:17"},{"body":{"nodeType":"YulBlock","src":"15790:60:17","statements":[{"nodeType":"YulAssignment","src":"15800:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15808:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15800:4:17"}]},{"nodeType":"YulAssignment","src":"15821:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15833:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15838:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15829:3:17"},"nodeType":"YulFunctionCall","src":"15829:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15821:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15777:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15785:4:17","type":""}],"src":"15718:132:17"},{"body":{"nodeType":"YulBlock","src":"15911:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15928:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15951:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15933:17:17"},"nodeType":"YulFunctionCall","src":"15933:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15921:6:17"},"nodeType":"YulFunctionCall","src":"15921:37:17"},"nodeType":"YulExpressionStatement","src":"15921:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15899:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15906:3:17","type":""}],"src":"15856:108:17"},{"body":{"nodeType":"YulBlock","src":"16050:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16094:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16102:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16060:33:17"},"nodeType":"YulFunctionCall","src":"16060:46:17"},"nodeType":"YulExpressionStatement","src":"16060:46:17"},{"nodeType":"YulAssignment","src":"16115:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16133:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16138:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16129:3:17"},"nodeType":"YulFunctionCall","src":"16129:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16115:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"16023:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16031:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"16039:10:17","type":""}],"src":"15970:179:17"},{"body":{"nodeType":"YulBlock","src":"16230:38:17","statements":[{"nodeType":"YulAssignment","src":"16240:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16252:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16257:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16248:3:17"},"nodeType":"YulFunctionCall","src":"16248:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16240:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16217:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16225:4:17","type":""}],"src":"16155:113:17"},{"body":{"nodeType":"YulBlock","src":"16428:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16438:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16500:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16452:47:17"},"nodeType":"YulFunctionCall","src":"16452:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16442:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16515:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16596:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16601:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16522:73:17"},"nodeType":"YulFunctionCall","src":"16522:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16515:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"16617:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16682:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16632:49:17"},"nodeType":"YulFunctionCall","src":"16632:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16621:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16697:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16711:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16701:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"16787:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16801:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16828:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16822:5:17"},"nodeType":"YulFunctionCall","src":"16822:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16805:13:17","type":""}]},{"nodeType":"YulAssignment","src":"16848:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"16899:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16914:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16855:43:17"},"nodeType":"YulFunctionCall","src":"16855:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16848:3:17"}]},{"nodeType":"YulAssignment","src":"16931:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16994:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16941:52:17"},"nodeType":"YulFunctionCall","src":"16941:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16931:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16749:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"16752:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16746:2:17"},"nodeType":"YulFunctionCall","src":"16746:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16760:18:17","statements":[{"nodeType":"YulAssignment","src":"16762:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16771:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"16774:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16767:3:17"},"nodeType":"YulFunctionCall","src":"16767:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16762:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"16731:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16733:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"16742:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16737:1:17","type":""}]}]},"src":"16727:284:17"},{"nodeType":"YulAssignment","src":"17020:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"17027:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17020:3:17"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16407:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16414:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16423:3:17","type":""}],"src":"16304:732:17"},{"body":{"nodeType":"YulBlock","src":"17190:225:17","statements":[{"nodeType":"YulAssignment","src":"17200:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17212:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17223:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17208:3:17"},"nodeType":"YulFunctionCall","src":"17208:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17200:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17247:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17258:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17243:3:17"},"nodeType":"YulFunctionCall","src":"17243:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17266:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17272:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17262:3:17"},"nodeType":"YulFunctionCall","src":"17262:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17236:6:17"},"nodeType":"YulFunctionCall","src":"17236:47:17"},"nodeType":"YulExpressionStatement","src":"17236:47:17"},{"nodeType":"YulAssignment","src":"17292:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17394:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"17403:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17300:93:17"},"nodeType":"YulFunctionCall","src":"17300:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17292:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17162:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17174:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17185:4:17","type":""}],"src":"17042:373:17"},{"body":{"nodeType":"YulBlock","src":"17571:889:17","statements":[{"body":{"nodeType":"YulBlock","src":"17617:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17619:77:17"},"nodeType":"YulFunctionCall","src":"17619:79:17"},"nodeType":"YulExpressionStatement","src":"17619:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17592:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17601:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17588:3:17"},"nodeType":"YulFunctionCall","src":"17588:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"17613:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17584:3:17"},"nodeType":"YulFunctionCall","src":"17584:32:17"},"nodeType":"YulIf","src":"17581:119:17"},{"nodeType":"YulBlock","src":"17710:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"17725:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"17739:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17729:6:17","type":""}]},{"nodeType":"YulAssignment","src":"17754:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17789:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"17800:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17785:3:17"},"nodeType":"YulFunctionCall","src":"17785:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17809:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17764:20:17"},"nodeType":"YulFunctionCall","src":"17764:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17754:6:17"}]}]},{"nodeType":"YulBlock","src":"17837:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"17852:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17883:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17894:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17879:3:17"},"nodeType":"YulFunctionCall","src":"17879:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17866:12:17"},"nodeType":"YulFunctionCall","src":"17866:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17856:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"17945:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17947:77:17"},"nodeType":"YulFunctionCall","src":"17947:79:17"},"nodeType":"YulExpressionStatement","src":"17947:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17917:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17925:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17914:2:17"},"nodeType":"YulFunctionCall","src":"17914:30:17"},"nodeType":"YulIf","src":"17911:117:17"},{"nodeType":"YulAssignment","src":"18042:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18102:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"18113:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18098:3:17"},"nodeType":"YulFunctionCall","src":"18098:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18122:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18052:45:17"},"nodeType":"YulFunctionCall","src":"18052:78:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18042:6:17"}]}]},{"nodeType":"YulBlock","src":"18150:303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18165:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18196:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18207:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18192:3:17"},"nodeType":"YulFunctionCall","src":"18192:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18179:12:17"},"nodeType":"YulFunctionCall","src":"18179:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18169:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"18258:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18260:77:17"},"nodeType":"YulFunctionCall","src":"18260:79:17"},"nodeType":"YulExpressionStatement","src":"18260:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18230:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18238:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18227:2:17"},"nodeType":"YulFunctionCall","src":"18227:30:17"},"nodeType":"YulIf","src":"18224:117:17"},{"nodeType":"YulAssignment","src":"18355:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18415:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"18426:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18411:3:17"},"nodeType":"YulFunctionCall","src":"18411:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18435:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18365:45:17"},"nodeType":"YulFunctionCall","src":"18365:78:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18355:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17525:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17536:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17548:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17556:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17564:6:17","type":""}],"src":"17421:1039:17"},{"body":{"nodeType":"YulBlock","src":"18592:817:17","statements":[{"body":{"nodeType":"YulBlock","src":"18639:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18641:77:17"},"nodeType":"YulFunctionCall","src":"18641:79:17"},"nodeType":"YulExpressionStatement","src":"18641:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18613:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"18622:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18609:3:17"},"nodeType":"YulFunctionCall","src":"18609:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"18634:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18605:3:17"},"nodeType":"YulFunctionCall","src":"18605:33:17"},"nodeType":"YulIf","src":"18602:120:17"},{"nodeType":"YulBlock","src":"18732:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18747:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18761:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18751:6:17","type":""}]},{"nodeType":"YulAssignment","src":"18776:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18811:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"18822:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18807:3:17"},"nodeType":"YulFunctionCall","src":"18807:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18831:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18786:20:17"},"nodeType":"YulFunctionCall","src":"18786:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18776:6:17"}]}]},{"nodeType":"YulBlock","src":"18859:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18874:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18888:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18878:6:17","type":""}]},{"nodeType":"YulAssignment","src":"18904:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18939:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"18950:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18935:3:17"},"nodeType":"YulFunctionCall","src":"18935:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18959:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18914:20:17"},"nodeType":"YulFunctionCall","src":"18914:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18904:6:17"}]}]},{"nodeType":"YulBlock","src":"18987:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19002:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19016:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19006:6:17","type":""}]},{"nodeType":"YulAssignment","src":"19032:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19067:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19078:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19063:3:17"},"nodeType":"YulFunctionCall","src":"19063:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19087:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19042:20:17"},"nodeType":"YulFunctionCall","src":"19042:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19032:6:17"}]}]},{"nodeType":"YulBlock","src":"19115:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19130:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19161:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19172:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19157:3:17"},"nodeType":"YulFunctionCall","src":"19157:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19144:12:17"},"nodeType":"YulFunctionCall","src":"19144:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19134:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"19223:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19225:77:17"},"nodeType":"YulFunctionCall","src":"19225:79:17"},"nodeType":"YulExpressionStatement","src":"19225:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19195:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19203:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19192:2:17"},"nodeType":"YulFunctionCall","src":"19192:30:17"},"nodeType":"YulIf","src":"19189:117:17"},{"nodeType":"YulAssignment","src":"19320:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19364:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19375:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19360:3:17"},"nodeType":"YulFunctionCall","src":"19360:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19384:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"19330:29:17"},"nodeType":"YulFunctionCall","src":"19330:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19320:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18538:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18549:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18561:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18569:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18577:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18585:6:17","type":""}],"src":"18466:943:17"},{"body":{"nodeType":"YulBlock","src":"19480:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19497:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19520:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"19502:17:17"},"nodeType":"YulFunctionCall","src":"19502:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19490:6:17"},"nodeType":"YulFunctionCall","src":"19490:37:17"},"nodeType":"YulExpressionStatement","src":"19490:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19468:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19475:3:17","type":""}],"src":"19415:118:17"},{"body":{"nodeType":"YulBlock","src":"19637:124:17","statements":[{"nodeType":"YulAssignment","src":"19647:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19659:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19670:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19655:3:17"},"nodeType":"YulFunctionCall","src":"19655:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19647:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19727:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19740:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19751:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19736:3:17"},"nodeType":"YulFunctionCall","src":"19736:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19683:43:17"},"nodeType":"YulFunctionCall","src":"19683:71:17"},"nodeType":"YulExpressionStatement","src":"19683:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19609:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19621:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19632:4:17","type":""}],"src":"19539:222:17"},{"body":{"nodeType":"YulBlock","src":"19807:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"19861:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19870:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19873:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19863:6:17"},"nodeType":"YulFunctionCall","src":"19863:12:17"},"nodeType":"YulExpressionStatement","src":"19863:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19830:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19852:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"19837:14:17"},"nodeType":"YulFunctionCall","src":"19837:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19827:2:17"},"nodeType":"YulFunctionCall","src":"19827:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19820:6:17"},"nodeType":"YulFunctionCall","src":"19820:40:17"},"nodeType":"YulIf","src":"19817:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19800:5:17","type":""}],"src":"19767:116:17"},{"body":{"nodeType":"YulBlock","src":"19938:84:17","statements":[{"nodeType":"YulAssignment","src":"19948:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19970:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19957:12:17"},"nodeType":"YulFunctionCall","src":"19957:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19948:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20010:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"19986:23:17"},"nodeType":"YulFunctionCall","src":"19986:30:17"},"nodeType":"YulExpressionStatement","src":"19986:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19916:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"19924:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19932:5:17","type":""}],"src":"19889:133:17"},{"body":{"nodeType":"YulBlock","src":"20108:388:17","statements":[{"body":{"nodeType":"YulBlock","src":"20154:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20156:77:17"},"nodeType":"YulFunctionCall","src":"20156:79:17"},"nodeType":"YulExpressionStatement","src":"20156:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20129:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20138:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20125:3:17"},"nodeType":"YulFunctionCall","src":"20125:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"20150:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20121:3:17"},"nodeType":"YulFunctionCall","src":"20121:32:17"},"nodeType":"YulIf","src":"20118:119:17"},{"nodeType":"YulBlock","src":"20247:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20262:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"20276:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20266:6:17","type":""}]},{"nodeType":"YulAssignment","src":"20291:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20326:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20337:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20322:3:17"},"nodeType":"YulFunctionCall","src":"20322:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20346:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20301:20:17"},"nodeType":"YulFunctionCall","src":"20301:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20291:6:17"}]}]},{"nodeType":"YulBlock","src":"20374:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20389:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"20403:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20393:6:17","type":""}]},{"nodeType":"YulAssignment","src":"20419:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20451:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20462:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20447:3:17"},"nodeType":"YulFunctionCall","src":"20447:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20471:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"20429:17:17"},"nodeType":"YulFunctionCall","src":"20429:50:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20419:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20070:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20081:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20093:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20101:6:17","type":""}],"src":"20028:468:17"},{"body":{"nodeType":"YulBlock","src":"20585:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"20631:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20633:77:17"},"nodeType":"YulFunctionCall","src":"20633:79:17"},"nodeType":"YulExpressionStatement","src":"20633:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20606:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20615:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20602:3:17"},"nodeType":"YulFunctionCall","src":"20602:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"20627:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20598:3:17"},"nodeType":"YulFunctionCall","src":"20598:32:17"},"nodeType":"YulIf","src":"20595:119:17"},{"nodeType":"YulBlock","src":"20724:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20739:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"20753:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20743:6:17","type":""}]},{"nodeType":"YulAssignment","src":"20768:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20803:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20814:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20799:3:17"},"nodeType":"YulFunctionCall","src":"20799:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20823:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20778:20:17"},"nodeType":"YulFunctionCall","src":"20778:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20768:6:17"}]}]},{"nodeType":"YulBlock","src":"20851:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20866:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"20880:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20870:6:17","type":""}]},{"nodeType":"YulAssignment","src":"20896:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20931:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20942:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20927:3:17"},"nodeType":"YulFunctionCall","src":"20927:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20951:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20906:20:17"},"nodeType":"YulFunctionCall","src":"20906:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20896:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20547:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20558:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20570:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20578:6:17","type":""}],"src":"20502:474:17"},{"body":{"nodeType":"YulBlock","src":"21125:946:17","statements":[{"body":{"nodeType":"YulBlock","src":"21172:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21174:77:17"},"nodeType":"YulFunctionCall","src":"21174:79:17"},"nodeType":"YulExpressionStatement","src":"21174:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21146:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"21155:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21142:3:17"},"nodeType":"YulFunctionCall","src":"21142:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"21167:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21138:3:17"},"nodeType":"YulFunctionCall","src":"21138:33:17"},"nodeType":"YulIf","src":"21135:120:17"},{"nodeType":"YulBlock","src":"21265:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21280:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21294:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21284:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21309:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21344:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21355:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21340:3:17"},"nodeType":"YulFunctionCall","src":"21340:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21364:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21319:20:17"},"nodeType":"YulFunctionCall","src":"21319:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21309:6:17"}]}]},{"nodeType":"YulBlock","src":"21392:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21407:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21421:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21411:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21437:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21472:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21483:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21468:3:17"},"nodeType":"YulFunctionCall","src":"21468:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21492:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21447:20:17"},"nodeType":"YulFunctionCall","src":"21447:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21437:6:17"}]}]},{"nodeType":"YulBlock","src":"21520:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21535:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21549:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21539:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21565:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21600:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21611:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21596:3:17"},"nodeType":"YulFunctionCall","src":"21596:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21620:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21575:20:17"},"nodeType":"YulFunctionCall","src":"21575:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21565:6:17"}]}]},{"nodeType":"YulBlock","src":"21648:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21663:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21677:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21667:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21693:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21728:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21739:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21724:3:17"},"nodeType":"YulFunctionCall","src":"21724:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21748:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21703:20:17"},"nodeType":"YulFunctionCall","src":"21703:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21693:6:17"}]}]},{"nodeType":"YulBlock","src":"21776:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21791:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21822:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"21833:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21818:3:17"},"nodeType":"YulFunctionCall","src":"21818:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21805:12:17"},"nodeType":"YulFunctionCall","src":"21805:33:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21795:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"21885:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21887:77:17"},"nodeType":"YulFunctionCall","src":"21887:79:17"},"nodeType":"YulExpressionStatement","src":"21887:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21857:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21865:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21854:2:17"},"nodeType":"YulFunctionCall","src":"21854:30:17"},"nodeType":"YulIf","src":"21851:117:17"},{"nodeType":"YulAssignment","src":"21982:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22026:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22037:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22022:3:17"},"nodeType":"YulFunctionCall","src":"22022:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22046:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21992:29:17"},"nodeType":"YulFunctionCall","src":"21992:62:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"21982:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21063:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21074:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21086:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21094:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21102:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21110:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21118:6:17","type":""}],"src":"20982:1089:17"},{"body":{"nodeType":"YulBlock","src":"22143:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"22189:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22191:77:17"},"nodeType":"YulFunctionCall","src":"22191:79:17"},"nodeType":"YulExpressionStatement","src":"22191:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22164:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22173:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22160:3:17"},"nodeType":"YulFunctionCall","src":"22160:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"22185:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22156:3:17"},"nodeType":"YulFunctionCall","src":"22156:32:17"},"nodeType":"YulIf","src":"22153:119:17"},{"nodeType":"YulBlock","src":"22282:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22297:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22311:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22301:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22326:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22361:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22372:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22357:3:17"},"nodeType":"YulFunctionCall","src":"22357:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22381:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22336:20:17"},"nodeType":"YulFunctionCall","src":"22336:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22326:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22113:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22124:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22136:6:17","type":""}],"src":"22077:329:17"},{"body":{"nodeType":"YulBlock","src":"22512:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"22558:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22560:77:17"},"nodeType":"YulFunctionCall","src":"22560:79:17"},"nodeType":"YulExpressionStatement","src":"22560:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22533:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22542:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22529:3:17"},"nodeType":"YulFunctionCall","src":"22529:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"22554:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22525:3:17"},"nodeType":"YulFunctionCall","src":"22525:32:17"},"nodeType":"YulIf","src":"22522:119:17"},{"nodeType":"YulBlock","src":"22651:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22666:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22680:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22670:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22695:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22730:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22741:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22726:3:17"},"nodeType":"YulFunctionCall","src":"22726:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22750:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22705:20:17"},"nodeType":"YulFunctionCall","src":"22705:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22695:6:17"}]}]},{"nodeType":"YulBlock","src":"22778:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22793:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22807:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22797:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22823:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22858:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22869:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22854:3:17"},"nodeType":"YulFunctionCall","src":"22854:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22878:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22833:20:17"},"nodeType":"YulFunctionCall","src":"22833:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22823:6:17"}]}]},{"nodeType":"YulBlock","src":"22906:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22921:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22935:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22925:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22951:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22986:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22997:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22982:3:17"},"nodeType":"YulFunctionCall","src":"22982:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23006:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22961:20:17"},"nodeType":"YulFunctionCall","src":"22961:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22951:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22466:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22477:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22489:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22497:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22505:6:17","type":""}],"src":"22412:619:17"},{"body":{"nodeType":"YulBlock","src":"23065:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23082:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23085:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23075:6:17"},"nodeType":"YulFunctionCall","src":"23075:88:17"},"nodeType":"YulExpressionStatement","src":"23075:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23179:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23182:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23172:6:17"},"nodeType":"YulFunctionCall","src":"23172:15:17"},"nodeType":"YulExpressionStatement","src":"23172:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23203:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23206:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23196:6:17"},"nodeType":"YulFunctionCall","src":"23196:15:17"},"nodeType":"YulExpressionStatement","src":"23196:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"23037:180:17"},{"body":{"nodeType":"YulBlock","src":"23274:269:17","statements":[{"nodeType":"YulAssignment","src":"23284:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23298:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"23304:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23294:3:17"},"nodeType":"YulFunctionCall","src":"23294:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23284:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"23315:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23345:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"23351:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23341:3:17"},"nodeType":"YulFunctionCall","src":"23341:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"23319:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"23392:51:17","statements":[{"nodeType":"YulAssignment","src":"23406:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23420:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23428:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23416:3:17"},"nodeType":"YulFunctionCall","src":"23416:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23406:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23372:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23365:6:17"},"nodeType":"YulFunctionCall","src":"23365:26:17"},"nodeType":"YulIf","src":"23362:81:17"},{"body":{"nodeType":"YulBlock","src":"23495:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"23509:16:17"},"nodeType":"YulFunctionCall","src":"23509:18:17"},"nodeType":"YulExpressionStatement","src":"23509:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23459:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23482:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23490:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23479:2:17"},"nodeType":"YulFunctionCall","src":"23479:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23456:2:17"},"nodeType":"YulFunctionCall","src":"23456:38:17"},"nodeType":"YulIf","src":"23453:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23258:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23267:6:17","type":""}],"src":"23223:320:17"},{"body":{"nodeType":"YulBlock","src":"23603:87:17","statements":[{"nodeType":"YulAssignment","src":"23613:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23621:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23613:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23641:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"23644:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23634:6:17"},"nodeType":"YulFunctionCall","src":"23634:14:17"},"nodeType":"YulExpressionStatement","src":"23634:14:17"},{"nodeType":"YulAssignment","src":"23657:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23675:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23678:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23665:9:17"},"nodeType":"YulFunctionCall","src":"23665:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23657:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23590:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23598:4:17","type":""}],"src":"23549:141:17"},{"body":{"nodeType":"YulBlock","src":"23740:49:17","statements":[{"nodeType":"YulAssignment","src":"23750:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23768:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23775:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23764:3:17"},"nodeType":"YulFunctionCall","src":"23764:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"23780:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23760:3:17"},"nodeType":"YulFunctionCall","src":"23760:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"23750:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23723:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"23733:6:17","type":""}],"src":"23696:93:17"},{"body":{"nodeType":"YulBlock","src":"23848:54:17","statements":[{"nodeType":"YulAssignment","src":"23858:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"23883:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"23889:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23879:3:17"},"nodeType":"YulFunctionCall","src":"23879:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"23858:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"23823:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"23829:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"23839:8:17","type":""}],"src":"23795:107:17"},{"body":{"nodeType":"YulBlock","src":"23984:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23994:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"24015:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"24027:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24011:3:17"},"nodeType":"YulFunctionCall","src":"24011:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"23998:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24038:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"24069:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24080:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"24050:18:17"},"nodeType":"YulFunctionCall","src":"24050:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"24042:4:17","type":""}]},{"nodeType":"YulAssignment","src":"24156:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"24187:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"24198:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"24168:18:17"},"nodeType":"YulFunctionCall","src":"24168:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"24156:8:17"}]},{"nodeType":"YulAssignment","src":"24216:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24229:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"24240:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24236:3:17"},"nodeType":"YulFunctionCall","src":"24236:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24225:3:17"},"nodeType":"YulFunctionCall","src":"24225:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24216:5:17"}]},{"nodeType":"YulAssignment","src":"24255:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24268:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"24279:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"24289:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24275:3:17"},"nodeType":"YulFunctionCall","src":"24275:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24265:2:17"},"nodeType":"YulFunctionCall","src":"24265:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"24255:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23945:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"23952:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"23964:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"23977:6:17","type":""}],"src":"23908:393:17"},{"body":{"nodeType":"YulBlock","src":"24339:28:17","statements":[{"nodeType":"YulAssignment","src":"24349:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"24356:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24349:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24325:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24335:3:17","type":""}],"src":"24307:60:17"},{"body":{"nodeType":"YulBlock","src":"24433:82:17","statements":[{"nodeType":"YulAssignment","src":"24443:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24501:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24483:17:17"},"nodeType":"YulFunctionCall","src":"24483:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"24474:8:17"},"nodeType":"YulFunctionCall","src":"24474:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24456:17:17"},"nodeType":"YulFunctionCall","src":"24456:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"24443:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24413:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"24423:9:17","type":""}],"src":"24373:142:17"},{"body":{"nodeType":"YulBlock","src":"24568:28:17","statements":[{"nodeType":"YulAssignment","src":"24578:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"24585:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24578:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24554:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24564:3:17","type":""}],"src":"24521:75:17"},{"body":{"nodeType":"YulBlock","src":"24678:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"24688:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"24743:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"24712:30:17"},"nodeType":"YulFunctionCall","src":"24712:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"24692:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24767:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24807:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24801:5:17"},"nodeType":"YulFunctionCall","src":"24801:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"24814:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"24846:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"24822:23:17"},"nodeType":"YulFunctionCall","src":"24822:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"24773:27:17"},"nodeType":"YulFunctionCall","src":"24773:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"24760:6:17"},"nodeType":"YulFunctionCall","src":"24760:105:17"},"nodeType":"YulExpressionStatement","src":"24760:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"24655:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"24661:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"24669:7:17","type":""}],"src":"24602:269:17"},{"body":{"nodeType":"YulBlock","src":"24926:24:17","statements":[{"nodeType":"YulAssignment","src":"24936:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"24943:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24936:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24922:3:17","type":""}],"src":"24877:73:17"},{"body":{"nodeType":"YulBlock","src":"25009:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"25019:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"25033:30:17"},"nodeType":"YulFunctionCall","src":"25033:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"25023:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25118:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"25124:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"25132:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"25074:43:17"},"nodeType":"YulFunctionCall","src":"25074:65:17"},"nodeType":"YulExpressionStatement","src":"25074:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"24995:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"25001:6:17","type":""}],"src":"24956:189:17"},{"body":{"nodeType":"YulBlock","src":"25201:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"25268:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"25312:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"25319:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"25282:29:17"},"nodeType":"YulFunctionCall","src":"25282:39:17"},"nodeType":"YulExpressionStatement","src":"25282:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"25221:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"25228:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25218:2:17"},"nodeType":"YulFunctionCall","src":"25218:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25233:26:17","statements":[{"nodeType":"YulAssignment","src":"25235:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"25248:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"25255:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25244:3:17"},"nodeType":"YulFunctionCall","src":"25244:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"25235:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"25215:2:17","statements":[]},"src":"25211:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"25189:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"25196:3:17","type":""}],"src":"25151:186:17"},{"body":{"nodeType":"YulBlock","src":"25422:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"25448:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"25462:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"25510:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"25478:31:17"},"nodeType":"YulFunctionCall","src":"25478:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"25466:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25529:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"25552:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"25580:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"25562:17:17"},"nodeType":"YulFunctionCall","src":"25562:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25548:3:17"},"nodeType":"YulFunctionCall","src":"25548:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"25533:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"25749:27:17","statements":[{"nodeType":"YulAssignment","src":"25751:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"25766:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"25751:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"25733:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"25745:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25730:2:17"},"nodeType":"YulFunctionCall","src":"25730:18:17"},"nodeType":"YulIf","src":"25727:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"25818:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"25835:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"25863:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"25845:17:17"},"nodeType":"YulFunctionCall","src":"25845:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25831:3:17"},"nodeType":"YulFunctionCall","src":"25831:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"25789:28:17"},"nodeType":"YulFunctionCall","src":"25789:80:17"},"nodeType":"YulExpressionStatement","src":"25789:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"25439:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25444:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25436:2:17"},"nodeType":"YulFunctionCall","src":"25436:11:17"},"nodeType":"YulIf","src":"25433:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"25398:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"25405:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"25410:10:17","type":""}],"src":"25343:543:17"},{"body":{"nodeType":"YulBlock","src":"25955:54:17","statements":[{"nodeType":"YulAssignment","src":"25965:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25990:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"25996:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"25986:3:17"},"nodeType":"YulFunctionCall","src":"25986:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25965:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25930:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"25936:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25946:8:17","type":""}],"src":"25892:117:17"},{"body":{"nodeType":"YulBlock","src":"26066:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"26076:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26125:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"26128:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26121:3:17"},"nodeType":"YulFunctionCall","src":"26121:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26140:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"26136:3:17"},"nodeType":"YulFunctionCall","src":"26136:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"26092:28:17"},"nodeType":"YulFunctionCall","src":"26092:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"26088:3:17"},"nodeType":"YulFunctionCall","src":"26088:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"26080:4:17","type":""}]},{"nodeType":"YulAssignment","src":"26153:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26167:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"26173:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26163:3:17"},"nodeType":"YulFunctionCall","src":"26163:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"26153:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"26043:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"26049:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"26059:6:17","type":""}],"src":"26015:169:17"},{"body":{"nodeType":"YulBlock","src":"26270:214:17","statements":[{"nodeType":"YulAssignment","src":"26403:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26430:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"26436:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"26411:18:17"},"nodeType":"YulFunctionCall","src":"26411:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"26403:4:17"}]},{"nodeType":"YulAssignment","src":"26449:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26460:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26470:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"26473:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26466:3:17"},"nodeType":"YulFunctionCall","src":"26466:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"26457:2:17"},"nodeType":"YulFunctionCall","src":"26457:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"26449:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"26251:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"26257:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"26265:4:17","type":""}],"src":"26189:295:17"},{"body":{"nodeType":"YulBlock","src":"26581:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"26592:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26639:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26606:32:17"},"nodeType":"YulFunctionCall","src":"26606:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"26596:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"26728:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"26730:16:17"},"nodeType":"YulFunctionCall","src":"26730:18:17"},"nodeType":"YulExpressionStatement","src":"26730:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"26700:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26708:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26697:2:17"},"nodeType":"YulFunctionCall","src":"26697:30:17"},"nodeType":"YulIf","src":"26694:56:17"},{"nodeType":"YulVariableDeclaration","src":"26760:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26806:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"26800:5:17"},"nodeType":"YulFunctionCall","src":"26800:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"26774:25:17"},"nodeType":"YulFunctionCall","src":"26774:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"26764:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26905:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"26911:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"26919:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"26859:45:17"},"nodeType":"YulFunctionCall","src":"26859:67:17"},"nodeType":"YulExpressionStatement","src":"26859:67:17"},{"nodeType":"YulVariableDeclaration","src":"26936:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"26953:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"26940:9:17","type":""}]},{"nodeType":"YulAssignment","src":"26964:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"26977:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"26964:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"27028:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"27042:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"27061:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27073:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27069:3:17"},"nodeType":"YulFunctionCall","src":"27069:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27057:3:17"},"nodeType":"YulFunctionCall","src":"27057:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"27046:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27093:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"27139:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"27107:31:17"},"nodeType":"YulFunctionCall","src":"27107:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"27097:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27157:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"27166:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"27161:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"27225:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"27250:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27268:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"27273:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27264:3:17"},"nodeType":"YulFunctionCall","src":"27264:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27258:5:17"},"nodeType":"YulFunctionCall","src":"27258:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"27243:6:17"},"nodeType":"YulFunctionCall","src":"27243:42:17"},"nodeType":"YulExpressionStatement","src":"27243:42:17"},{"nodeType":"YulAssignment","src":"27302:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"27316:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27324:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27312:3:17"},"nodeType":"YulFunctionCall","src":"27312:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"27302:6:17"}]},{"nodeType":"YulAssignment","src":"27343:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"27360:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27371:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27356:3:17"},"nodeType":"YulFunctionCall","src":"27356:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"27343:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27191:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"27194:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27188:2:17"},"nodeType":"YulFunctionCall","src":"27188:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27203:21:17","statements":[{"nodeType":"YulAssignment","src":"27205:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"27214:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"27217:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27210:3:17"},"nodeType":"YulFunctionCall","src":"27210:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"27205:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"27184:3:17","statements":[]},"src":"27180:208:17"},{"body":{"nodeType":"YulBlock","src":"27424:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"27442:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27469:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"27474:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27465:3:17"},"nodeType":"YulFunctionCall","src":"27465:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27459:5:17"},"nodeType":"YulFunctionCall","src":"27459:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"27446:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"27509:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"27536:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"27551:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27559:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27547:3:17"},"nodeType":"YulFunctionCall","src":"27547:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"27517:18:17"},"nodeType":"YulFunctionCall","src":"27517:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"27502:6:17"},"nodeType":"YulFunctionCall","src":"27502:64:17"},"nodeType":"YulExpressionStatement","src":"27502:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"27407:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"27416:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27404:2:17"},"nodeType":"YulFunctionCall","src":"27404:19:17"},"nodeType":"YulIf","src":"27401:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"27600:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"27614:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27622:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27610:3:17"},"nodeType":"YulFunctionCall","src":"27610:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"27626:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27606:3:17"},"nodeType":"YulFunctionCall","src":"27606:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"27593:6:17"},"nodeType":"YulFunctionCall","src":"27593:36:17"},"nodeType":"YulExpressionStatement","src":"27593:36:17"}]},"nodeType":"YulCase","src":"27021:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"27026:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"27656:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"27670:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"27683:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"27674:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"27707:67:17","statements":[{"nodeType":"YulAssignment","src":"27725:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"27744:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"27749:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27740:3:17"},"nodeType":"YulFunctionCall","src":"27740:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27734:5:17"},"nodeType":"YulFunctionCall","src":"27734:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27725:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"27700:6:17"},"nodeType":"YulIf","src":"27697:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"27794:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27853:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"27860:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"27800:52:17"},"nodeType":"YulFunctionCall","src":"27800:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"27787:6:17"},"nodeType":"YulFunctionCall","src":"27787:81:17"},"nodeType":"YulExpressionStatement","src":"27787:81:17"}]},"nodeType":"YulCase","src":"27648:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"27001:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27009:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26998:2:17"},"nodeType":"YulFunctionCall","src":"26998:14:17"},"nodeType":"YulSwitch","src":"26991:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26570:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"26576:3:17","type":""}],"src":"26489:1395:17"},{"body":{"nodeType":"YulBlock","src":"28004:34:17","statements":[{"nodeType":"YulAssignment","src":"28014:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"28029:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28014:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27976:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"27981:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27992:11:17","type":""}],"src":"27890:148:17"},{"body":{"nodeType":"YulBlock","src":"28175:767:17","statements":[{"nodeType":"YulVariableDeclaration","src":"28185:29:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28208:5:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28202:5:17"},"nodeType":"YulFunctionCall","src":"28202:12:17"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"28189:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28223:50:17","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28263:9:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28237:25:17"},"nodeType":"YulFunctionCall","src":"28237:36:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28227:6:17","type":""}]},{"nodeType":"YulAssignment","src":"28282:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28366:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"28371:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28289:76:17"},"nodeType":"YulFunctionCall","src":"28289:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28282:3:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28427:159:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28480:3:17"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28489:9:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28504:4:17","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28500:3:17"},"nodeType":"YulFunctionCall","src":"28500:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28485:3:17"},"nodeType":"YulFunctionCall","src":"28485:25:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28473:6:17"},"nodeType":"YulFunctionCall","src":"28473:38:17"},"nodeType":"YulExpressionStatement","src":"28473:38:17"},{"nodeType":"YulAssignment","src":"28524:52:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28535:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28544:6:17"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"28566:6:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28559:6:17"},"nodeType":"YulFunctionCall","src":"28559:14:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28552:6:17"},"nodeType":"YulFunctionCall","src":"28552:22:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28540:3:17"},"nodeType":"YulFunctionCall","src":"28540:35:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28531:3:17"},"nodeType":"YulFunctionCall","src":"28531:45:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28524:3:17"}]}]},"nodeType":"YulCase","src":"28420:166:17","value":{"kind":"number","nodeType":"YulLiteral","src":"28425:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"28602:334:17","statements":[{"nodeType":"YulVariableDeclaration","src":"28647:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28694:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28662:31:17"},"nodeType":"YulFunctionCall","src":"28662:38:17"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"28651:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28713:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"28722:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28717:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"28780:110:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28809:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"28814:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28805:3:17"},"nodeType":"YulFunctionCall","src":"28805:11:17"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"28824:7:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28818:5:17"},"nodeType":"YulFunctionCall","src":"28818:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28798:6:17"},"nodeType":"YulFunctionCall","src":"28798:35:17"},"nodeType":"YulExpressionStatement","src":"28798:35:17"},{"nodeType":"YulAssignment","src":"28850:26:17","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"28865:7:17"},{"kind":"number","nodeType":"YulLiteral","src":"28874:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28861:3:17"},"nodeType":"YulFunctionCall","src":"28861:15:17"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"28850:7:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28747:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"28750:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28744:2:17"},"nodeType":"YulFunctionCall","src":"28744:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28758:21:17","statements":[{"nodeType":"YulAssignment","src":"28760:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"28769:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"28772:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28765:3:17"},"nodeType":"YulFunctionCall","src":"28765:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"28760:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"28740:3:17","statements":[]},"src":"28736:154:17"},{"nodeType":"YulAssignment","src":"28903:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28914:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"28919:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28910:3:17"},"nodeType":"YulFunctionCall","src":"28910:16:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28903:3:17"}]}]},"nodeType":"YulCase","src":"28595:341:17","value":{"kind":"number","nodeType":"YulLiteral","src":"28600:1:17","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"28398:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28409:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28394:3:17"},"nodeType":"YulFunctionCall","src":"28394:17:17"},"nodeType":"YulSwitch","src":"28387:549:17"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28156:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28163:3:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28171:3:17","type":""}],"src":"28068:874:17"},{"body":{"nodeType":"YulBlock","src":"29058:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"29068:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29115:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29082:32:17"},"nodeType":"YulFunctionCall","src":"29082:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29072:6:17","type":""}]},{"nodeType":"YulAssignment","src":"29130:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29214:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"29219:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29137:76:17"},"nodeType":"YulFunctionCall","src":"29137:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29130:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29274:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"29281:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29270:3:17"},"nodeType":"YulFunctionCall","src":"29270:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"29288:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"29293:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"29235:34:17"},"nodeType":"YulFunctionCall","src":"29235:65:17"},"nodeType":"YulExpressionStatement","src":"29235:65:17"},{"nodeType":"YulAssignment","src":"29309:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29320:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"29325:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29316:3:17"},"nodeType":"YulFunctionCall","src":"29316:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29309:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29039:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29046:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29054:3:17","type":""}],"src":"28948:390:17"},{"body":{"nodeType":"YulBlock","src":"29490:36:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29507:3:17"},{"hexValue":"2e6a736f6e","kind":"string","nodeType":"YulLiteral","src":"29512:7:17","type":"","value":".json"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29500:6:17"},"nodeType":"YulFunctionCall","src":"29500:20:17"},"nodeType":"YulExpressionStatement","src":"29500:20:17"}]},"name":"abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29485:3:17","type":""}],"src":"29344:182:17"},{"body":{"nodeType":"YulBlock","src":"29803:422:17","statements":[{"nodeType":"YulAssignment","src":"29814:99:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29900:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"29909:3:17"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29821:78:17"},"nodeType":"YulFunctionCall","src":"29821:92:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29814:3:17"}]},{"nodeType":"YulAssignment","src":"29923:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30012:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"30021:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29930:81:17"},"nodeType":"YulFunctionCall","src":"29930:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29923:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30168:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30035:131:17"},"nodeType":"YulFunctionCall","src":"30035:137:17"},"nodeType":"YulExpressionStatement","src":"30035:137:17"},{"nodeType":"YulAssignment","src":"30181:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30192:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30197:1:17","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30188:3:17"},"nodeType":"YulFunctionCall","src":"30188:11:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30181:3:17"}]},{"nodeType":"YulAssignment","src":"30209:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"30216:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30209:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29774:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29780:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29788:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29799:3:17","type":""}],"src":"29532:693:17"},{"body":{"nodeType":"YulBlock","src":"30357:206:17","statements":[{"nodeType":"YulAssignment","src":"30367:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30379:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30390:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30375:3:17"},"nodeType":"YulFunctionCall","src":"30375:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30367:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30447:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30460:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30471:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30456:3:17"},"nodeType":"YulFunctionCall","src":"30456:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30403:43:17"},"nodeType":"YulFunctionCall","src":"30403:71:17"},"nodeType":"YulExpressionStatement","src":"30403:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30528:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30541:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30552:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30537:3:17"},"nodeType":"YulFunctionCall","src":"30537:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"30484:43:17"},"nodeType":"YulFunctionCall","src":"30484:72:17"},"nodeType":"YulExpressionStatement","src":"30484:72:17"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30321:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30333:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30341:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30352:4:17","type":""}],"src":"30231:332:17"},{"body":{"nodeType":"YulBlock","src":"30695:206:17","statements":[{"nodeType":"YulAssignment","src":"30705:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30717:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30728:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30713:3:17"},"nodeType":"YulFunctionCall","src":"30713:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30705:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30785:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30798:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30809:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30794:3:17"},"nodeType":"YulFunctionCall","src":"30794:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30741:43:17"},"nodeType":"YulFunctionCall","src":"30741:71:17"},"nodeType":"YulExpressionStatement","src":"30741:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30866:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30879:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30890:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30875:3:17"},"nodeType":"YulFunctionCall","src":"30875:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30822:43:17"},"nodeType":"YulFunctionCall","src":"30822:72:17"},"nodeType":"YulExpressionStatement","src":"30822:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30659:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30671:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30679:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30690:4:17","type":""}],"src":"30569:332:17"},{"body":{"nodeType":"YulBlock","src":"30935:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30952:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30955:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30945:6:17"},"nodeType":"YulFunctionCall","src":"30945:88:17"},"nodeType":"YulExpressionStatement","src":"30945:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31049:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31052:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31042:6:17"},"nodeType":"YulFunctionCall","src":"31042:15:17"},"nodeType":"YulExpressionStatement","src":"31042:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31073:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31076:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31066:6:17"},"nodeType":"YulFunctionCall","src":"31066:15:17"},"nodeType":"YulExpressionStatement","src":"31066:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"30907:180:17"},{"body":{"nodeType":"YulBlock","src":"31121:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31138:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31141:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31131:6:17"},"nodeType":"YulFunctionCall","src":"31131:88:17"},"nodeType":"YulExpressionStatement","src":"31131:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31235:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31238:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31228:6:17"},"nodeType":"YulFunctionCall","src":"31228:15:17"},"nodeType":"YulExpressionStatement","src":"31228:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31259:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31262:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31252:6:17"},"nodeType":"YulFunctionCall","src":"31252:15:17"},"nodeType":"YulExpressionStatement","src":"31252:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"31093:180:17"},{"body":{"nodeType":"YulBlock","src":"31322:190:17","statements":[{"nodeType":"YulAssignment","src":"31332:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31359:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31341:17:17"},"nodeType":"YulFunctionCall","src":"31341:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"31332:5:17"}]},{"body":{"nodeType":"YulBlock","src":"31455:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31457:16:17"},"nodeType":"YulFunctionCall","src":"31457:18:17"},"nodeType":"YulExpressionStatement","src":"31457:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31380:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"31387:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"31377:2:17"},"nodeType":"YulFunctionCall","src":"31377:77:17"},"nodeType":"YulIf","src":"31374:103:17"},{"nodeType":"YulAssignment","src":"31486:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31497:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"31504:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31493:3:17"},"nodeType":"YulFunctionCall","src":"31493:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31486:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31308:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"31318:3:17","type":""}],"src":"31279:233:17"},{"body":{"nodeType":"YulBlock","src":"31546:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31566:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31556:6:17"},"nodeType":"YulFunctionCall","src":"31556:88:17"},"nodeType":"YulExpressionStatement","src":"31556:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31660:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31663:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31653:6:17"},"nodeType":"YulFunctionCall","src":"31653:15:17"},"nodeType":"YulExpressionStatement","src":"31653:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31684:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31687:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31677:6:17"},"nodeType":"YulFunctionCall","src":"31677:15:17"},"nodeType":"YulExpressionStatement","src":"31677:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"31518:180:17"},{"body":{"nodeType":"YulBlock","src":"31886:371:17","statements":[{"nodeType":"YulAssignment","src":"31896:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31908:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31919:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31904:3:17"},"nodeType":"YulFunctionCall","src":"31904:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31896:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31977:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31990:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32001:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31986:3:17"},"nodeType":"YulFunctionCall","src":"31986:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31933:43:17"},"nodeType":"YulFunctionCall","src":"31933:71:17"},"nodeType":"YulExpressionStatement","src":"31933:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32058:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32071:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32082:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32067:3:17"},"nodeType":"YulFunctionCall","src":"32067:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32014:43:17"},"nodeType":"YulFunctionCall","src":"32014:72:17"},"nodeType":"YulExpressionStatement","src":"32014:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"32140:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32153:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32164:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32149:3:17"},"nodeType":"YulFunctionCall","src":"32149:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32096:43:17"},"nodeType":"YulFunctionCall","src":"32096:72:17"},"nodeType":"YulExpressionStatement","src":"32096:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"32222:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32235:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32246:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32231:3:17"},"nodeType":"YulFunctionCall","src":"32231:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32178:43:17"},"nodeType":"YulFunctionCall","src":"32178:72:17"},"nodeType":"YulExpressionStatement","src":"32178:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31834:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31846:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31854:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31862:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31870:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31881:4:17","type":""}],"src":"31704:553:17"},{"body":{"nodeType":"YulBlock","src":"32307:147:17","statements":[{"nodeType":"YulAssignment","src":"32317:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32340:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32322:17:17"},"nodeType":"YulFunctionCall","src":"32322:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32317:1:17"}]},{"nodeType":"YulAssignment","src":"32351:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32374:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32356:17:17"},"nodeType":"YulFunctionCall","src":"32356:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32351:1:17"}]},{"nodeType":"YulAssignment","src":"32385:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32396:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"32399:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32392:3:17"},"nodeType":"YulFunctionCall","src":"32392:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"32385:3:17"}]},{"body":{"nodeType":"YulBlock","src":"32425:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32427:16:17"},"nodeType":"YulFunctionCall","src":"32427:18:17"},"nodeType":"YulExpressionStatement","src":"32427:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32417:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"32420:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32414:2:17"},"nodeType":"YulFunctionCall","src":"32414:10:17"},"nodeType":"YulIf","src":"32411:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"32294:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"32297:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"32303:3:17","type":""}],"src":"32263:191:17"},{"body":{"nodeType":"YulBlock","src":"32686:408:17","statements":[{"nodeType":"YulAssignment","src":"32696:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32708:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32719:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32704:3:17"},"nodeType":"YulFunctionCall","src":"32704:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32696:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32743:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32754:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32739:3:17"},"nodeType":"YulFunctionCall","src":"32739:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32762:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"32768:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32758:3:17"},"nodeType":"YulFunctionCall","src":"32758:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32732:6:17"},"nodeType":"YulFunctionCall","src":"32732:47:17"},"nodeType":"YulExpressionStatement","src":"32732:47:17"},{"nodeType":"YulAssignment","src":"32788:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32890:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"32899:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32796:93:17"},"nodeType":"YulFunctionCall","src":"32796:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32788:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32925:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32936:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32921:3:17"},"nodeType":"YulFunctionCall","src":"32921:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32945:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"32951:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32941:3:17"},"nodeType":"YulFunctionCall","src":"32941:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32914:6:17"},"nodeType":"YulFunctionCall","src":"32914:48:17"},"nodeType":"YulExpressionStatement","src":"32914:48:17"},{"nodeType":"YulAssignment","src":"32971:116:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33073:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"33082:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32979:93:17"},"nodeType":"YulFunctionCall","src":"32979:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32971:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32650:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32662:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32670:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32681:4:17","type":""}],"src":"32460:634:17"},{"body":{"nodeType":"YulBlock","src":"33158:40:17","statements":[{"nodeType":"YulAssignment","src":"33169:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33185:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33179:5:17"},"nodeType":"YulFunctionCall","src":"33179:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"33169:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33141:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"33151:6:17","type":""}],"src":"33100:98:17"},{"body":{"nodeType":"YulBlock","src":"33299:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33316:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"33321:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33309:6:17"},"nodeType":"YulFunctionCall","src":"33309:19:17"},"nodeType":"YulExpressionStatement","src":"33309:19:17"},{"nodeType":"YulAssignment","src":"33337:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33356:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"33361:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33352:3:17"},"nodeType":"YulFunctionCall","src":"33352:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33337:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33271:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"33276:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"33287:11:17","type":""}],"src":"33204:168:17"},{"body":{"nodeType":"YulBlock","src":"33468:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"33478:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33524:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33492:31:17"},"nodeType":"YulFunctionCall","src":"33492:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33482:6:17","type":""}]},{"nodeType":"YulAssignment","src":"33539:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33604:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"33609:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33546:57:17"},"nodeType":"YulFunctionCall","src":"33546:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33539:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33664:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"33671:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33660:3:17"},"nodeType":"YulFunctionCall","src":"33660:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"33678:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"33683:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"33625:34:17"},"nodeType":"YulFunctionCall","src":"33625:65:17"},"nodeType":"YulExpressionStatement","src":"33625:65:17"},{"nodeType":"YulAssignment","src":"33699:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33710:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33737:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"33715:21:17"},"nodeType":"YulFunctionCall","src":"33715:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33706:3:17"},"nodeType":"YulFunctionCall","src":"33706:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33699:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33449:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33456:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33464:3:17","type":""}],"src":"33378:373:17"},{"body":{"nodeType":"YulBlock","src":"33985:523:17","statements":[{"nodeType":"YulAssignment","src":"33995:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34007:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34018:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34003:3:17"},"nodeType":"YulFunctionCall","src":"34003:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33995:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34076:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34089:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34100:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34085:3:17"},"nodeType":"YulFunctionCall","src":"34085:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34032:43:17"},"nodeType":"YulFunctionCall","src":"34032:71:17"},"nodeType":"YulExpressionStatement","src":"34032:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34157:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34170:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34181:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34166:3:17"},"nodeType":"YulFunctionCall","src":"34166:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34113:43:17"},"nodeType":"YulFunctionCall","src":"34113:72:17"},"nodeType":"YulExpressionStatement","src":"34113:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34239:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34252:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34263:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34248:3:17"},"nodeType":"YulFunctionCall","src":"34248:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34195:43:17"},"nodeType":"YulFunctionCall","src":"34195:72:17"},"nodeType":"YulExpressionStatement","src":"34195:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34321:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34334:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34345:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34330:3:17"},"nodeType":"YulFunctionCall","src":"34330:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34277:43:17"},"nodeType":"YulFunctionCall","src":"34277:72:17"},"nodeType":"YulExpressionStatement","src":"34277:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34370:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34381:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34366:3:17"},"nodeType":"YulFunctionCall","src":"34366:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34391:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"34397:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34387:3:17"},"nodeType":"YulFunctionCall","src":"34387:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34359:6:17"},"nodeType":"YulFunctionCall","src":"34359:49:17"},"nodeType":"YulExpressionStatement","src":"34359:49:17"},{"nodeType":"YulAssignment","src":"34417:84:17","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34487:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"34496:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34425:61:17"},"nodeType":"YulFunctionCall","src":"34425:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34417:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33925:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33937:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33945:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33953:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33961:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33969:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33980:4:17","type":""}],"src":"33757:751:17"},{"body":{"nodeType":"YulBlock","src":"34576:79:17","statements":[{"nodeType":"YulAssignment","src":"34586:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34601:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34595:5:17"},"nodeType":"YulFunctionCall","src":"34595:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34586:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34643:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"34617:25:17"},"nodeType":"YulFunctionCall","src":"34617:32:17"},"nodeType":"YulExpressionStatement","src":"34617:32:17"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"34554:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"34562:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"34570:5:17","type":""}],"src":"34514:141:17"},{"body":{"nodeType":"YulBlock","src":"34737:273:17","statements":[{"body":{"nodeType":"YulBlock","src":"34783:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"34785:77:17"},"nodeType":"YulFunctionCall","src":"34785:79:17"},"nodeType":"YulExpressionStatement","src":"34785:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34758:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"34767:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34754:3:17"},"nodeType":"YulFunctionCall","src":"34754:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"34779:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34750:3:17"},"nodeType":"YulFunctionCall","src":"34750:32:17"},"nodeType":"YulIf","src":"34747:119:17"},{"nodeType":"YulBlock","src":"34876:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"34891:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"34905:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34895:6:17","type":""}]},{"nodeType":"YulAssignment","src":"34920:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34965:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"34976:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34961:3:17"},"nodeType":"YulFunctionCall","src":"34961:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34985:7:17"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"34930:30:17"},"nodeType":"YulFunctionCall","src":"34930:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34920:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34707:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34718:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34730:6:17","type":""}],"src":"34661:349:17"},{"body":{"nodeType":"YulBlock","src":"35344:725:17","statements":[{"nodeType":"YulAssignment","src":"35354:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35366:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35377:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35362:3:17"},"nodeType":"YulFunctionCall","src":"35362:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35354:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35435:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35448:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35459:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35444:3:17"},"nodeType":"YulFunctionCall","src":"35444:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35391:43:17"},"nodeType":"YulFunctionCall","src":"35391:71:17"},"nodeType":"YulExpressionStatement","src":"35391:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35516:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35529:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35540:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35525:3:17"},"nodeType":"YulFunctionCall","src":"35525:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35472:43:17"},"nodeType":"YulFunctionCall","src":"35472:72:17"},"nodeType":"YulExpressionStatement","src":"35472:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35565:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35576:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35561:3:17"},"nodeType":"YulFunctionCall","src":"35561:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35585:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35591:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35581:3:17"},"nodeType":"YulFunctionCall","src":"35581:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35554:6:17"},"nodeType":"YulFunctionCall","src":"35554:48:17"},"nodeType":"YulExpressionStatement","src":"35554:48:17"},{"nodeType":"YulAssignment","src":"35611:116:17","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35713:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"35722:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35619:93:17"},"nodeType":"YulFunctionCall","src":"35619:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35611:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35748:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35759:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35744:3:17"},"nodeType":"YulFunctionCall","src":"35744:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35768:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35774:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35764:3:17"},"nodeType":"YulFunctionCall","src":"35764:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35737:6:17"},"nodeType":"YulFunctionCall","src":"35737:48:17"},"nodeType":"YulExpressionStatement","src":"35737:48:17"},{"nodeType":"YulAssignment","src":"35794:116:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35896:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"35905:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35802:93:17"},"nodeType":"YulFunctionCall","src":"35802:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35794:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35931:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35942:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35927:3:17"},"nodeType":"YulFunctionCall","src":"35927:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35952:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35958:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35948:3:17"},"nodeType":"YulFunctionCall","src":"35948:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35920:6:17"},"nodeType":"YulFunctionCall","src":"35920:49:17"},"nodeType":"YulExpressionStatement","src":"35920:49:17"},{"nodeType":"YulAssignment","src":"35978:84:17","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36048:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"36057:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35986:61:17"},"nodeType":"YulFunctionCall","src":"35986:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35978:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35284:9:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"35296:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35304:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35312:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35320:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35328:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35339:4:17","type":""}],"src":"35016:1053:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack(pos) {\n        mstore(pos, \".json\")\n    }\n\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        abi_encode_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972_to_t_bytes5_nonPadded_inplace_fromStack( pos)\n        pos := add(pos, 5)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010a5760003560e01c8063715018a6116100a2578063d547cfb711610071578063d547cfb71461029f578063e985e9c5146102bd578063f242432a146102ed578063f2fde38b14610309578063f5298aca146103255761010a565b8063715018a61461023f578063731133e9146102495780638da5cb5b14610265578063a22cb465146102835761010a565b80631f7fdffa116100de5780631f7fdffa146101bb5780632eb2c2d6146101d75780634e1273f4146101f35780636b20c454146102235761010a565b8062fdd58e1461010f57806301ffc9a71461013f57806302fe53051461016f5780630e89341c1461018b575b600080fd5b61012960048036038101906101249190611dd8565b610341565b6040516101369190611e27565b60405180910390f35b61015960048036038101906101549190611e9a565b61039b565b6040516101669190611ee2565b60405180910390f35b61018960048036038101906101849190612043565b61047d565b005b6101a560048036038101906101a0919061208c565b61052b565b6040516101b29190612138565b60405180910390f35b6101d560048036038101906101d091906122c3565b61055f565b005b6101f160048036038101906101ec919061237e565b610579565b005b61020d60048036038101906102089190612510565b610621565b60405161021a9190612646565b60405180910390f35b61023d60048036038101906102389190612668565b610730565b005b6102476107dc565b005b610263600480360381019061025e91906126f3565b6107f0565b005b61026d610814565b60405161027a9190612785565b60405180910390f35b61029d600480360381019061029891906127cc565b61083e565b005b6102a7610854565b6040516102b49190612138565b60405180910390f35b6102d760048036038101906102d2919061280c565b6108e2565b6040516102e49190611ee2565b60405180910390f35b6103076004803603810190610302919061284c565b610976565b005b610323600480360381019061031e91906128e3565b610a1e565b005b61033f600480360381019061033a9190612910565b610aa4565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610476575061047582610b50565b5b9050919050565b610485610bba565b80600490816104949190612b6f565b50610528600480546104a590612992565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190612992565b801561051e5780601f106104f35761010080835404028352916020019161051e565b820191906000526020600020905b81548152906001019060200180831161050157829003601f168201915b5050505050610c41565b50565b6060600461053883610c54565b604051602001610549929190612d26565b6040516020818303038152906040529050919050565b610567610bba565b61057384848484610d22565b50505050565b6000610583610da8565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156105c857506105c686826108e2565b155b1561060c5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610603929190612d59565b60405180910390fd5b6106198686868686610db0565b505050505050565b6060815183511461066d57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610664929190612d82565b60405180910390fd5b6000835167ffffffffffffffff81111561068a57610689611f18565b5b6040519080825280602002602001820160405280156106b85781602001602082028036833780820191505090505b50905060005b8451811015610725576106f56106dd8287610ea890919063ffffffff16565b6106f08387610ebc90919063ffffffff16565b610341565b82828151811061070857610707612dab565b5b6020026020010181815250508061071e90612e09565b90506106be565b508091505092915050565b610738610da8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610781575061077f8361077a610da8565b6108e2565b155b156107cc5761078e610da8565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107c3929190612d59565b60405180910390fd5b6107d7838383610ed0565b505050565b6107e4610bba565b6107ee6000610f64565b565b6107f8610bba565b6108048484848461102a565b61080d8361052b565b5050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610850610849610da8565b83836110c3565b5050565b6004805461086190612992565b80601f016020809104026020016040519081016040528092919081815260200182805461088d90612992565b80156108da5780601f106108af576101008083540402835291602001916108da565b820191906000526020600020905b8154815290600101906020018083116108bd57829003601f168201915b505050505081565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610980610da8565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156109c557506109c386826108e2565b155b15610a095780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610a00929190612d59565b60405180910390fd5b610a168686868686611233565b505050505050565b610a26610bba565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a985760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a8f9190612785565b60405180910390fd5b610aa181610f64565b50565b610aac610da8565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610af55750610af383610aee610da8565b6108e2565b155b15610b4057610b02610da8565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610b37929190612d59565b60405180910390fd5b610b4b83838361133e565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610bc2610da8565b73ffffffffffffffffffffffffffffffffffffffff16610be0610814565b73ffffffffffffffffffffffffffffffffffffffff1614610c3f57610c03610da8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c369190612785565b60405180910390fd5b565b8060029081610c509190612b6f565b5050565b606060006001610c63846113e5565b01905060008167ffffffffffffffff811115610c8257610c81611f18565b5b6040519080825280601f01601f191660200182016040528015610cb45781602001600182028036833780820191505090505b509050600082602001820190505b600115610d17578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610d0b57610d0a612e51565b5b04945060008503610cc2575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d945760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610d8b9190612785565b60405180910390fd5b610da2600085858585611538565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e225760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610e199190612785565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e945760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610e8b9190612785565b60405180910390fd5b610ea18585858585611538565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f425760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f399190612785565b60405180910390fd5b610f5f836000848460405180602001604052806000815250611538565b505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361109c5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110939190612785565b60405180910390fd5b6000806110a985856115ea565b915091506110bb600087848487611538565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111355760006040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161112c9190612785565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112269190611ee2565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112a55760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161129c9190612785565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036113175760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161130e9190612785565b60405180910390fd5b60008061132485856115ea565b915091506113358787848487611538565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113b05760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016113a79190612785565b60405180910390fd5b6000806113bd84846115ea565b915091506113de856000848460405180602001604052806000815250611538565b5050505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611443577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161143957611438612e51565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611480576d04ee2d6d415b85acef8100000000838161147657611475612e51565b5b0492506020810190505b662386f26fc1000083106114af57662386f26fc1000083816114a5576114a4612e51565b5b0492506010810190505b6305f5e10083106114d8576305f5e10083816114ce576114cd612e51565b5b0492506008810190505b61271083106114fd5761271083816114f3576114f2612e51565b5b0492506004810190505b60648310611520576064838161151657611515612e51565b5b0492506002810190505b600a831061152f576001810190505b80915050919050565b6115448585858561161a565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146115e3576000611582610da8565b905060018451036115d25760006115a3600086610ebc90919063ffffffff16565b905060006115bb600086610ebc90919063ffffffff16565b90506115cb8389898585896119c8565b50506115e1565b6115e0818787878787611b7c565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461166457815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161165b929190612d82565b60405180910390fd5b600061166e610da8565b905060005b83518110156118835760006116918286610ebc90919063ffffffff16565b905060006116a88386610ebc90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146117d557600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561177d57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016117749493929190612e80565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611870578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118689190612ec5565b925050819055505b50508061187c90612e09565b9050611673565b5060018351036119425760006118a3600085610ebc90919063ffffffff16565b905060006118bb600085610ebc90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611933929190612d82565b60405180910390a450506119c1565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516119b8929190612ef9565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611b74578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611a29959493929190612f85565b6020604051808303816000875af1925050508015611a6557506040513d601f19601f82011682018060405250810190611a629190612ff4565b60015b611ae9573d8060008114611a95576040519150601f19603f3d011682016040523d82523d6000602084013e611a9a565b606091505b506000815103611ae157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ad89190612785565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611b7257846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611b699190612785565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611d28578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611bdd959493929190613021565b6020604051808303816000875af1925050508015611c1957506040513d601f19601f82011682018060405250810190611c169190612ff4565b60015b611c9d573d8060008114611c49576040519150601f19603f3d011682016040523d82523d6000602084013e611c4e565b606091505b506000815103611c9557846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611c8c9190612785565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611d2657846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611d1d9190612785565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d6f82611d44565b9050919050565b611d7f81611d64565b8114611d8a57600080fd5b50565b600081359050611d9c81611d76565b92915050565b6000819050919050565b611db581611da2565b8114611dc057600080fd5b50565b600081359050611dd281611dac565b92915050565b60008060408385031215611def57611dee611d3a565b5b6000611dfd85828601611d8d565b9250506020611e0e85828601611dc3565b9150509250929050565b611e2181611da2565b82525050565b6000602082019050611e3c6000830184611e18565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e7781611e42565b8114611e8257600080fd5b50565b600081359050611e9481611e6e565b92915050565b600060208284031215611eb057611eaf611d3a565b5b6000611ebe84828501611e85565b91505092915050565b60008115159050919050565b611edc81611ec7565b82525050565b6000602082019050611ef76000830184611ed3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f5082611f07565b810181811067ffffffffffffffff82111715611f6f57611f6e611f18565b5b80604052505050565b6000611f82611d30565b9050611f8e8282611f47565b919050565b600067ffffffffffffffff821115611fae57611fad611f18565b5b611fb782611f07565b9050602081019050919050565b82818337600083830152505050565b6000611fe6611fe184611f93565b611f78565b90508281526020810184848401111561200257612001611f02565b5b61200d848285611fc4565b509392505050565b600082601f83011261202a57612029611efd565b5b813561203a848260208601611fd3565b91505092915050565b60006020828403121561205957612058611d3a565b5b600082013567ffffffffffffffff81111561207757612076611d3f565b5b61208384828501612015565b91505092915050565b6000602082840312156120a2576120a1611d3a565b5b60006120b084828501611dc3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120f35780820151818401526020810190506120d8565b60008484015250505050565b600061210a826120b9565b61211481856120c4565b93506121248185602086016120d5565b61212d81611f07565b840191505092915050565b6000602082019050818103600083015261215281846120ff565b905092915050565b600067ffffffffffffffff82111561217557612174611f18565b5b602082029050602081019050919050565b600080fd5b600061219e6121998461215a565b611f78565b905080838252602082019050602084028301858111156121c1576121c0612186565b5b835b818110156121ea57806121d68882611dc3565b8452602084019350506020810190506121c3565b5050509392505050565b600082601f83011261220957612208611efd565b5b813561221984826020860161218b565b91505092915050565b600067ffffffffffffffff82111561223d5761223c611f18565b5b61224682611f07565b9050602081019050919050565b600061226661226184612222565b611f78565b90508281526020810184848401111561228257612281611f02565b5b61228d848285611fc4565b509392505050565b600082601f8301126122aa576122a9611efd565b5b81356122ba848260208601612253565b91505092915050565b600080600080608085870312156122dd576122dc611d3a565b5b60006122eb87828801611d8d565b945050602085013567ffffffffffffffff81111561230c5761230b611d3f565b5b612318878288016121f4565b935050604085013567ffffffffffffffff81111561233957612338611d3f565b5b612345878288016121f4565b925050606085013567ffffffffffffffff81111561236657612365611d3f565b5b61237287828801612295565b91505092959194509250565b600080600080600060a0868803121561239a57612399611d3a565b5b60006123a888828901611d8d565b95505060206123b988828901611d8d565b945050604086013567ffffffffffffffff8111156123da576123d9611d3f565b5b6123e6888289016121f4565b935050606086013567ffffffffffffffff81111561240757612406611d3f565b5b612413888289016121f4565b925050608086013567ffffffffffffffff81111561243457612433611d3f565b5b61244088828901612295565b9150509295509295909350565b600067ffffffffffffffff82111561246857612467611f18565b5b602082029050602081019050919050565b600061248c6124878461244d565b611f78565b905080838252602082019050602084028301858111156124af576124ae612186565b5b835b818110156124d857806124c48882611d8d565b8452602084019350506020810190506124b1565b5050509392505050565b600082601f8301126124f7576124f6611efd565b5b8135612507848260208601612479565b91505092915050565b6000806040838503121561252757612526611d3a565b5b600083013567ffffffffffffffff81111561254557612544611d3f565b5b612551858286016124e2565b925050602083013567ffffffffffffffff81111561257257612571611d3f565b5b61257e858286016121f4565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6125bd81611da2565b82525050565b60006125cf83836125b4565b60208301905092915050565b6000602082019050919050565b60006125f382612588565b6125fd8185612593565b9350612608836125a4565b8060005b8381101561263957815161262088826125c3565b975061262b836125db565b92505060018101905061260c565b5085935050505092915050565b6000602082019050818103600083015261266081846125e8565b905092915050565b60008060006060848603121561268157612680611d3a565b5b600061268f86828701611d8d565b935050602084013567ffffffffffffffff8111156126b0576126af611d3f565b5b6126bc868287016121f4565b925050604084013567ffffffffffffffff8111156126dd576126dc611d3f565b5b6126e9868287016121f4565b9150509250925092565b6000806000806080858703121561270d5761270c611d3a565b5b600061271b87828801611d8d565b945050602061272c87828801611dc3565b935050604061273d87828801611dc3565b925050606085013567ffffffffffffffff81111561275e5761275d611d3f565b5b61276a87828801612295565b91505092959194509250565b61277f81611d64565b82525050565b600060208201905061279a6000830184612776565b92915050565b6127a981611ec7565b81146127b457600080fd5b50565b6000813590506127c6816127a0565b92915050565b600080604083850312156127e3576127e2611d3a565b5b60006127f185828601611d8d565b9250506020612802858286016127b7565b9150509250929050565b6000806040838503121561282357612822611d3a565b5b600061283185828601611d8d565b925050602061284285828601611d8d565b9150509250929050565b600080600080600060a0868803121561286857612867611d3a565b5b600061287688828901611d8d565b955050602061288788828901611d8d565b945050604061289888828901611dc3565b93505060606128a988828901611dc3565b925050608086013567ffffffffffffffff8111156128ca576128c9611d3f565b5b6128d688828901612295565b9150509295509295909350565b6000602082840312156128f9576128f8611d3a565b5b600061290784828501611d8d565b91505092915050565b60008060006060848603121561292957612928611d3a565b5b600061293786828701611d8d565b935050602061294886828701611dc3565b925050604061295986828701611dc3565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806129aa57607f821691505b6020821081036129bd576129bc612963565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612a257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826129e8565b612a2f86836129e8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612a6c612a67612a6284611da2565b612a47565b611da2565b9050919050565b6000819050919050565b612a8683612a51565b612a9a612a9282612a73565b8484546129f5565b825550505050565b600090565b612aaf612aa2565b612aba818484612a7d565b505050565b5b81811015612ade57612ad3600082612aa7565b600181019050612ac0565b5050565b601f821115612b2357612af4816129c3565b612afd846129d8565b81016020851015612b0c578190505b612b20612b18856129d8565b830182612abf565b50505b505050565b600082821c905092915050565b6000612b4660001984600802612b28565b1980831691505092915050565b6000612b5f8383612b35565b9150826002028217905092915050565b612b78826120b9565b67ffffffffffffffff811115612b9157612b90611f18565b5b612b9b8254612992565b612ba6828285612ae2565b600060209050601f831160018114612bd95760008415612bc7578287015190505b612bd18582612b53565b865550612c39565b601f198416612be7866129c3565b60005b82811015612c0f57848901518255600182019150602085019450602081019050612bea565b86831015612c2c5784890151612c28601f891682612b35565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008154612c5981612992565b612c638186612c41565b94506001821660008114612c7e5760018114612c9357612cc6565b60ff1983168652811515820286019350612cc6565b612c9c856129c3565b60005b83811015612cbe57815481890152600182019150602081019050612c9f565b838801955050505b50505092915050565b6000612cda826120b9565b612ce48185612c41565b9350612cf48185602086016120d5565b80840191505092915050565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815250565b6000612d328285612c4c565b9150612d3e8284612ccf565b9150612d4982612d00565b6005820191508190509392505050565b6000604082019050612d6e6000830185612776565b612d7b6020830184612776565b9392505050565b6000604082019050612d976000830185611e18565b612da46020830184611e18565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612e1482611da2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612e4657612e45612dda565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000608082019050612e956000830187612776565b612ea26020830186611e18565b612eaf6040830185611e18565b612ebc6060830184611e18565b95945050505050565b6000612ed082611da2565b9150612edb83611da2565b9250828201905080821115612ef357612ef2612dda565b5b92915050565b60006040820190508181036000830152612f1381856125e8565b90508181036020830152612f2781846125e8565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000612f5782612f30565b612f618185612f3b565b9350612f718185602086016120d5565b612f7a81611f07565b840191505092915050565b600060a082019050612f9a6000830188612776565b612fa76020830187612776565b612fb46040830186611e18565b612fc16060830185611e18565b8181036080830152612fd38184612f4c565b90509695505050505050565b600081519050612fee81611e6e565b92915050565b60006020828403121561300a57613009611d3a565b5b600061301884828501612fdf565b91505092915050565b600060a0820190506130366000830188612776565b6130436020830187612776565b818103604083015261305581866125e8565b9050818103606083015261306981856125e8565b9050818103608083015261307d8184612f4c565b9050969550505050505056fea2646970667358221220cea2f80ae3c28625a116cddbfb17602916328a037bcd71a76ea0b43c117c150664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547CFB7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x325 JUMPI PUSH2 0x10A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x283 JUMPI PUSH2 0x10A JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x223 JUMPI PUSH2 0x10A JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x1E9A JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x208C JUMP JUMPDEST PUSH2 0x52B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x237E JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x814 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x27CC JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x284C JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0xA1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x2910 JUMP JUMPDEST PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x466 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x476 JUMPI POP PUSH2 0x475 DUP3 PUSH2 0xB50 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x485 PUSH2 0xBBA JUMP JUMPDEST DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST POP PUSH2 0x528 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4A5 SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x501 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xC41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH2 0x538 DUP4 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x549 SWAP3 SWAP2 SWAP1 PUSH2 0x2D26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x567 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x573 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI POP PUSH2 0x5C6 DUP7 DUP3 PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x60C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xDB0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x66D JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x664 SWAP3 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68A JUMPI PUSH2 0x689 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6B8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH2 0x6F5 PUSH2 0x6DD DUP3 DUP8 PUSH2 0xEA8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP8 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x71E SWAP1 PUSH2 0x2E09 JUMP JUMPDEST SWAP1 POP PUSH2 0x6BE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x738 PUSH2 0xDA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI POP PUSH2 0x77F DUP4 PUSH2 0x77A PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7CC JUMPI PUSH2 0x78E PUSH2 0xDA8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D7 DUP4 DUP4 DUP4 PUSH2 0xED0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x7EE PUSH1 0x0 PUSH2 0xF64 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0x804 DUP5 DUP5 DUP5 DUP5 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x80D DUP4 PUSH2 0x52B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x850 PUSH2 0x849 PUSH2 0xDA8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x861 SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88D SWAP1 PUSH2 0x2992 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI POP PUSH2 0x9C3 DUP7 DUP3 PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA09 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA00 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA16 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1233 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA26 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA98 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA1 DUP2 PUSH2 0xF64 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAAC PUSH2 0xDA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xAF5 JUMPI POP PUSH2 0xAF3 DUP4 PUSH2 0xAEE PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB40 JUMPI PUSH2 0xB02 PUSH2 0xDA8 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4B DUP4 DUP4 DUP4 PUSH2 0x133E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC2 PUSH2 0xDA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE0 PUSH2 0x814 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3F JUMPI PUSH2 0xC03 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xC50 SWAP2 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xC63 DUP5 PUSH2 0x13E5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC81 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCB4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xD17 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xCC2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA2 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE22 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE94 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8B SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF39 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5F DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1093 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10A9 DUP6 DUP6 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10BB PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1135 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1317 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1324 DUP6 DUP6 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1335 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13BD DUP5 DUP5 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x13DE DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1538 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1443 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1439 JUMPI PUSH2 0x1438 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1480 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1476 JUMPI PUSH2 0x1475 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14AF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x14D8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14CE JUMPI PUSH2 0x14CD PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x14FD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1520 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x2E51 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x152F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1544 DUP6 DUP6 DUP6 DUP6 PUSH2 0x161A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15E3 JUMPI PUSH1 0x0 PUSH2 0x1582 PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x15D2 JUMPI PUSH1 0x0 PUSH2 0x15A3 PUSH1 0x0 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15BB PUSH1 0x0 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x15CB DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x19C8 JUMP JUMPDEST POP POP PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x15E0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1B7C JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1664 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165B SWAP3 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x166E PUSH2 0xDA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 PUSH2 0x1691 DUP3 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16A8 DUP4 DUP7 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D5 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x177D JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1774 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1870 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1868 SWAP2 SWAP1 PUSH2 0x2EC5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x187C SWAP1 PUSH2 0x2E09 JUMP JUMPDEST SWAP1 POP PUSH2 0x1673 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1942 JUMPI PUSH1 0x0 PUSH2 0x18A3 PUSH1 0x0 DUP6 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18BB PUSH1 0x0 DUP6 PUSH2 0xEBC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1933 SWAP3 SWAP2 SWAP1 PUSH2 0x2D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x19C1 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x19B8 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1B74 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A29 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A65 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1AE9 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A95 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1AE1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1B72 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1D28 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3021 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C19 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C16 SWAP2 SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C9D JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1C95 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8C SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1D26 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1D SWAP2 SWAP1 PUSH2 0x2785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7F DUP2 PUSH2 0x1D64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D9C DUP2 PUSH2 0x1D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB5 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD2 DUP2 PUSH2 0x1DAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DEF JUMPI PUSH2 0x1DEE PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DFD DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E0E DUP6 DUP3 DUP7 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E21 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E77 DUP2 PUSH2 0x1E42 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E94 DUP2 PUSH2 0x1E6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EBE DUP5 DUP3 DUP6 ADD PUSH2 0x1E85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x1EC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F50 DUP3 PUSH2 0x1F07 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F6F JUMPI PUSH2 0x1F6E PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F82 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F8E DUP3 DUP3 PUSH2 0x1F47 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB7 DUP3 PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE6 PUSH2 0x1FE1 DUP5 PUSH2 0x1F93 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2002 JUMPI PUSH2 0x2001 PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x200D DUP5 DUP3 DUP6 PUSH2 0x1FC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x203A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FD3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2059 JUMPI PUSH2 0x2058 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2083 DUP5 DUP3 DUP6 ADD PUSH2 0x2015 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A2 JUMPI PUSH2 0x20A1 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B0 DUP5 DUP3 DUP6 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210A DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x2114 DUP2 DUP6 PUSH2 0x20C4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2124 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x212D DUP2 PUSH2 0x1F07 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2152 DUP2 DUP5 PUSH2 0x20FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x219E PUSH2 0x2199 DUP5 PUSH2 0x215A JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x21C1 JUMPI PUSH2 0x21C0 PUSH2 0x2186 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21EA JUMPI DUP1 PUSH2 0x21D6 DUP9 DUP3 PUSH2 0x1DC3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21C3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2209 JUMPI PUSH2 0x2208 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2219 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x218B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x223D JUMPI PUSH2 0x223C PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH2 0x2246 DUP3 PUSH2 0x1F07 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2266 PUSH2 0x2261 DUP5 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2282 JUMPI PUSH2 0x2281 PUSH2 0x1F02 JUMP JUMPDEST JUMPDEST PUSH2 0x228D DUP5 DUP3 DUP6 PUSH2 0x1FC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22AA JUMPI PUSH2 0x22A9 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x22DD JUMPI PUSH2 0x22DC PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22EB DUP8 DUP3 DUP9 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230C JUMPI PUSH2 0x230B PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2318 DUP8 DUP3 DUP9 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2339 JUMPI PUSH2 0x2338 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2345 DUP8 DUP3 DUP9 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2372 DUP8 DUP3 DUP9 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x239A JUMPI PUSH2 0x2399 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A8 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23B9 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23DA JUMPI PUSH2 0x23D9 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x23E6 DUP9 DUP3 DUP10 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2407 JUMPI PUSH2 0x2406 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2413 DUP9 DUP3 DUP10 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH2 0x2433 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2440 DUP9 DUP3 DUP10 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C PUSH2 0x2487 DUP5 PUSH2 0x244D JUMP JUMPDEST PUSH2 0x1F78 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x24AF JUMPI PUSH2 0x24AE PUSH2 0x2186 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24D8 JUMPI DUP1 PUSH2 0x24C4 DUP9 DUP3 PUSH2 0x1D8D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24B1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24F7 JUMPI PUSH2 0x24F6 PUSH2 0x1EFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2507 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2527 JUMPI PUSH2 0x2526 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x2551 DUP6 DUP3 DUP7 ADD PUSH2 0x24E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2572 JUMPI PUSH2 0x2571 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x257E DUP6 DUP3 DUP7 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25BD DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CF DUP4 DUP4 PUSH2 0x25B4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F3 DUP3 PUSH2 0x2588 JUMP JUMPDEST PUSH2 0x25FD DUP2 DUP6 PUSH2 0x2593 JUMP JUMPDEST SWAP4 POP PUSH2 0x2608 DUP4 PUSH2 0x25A4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2639 JUMPI DUP2 MLOAD PUSH2 0x2620 DUP9 DUP3 PUSH2 0x25C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x262B DUP4 PUSH2 0x25DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x260C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2660 DUP2 DUP5 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2681 JUMPI PUSH2 0x2680 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x268F DUP7 DUP3 DUP8 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B0 JUMPI PUSH2 0x26AF PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x26BC DUP7 DUP3 DUP8 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26DD JUMPI PUSH2 0x26DC PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x26E9 DUP7 DUP3 DUP8 ADD PUSH2 0x21F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x270D JUMPI PUSH2 0x270C PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x271B DUP8 DUP3 DUP9 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x272C DUP8 DUP3 DUP9 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x273D DUP8 DUP3 DUP9 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x275E JUMPI PUSH2 0x275D PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x276A DUP8 DUP3 DUP9 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x277F DUP2 PUSH2 0x1D64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x279A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27A9 DUP2 PUSH2 0x1EC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x27B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C6 DUP2 PUSH2 0x27A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E3 JUMPI PUSH2 0x27E2 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F1 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2802 DUP6 DUP3 DUP7 ADD PUSH2 0x27B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x2822 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2831 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2842 DUP6 DUP3 DUP7 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2868 JUMPI PUSH2 0x2867 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2876 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2887 DUP9 DUP3 DUP10 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2898 DUP9 DUP3 DUP10 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x28A9 DUP9 DUP3 DUP10 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28CA JUMPI PUSH2 0x28C9 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x28D6 DUP9 DUP3 DUP10 ADD PUSH2 0x2295 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F9 JUMPI PUSH2 0x28F8 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2907 DUP5 DUP3 DUP6 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2929 JUMPI PUSH2 0x2928 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2937 DUP7 DUP3 DUP8 ADD PUSH2 0x1D8D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2948 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2959 DUP7 DUP3 DUP8 ADD PUSH2 0x1DC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29BD JUMPI PUSH2 0x29BC PUSH2 0x2963 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2A25 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29E8 JUMP JUMPDEST PUSH2 0x2A2F DUP7 DUP4 PUSH2 0x29E8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6C PUSH2 0x2A67 PUSH2 0x2A62 DUP5 PUSH2 0x1DA2 JUMP JUMPDEST PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A86 DUP4 PUSH2 0x2A51 JUMP JUMPDEST PUSH2 0x2A9A PUSH2 0x2A92 DUP3 PUSH2 0x2A73 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x29F5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2AAF PUSH2 0x2AA2 JUMP JUMPDEST PUSH2 0x2ABA DUP2 DUP5 DUP5 PUSH2 0x2A7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2ADE JUMPI PUSH2 0x2AD3 PUSH1 0x0 DUP3 PUSH2 0x2AA7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2AC0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B23 JUMPI PUSH2 0x2AF4 DUP2 PUSH2 0x29C3 JUMP JUMPDEST PUSH2 0x2AFD DUP5 PUSH2 0x29D8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B0C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2B20 PUSH2 0x2B18 DUP6 PUSH2 0x29D8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2ABF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B46 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B28 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5F DUP4 DUP4 PUSH2 0x2B35 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B78 DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B91 JUMPI PUSH2 0x2B90 PUSH2 0x1F18 JUMP JUMPDEST JUMPDEST PUSH2 0x2B9B DUP3 SLOAD PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2BA6 DUP3 DUP3 DUP6 PUSH2 0x2AE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2BD9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2BC7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2BD1 DUP6 DUP3 PUSH2 0x2B53 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2BE7 DUP7 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C0F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BEA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2C2C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2C28 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2B35 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2C59 DUP2 PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2C63 DUP2 DUP7 PUSH2 0x2C41 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2C7E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2C93 JUMPI PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2CC6 JUMP JUMPDEST PUSH2 0x2C9C DUP6 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2CBE JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C9F JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDA DUP3 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x2CE4 DUP2 DUP6 PUSH2 0x2C41 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CF4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E6A736F6E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D32 DUP3 DUP6 PUSH2 0x2C4C JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3E DUP3 DUP5 PUSH2 0x2CCF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D49 DUP3 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D6E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2D7B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2776 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E18 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E14 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2E46 JUMPI PUSH2 0x2E45 PUSH2 0x2DDA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E95 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2EA2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2EBC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E18 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED0 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDB DUP4 PUSH2 0x1DA2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EF3 JUMPI PUSH2 0x2EF2 PUSH2 0x2DDA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F13 DUP2 DUP6 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2F27 DUP2 DUP5 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F57 DUP3 PUSH2 0x2F30 JUMP JUMPDEST PUSH2 0x2F61 DUP2 DUP6 PUSH2 0x2F3B JUMP JUMPDEST SWAP4 POP PUSH2 0x2F71 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20D5 JUMP JUMPDEST PUSH2 0x2F7A DUP2 PUSH2 0x1F07 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2F9A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2FA7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x2FB4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x2FC1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E18 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2FD3 DUP2 DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FEE DUP2 PUSH2 0x1E6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x300A JUMPI PUSH2 0x3009 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3018 DUP5 DUP3 DUP6 ADD PUSH2 0x2FDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3036 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x3043 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2776 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3055 DUP2 DUP7 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3069 DUP2 DUP6 PUSH2 0x25E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x307D DUP2 DUP5 PUSH2 0x2F4C JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE LOG2 0xF8 EXP 0xE3 0xC2 DUP7 0x25 LOG1 AND 0xCD 0xDB 0xFB OR PUSH1 0x29 AND ORIGIN DUP11 SUB PUSH28 0xCD71A76EA0B43C117C150664736F6C63430008140033000000000000 ","sourceMap":"399:799:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:125:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;685:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1028:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4014:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;857:163:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;465:26:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3367:157:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;554:125:16:-;1531:13:0;:11;:13::i;:::-;633:6:16::1;620:12;:19;;;;;;:::i;:::-;;650:21;658:12;650:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:21::i;:::-;554:125:::0;:::o;685:164::-;741:13;798:12;811:21;828:3;811:16;:21::i;:::-;784:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;777:64;;685:164;;;:::o;1028:167::-;1531:13:0;:11;:13::i;:::-;1153:34:16::1;1164:2;1168:3;1173:7;1182:4;1153:10;:34::i;:::-;1028:167:::0;;;;:::o;4014:429:2:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;681:313:5:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;857:163:16:-;1531:13:0;:11;:13::i;:::-;962:32:16::1;968:7;977:2;981:6;989:4;962:5;:32::i;:::-;1005:7;1009:2;1005:3;:7::i;:::-;;857:163:::0;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;465:26:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3367:157:2:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;394:281:5:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;762:146:12:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10282:86:2:-;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;637:698:11:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;11523:282:2:-;11658:1;11644:16;;:2;:16;;;11640:88;;11714:1;11683:34;;;;;;;;;;;:::i;:::-;;;;;;;;11640:88;11737:61;11772:1;11776:2;11780:3;11785:6;11793:4;11737:26;:61::i;:::-;11523:282;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:8:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;12784:265:2:-;12904:1;12888:18;;:4;:18;;;12884:88;;12958:1;12929:32;;;;;;;;;;;:::i;:::-;;;;;;;;12884:88;12981:61;13008:4;13022:1;13026:3;13031:6;12981:61;;;;;;;;;;;;:26;:61::i;:::-;12784:265;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;13268:315::-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;12099:329::-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;12214:916:14:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7004:690:2:-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:146::-;4586:6;4581:3;4576;4563:30;4627:1;4618:6;4613:3;4609:16;4602:27;4489:146;;;:::o;4641:425::-;4719:5;4744:66;4760:49;4802:6;4760:49;:::i;:::-;4744:66;:::i;:::-;4735:75;;4833:6;4826:5;4819:21;4871:4;4864:5;4860:16;4909:3;4900:6;4895:3;4891:16;4888:25;4885:112;;;4916:79;;:::i;:::-;4885:112;5006:54;5053:6;5048:3;5043;5006:54;:::i;:::-;4725:341;4641:425;;;;;:::o;5086:340::-;5142:5;5191:3;5184:4;5176:6;5172:17;5168:27;5158:122;;5199:79;;:::i;:::-;5158:122;5316:6;5303:20;5341:79;5416:3;5408:6;5401:4;5393:6;5389:17;5341:79;:::i;:::-;5332:88;;5148:278;5086:340;;;;:::o;5432:509::-;5501:6;5550:2;5538:9;5529:7;5525:23;5521:32;5518:119;;;5556:79;;:::i;:::-;5518:119;5704:1;5693:9;5689:17;5676:31;5734:18;5726:6;5723:30;5720:117;;;5756:79;;:::i;:::-;5720:117;5861:63;5916:7;5907:6;5896:9;5892:22;5861:63;:::i;:::-;5851:73;;5647:287;5432:509;;;;:::o;5947:329::-;6006:6;6055:2;6043:9;6034:7;6030:23;6026:32;6023:119;;;6061:79;;:::i;:::-;6023:119;6181:1;6206:53;6251:7;6242:6;6231:9;6227:22;6206:53;:::i;:::-;6196:63;;6152:117;5947:329;;;;:::o;6282:99::-;6334:6;6368:5;6362:12;6352:22;;6282:99;;;:::o;6387:169::-;6471:11;6505:6;6500:3;6493:19;6545:4;6540:3;6536:14;6521:29;;6387:169;;;;:::o;6562:246::-;6643:1;6653:113;6667:6;6664:1;6661:13;6653:113;;;6752:1;6747:3;6743:11;6737:18;6733:1;6728:3;6724:11;6717:39;6689:2;6686:1;6682:10;6677:15;;6653:113;;;6800:1;6791:6;6786:3;6782:16;6775:27;6624:184;6562:246;;;:::o;6814:377::-;6902:3;6930:39;6963:5;6930:39;:::i;:::-;6985:71;7049:6;7044:3;6985:71;:::i;:::-;6978:78;;7065:65;7123:6;7118:3;7111:4;7104:5;7100:16;7065:65;:::i;:::-;7155:29;7177:6;7155:29;:::i;:::-;7150:3;7146:39;7139:46;;6906:285;6814:377;;;;:::o;7197:313::-;7310:4;7348:2;7337:9;7333:18;7325:26;;7397:9;7391:4;7387:20;7383:1;7372:9;7368:17;7361:47;7425:78;7498:4;7489:6;7425:78;:::i;:::-;7417:86;;7197:313;;;;:::o;7516:311::-;7593:4;7683:18;7675:6;7672:30;7669:56;;;7705:18;;:::i;:::-;7669:56;7755:4;7747:6;7743:17;7735:25;;7815:4;7809;7805:15;7797:23;;7516:311;;;:::o;7833:117::-;7942:1;7939;7932:12;7973:710;8069:5;8094:81;8110:64;8167:6;8110:64;:::i;:::-;8094:81;:::i;:::-;8085:90;;8195:5;8224:6;8217:5;8210:21;8258:4;8251:5;8247:16;8240:23;;8311:4;8303:6;8299:17;8291:6;8287:30;8340:3;8332:6;8329:15;8326:122;;;8359:79;;:::i;:::-;8326:122;8474:6;8457:220;8491:6;8486:3;8483:15;8457:220;;;8566:3;8595:37;8628:3;8616:10;8595:37;:::i;:::-;8590:3;8583:50;8662:4;8657:3;8653:14;8646:21;;8533:144;8517:4;8512:3;8508:14;8501:21;;8457:220;;;8461:21;8075:608;;7973:710;;;;;:::o;8706:370::-;8777:5;8826:3;8819:4;8811:6;8807:17;8803:27;8793:122;;8834:79;;:::i;:::-;8793:122;8951:6;8938:20;8976:94;9066:3;9058:6;9051:4;9043:6;9039:17;8976:94;:::i;:::-;8967:103;;8783:293;8706:370;;;;:::o;9082:307::-;9143:4;9233:18;9225:6;9222:30;9219:56;;;9255:18;;:::i;:::-;9219:56;9293:29;9315:6;9293:29;:::i;:::-;9285:37;;9377:4;9371;9367:15;9359:23;;9082:307;;;:::o;9395:423::-;9472:5;9497:65;9513:48;9554:6;9513:48;:::i;:::-;9497:65;:::i;:::-;9488:74;;9585:6;9578:5;9571:21;9623:4;9616:5;9612:16;9661:3;9652:6;9647:3;9643:16;9640:25;9637:112;;;9668:79;;:::i;:::-;9637:112;9758:54;9805:6;9800:3;9795;9758:54;:::i;:::-;9478:340;9395:423;;;;;:::o;9837:338::-;9892:5;9941:3;9934:4;9926:6;9922:17;9918:27;9908:122;;9949:79;;:::i;:::-;9908:122;10066:6;10053:20;10091:78;10165:3;10157:6;10150:4;10142:6;10138:17;10091:78;:::i;:::-;10082:87;;9898:277;9837:338;;;;:::o;10181:1363::-;10326:6;10334;10342;10350;10399:3;10387:9;10378:7;10374:23;10370:33;10367:120;;;10406:79;;:::i;:::-;10367:120;10526:1;10551:53;10596:7;10587:6;10576:9;10572:22;10551:53;:::i;:::-;10541:63;;10497:117;10681:2;10670:9;10666:18;10653:32;10712:18;10704:6;10701:30;10698:117;;;10734:79;;:::i;:::-;10698:117;10839:78;10909:7;10900:6;10889:9;10885:22;10839:78;:::i;:::-;10829:88;;10624:303;10994:2;10983:9;10979:18;10966:32;11025:18;11017:6;11014:30;11011:117;;;11047:79;;:::i;:::-;11011:117;11152:78;11222:7;11213:6;11202:9;11198:22;11152:78;:::i;:::-;11142:88;;10937:303;11307:2;11296:9;11292:18;11279:32;11338:18;11330:6;11327:30;11324:117;;;11360:79;;:::i;:::-;11324:117;11465:62;11519:7;11510:6;11499:9;11495:22;11465:62;:::i;:::-;11455:72;;11250:287;10181:1363;;;;;;;:::o;11550:1509::-;11704:6;11712;11720;11728;11736;11785:3;11773:9;11764:7;11760:23;11756:33;11753:120;;;11792:79;;:::i;:::-;11753:120;11912:1;11937:53;11982:7;11973:6;11962:9;11958:22;11937:53;:::i;:::-;11927:63;;11883:117;12039:2;12065:53;12110:7;12101:6;12090:9;12086:22;12065:53;:::i;:::-;12055:63;;12010:118;12195:2;12184:9;12180:18;12167:32;12226:18;12218:6;12215:30;12212:117;;;12248:79;;:::i;:::-;12212:117;12353:78;12423:7;12414:6;12403:9;12399:22;12353:78;:::i;:::-;12343:88;;12138:303;12508:2;12497:9;12493:18;12480:32;12539:18;12531:6;12528:30;12525:117;;;12561:79;;:::i;:::-;12525:117;12666:78;12736:7;12727:6;12716:9;12712:22;12666:78;:::i;:::-;12656:88;;12451:303;12821:3;12810:9;12806:19;12793:33;12853:18;12845:6;12842:30;12839:117;;;12875:79;;:::i;:::-;12839:117;12980:62;13034:7;13025:6;13014:9;13010:22;12980:62;:::i;:::-;12970:72;;12764:288;11550:1509;;;;;;;;:::o;13065:311::-;13142:4;13232:18;13224:6;13221:30;13218:56;;;13254:18;;:::i;:::-;13218:56;13304:4;13296:6;13292:17;13284:25;;13364:4;13358;13354:15;13346:23;;13065:311;;;:::o;13399:710::-;13495:5;13520:81;13536:64;13593:6;13536:64;:::i;:::-;13520:81;:::i;:::-;13511:90;;13621:5;13650:6;13643:5;13636:21;13684:4;13677:5;13673:16;13666:23;;13737:4;13729:6;13725:17;13717:6;13713:30;13766:3;13758:6;13755:15;13752:122;;;13785:79;;:::i;:::-;13752:122;13900:6;13883:220;13917:6;13912:3;13909:15;13883:220;;;13992:3;14021:37;14054:3;14042:10;14021:37;:::i;:::-;14016:3;14009:50;14088:4;14083:3;14079:14;14072:21;;13959:144;13943:4;13938:3;13934:14;13927:21;;13883:220;;;13887:21;13501:608;;13399:710;;;;;:::o;14132:370::-;14203:5;14252:3;14245:4;14237:6;14233:17;14229:27;14219:122;;14260:79;;:::i;:::-;14219:122;14377:6;14364:20;14402:94;14492:3;14484:6;14477:4;14469:6;14465:17;14402:94;:::i;:::-;14393:103;;14209:293;14132:370;;;;:::o;14508:894::-;14626:6;14634;14683:2;14671:9;14662:7;14658:23;14654:32;14651:119;;;14689:79;;:::i;:::-;14651:119;14837:1;14826:9;14822:17;14809:31;14867:18;14859:6;14856:30;14853:117;;;14889:79;;:::i;:::-;14853:117;14994:78;15064:7;15055:6;15044:9;15040:22;14994:78;:::i;:::-;14984:88;;14780:302;15149:2;15138:9;15134:18;15121:32;15180:18;15172:6;15169:30;15166:117;;;15202:79;;:::i;:::-;15166:117;15307:78;15377:7;15368:6;15357:9;15353:22;15307:78;:::i;:::-;15297:88;;15092:303;14508:894;;;;;:::o;15408:114::-;15475:6;15509:5;15503:12;15493:22;;15408:114;;;:::o;15528:184::-;15627:11;15661:6;15656:3;15649:19;15701:4;15696:3;15692:14;15677:29;;15528:184;;;;:::o;15718:132::-;15785:4;15808:3;15800:11;;15838:4;15833:3;15829:14;15821:22;;15718:132;;;:::o;15856:108::-;15933:24;15951:5;15933:24;:::i;:::-;15928:3;15921:37;15856:108;;:::o;15970:179::-;16039:10;16060:46;16102:3;16094:6;16060:46;:::i;:::-;16138:4;16133:3;16129:14;16115:28;;15970:179;;;;:::o;16155:113::-;16225:4;16257;16252:3;16248:14;16240:22;;16155:113;;;:::o;16304:732::-;16423:3;16452:54;16500:5;16452:54;:::i;:::-;16522:86;16601:6;16596:3;16522:86;:::i;:::-;16515:93;;16632:56;16682:5;16632:56;:::i;:::-;16711:7;16742:1;16727:284;16752:6;16749:1;16746:13;16727:284;;;16828:6;16822:13;16855:63;16914:3;16899:13;16855:63;:::i;:::-;16848:70;;16941:60;16994:6;16941:60;:::i;:::-;16931:70;;16787:224;16774:1;16771;16767:9;16762:14;;16727:284;;;16731:14;17027:3;17020:10;;16428:608;;;16304:732;;;;:::o;17042:373::-;17185:4;17223:2;17212:9;17208:18;17200:26;;17272:9;17266:4;17262:20;17258:1;17247:9;17243:17;17236:47;17300:108;17403:4;17394:6;17300:108;:::i;:::-;17292:116;;17042:373;;;;:::o;17421:1039::-;17548:6;17556;17564;17613:2;17601:9;17592:7;17588:23;17584:32;17581:119;;;17619:79;;:::i;:::-;17581:119;17739:1;17764:53;17809:7;17800:6;17789:9;17785:22;17764:53;:::i;:::-;17754:63;;17710:117;17894:2;17883:9;17879:18;17866:32;17925:18;17917:6;17914:30;17911:117;;;17947:79;;:::i;:::-;17911:117;18052:78;18122:7;18113:6;18102:9;18098:22;18052:78;:::i;:::-;18042:88;;17837:303;18207:2;18196:9;18192:18;18179:32;18238:18;18230:6;18227:30;18224:117;;;18260:79;;:::i;:::-;18224:117;18365:78;18435:7;18426:6;18415:9;18411:22;18365:78;:::i;:::-;18355:88;;18150:303;17421:1039;;;;;:::o;18466:943::-;18561:6;18569;18577;18585;18634:3;18622:9;18613:7;18609:23;18605:33;18602:120;;;18641:79;;:::i;:::-;18602:120;18761:1;18786:53;18831:7;18822:6;18811:9;18807:22;18786:53;:::i;:::-;18776:63;;18732:117;18888:2;18914:53;18959:7;18950:6;18939:9;18935:22;18914:53;:::i;:::-;18904:63;;18859:118;19016:2;19042:53;19087:7;19078:6;19067:9;19063:22;19042:53;:::i;:::-;19032:63;;18987:118;19172:2;19161:9;19157:18;19144:32;19203:18;19195:6;19192:30;19189:117;;;19225:79;;:::i;:::-;19189:117;19330:62;19384:7;19375:6;19364:9;19360:22;19330:62;:::i;:::-;19320:72;;19115:287;18466:943;;;;;;;:::o;19415:118::-;19502:24;19520:5;19502:24;:::i;:::-;19497:3;19490:37;19415:118;;:::o;19539:222::-;19632:4;19670:2;19659:9;19655:18;19647:26;;19683:71;19751:1;19740:9;19736:17;19727:6;19683:71;:::i;:::-;19539:222;;;;:::o;19767:116::-;19837:21;19852:5;19837:21;:::i;:::-;19830:5;19827:32;19817:60;;19873:1;19870;19863:12;19817:60;19767:116;:::o;19889:133::-;19932:5;19970:6;19957:20;19948:29;;19986:30;20010:5;19986:30;:::i;:::-;19889:133;;;;:::o;20028:468::-;20093:6;20101;20150:2;20138:9;20129:7;20125:23;20121:32;20118:119;;;20156:79;;:::i;:::-;20118:119;20276:1;20301:53;20346:7;20337:6;20326:9;20322:22;20301:53;:::i;:::-;20291:63;;20247:117;20403:2;20429:50;20471:7;20462:6;20451:9;20447:22;20429:50;:::i;:::-;20419:60;;20374:115;20028:468;;;;;:::o;20502:474::-;20570:6;20578;20627:2;20615:9;20606:7;20602:23;20598:32;20595:119;;;20633:79;;:::i;:::-;20595:119;20753:1;20778:53;20823:7;20814:6;20803:9;20799:22;20778:53;:::i;:::-;20768:63;;20724:117;20880:2;20906:53;20951:7;20942:6;20931:9;20927:22;20906:53;:::i;:::-;20896:63;;20851:118;20502:474;;;;;:::o;20982:1089::-;21086:6;21094;21102;21110;21118;21167:3;21155:9;21146:7;21142:23;21138:33;21135:120;;;21174:79;;:::i;:::-;21135:120;21294:1;21319:53;21364:7;21355:6;21344:9;21340:22;21319:53;:::i;:::-;21309:63;;21265:117;21421:2;21447:53;21492:7;21483:6;21472:9;21468:22;21447:53;:::i;:::-;21437:63;;21392:118;21549:2;21575:53;21620:7;21611:6;21600:9;21596:22;21575:53;:::i;:::-;21565:63;;21520:118;21677:2;21703:53;21748:7;21739:6;21728:9;21724:22;21703:53;:::i;:::-;21693:63;;21648:118;21833:3;21822:9;21818:19;21805:33;21865:18;21857:6;21854:30;21851:117;;;21887:79;;:::i;:::-;21851:117;21992:62;22046:7;22037:6;22026:9;22022:22;21992:62;:::i;:::-;21982:72;;21776:288;20982:1089;;;;;;;;:::o;22077:329::-;22136:6;22185:2;22173:9;22164:7;22160:23;22156:32;22153:119;;;22191:79;;:::i;:::-;22153:119;22311:1;22336:53;22381:7;22372:6;22361:9;22357:22;22336:53;:::i;:::-;22326:63;;22282:117;22077:329;;;;:::o;22412:619::-;22489:6;22497;22505;22554:2;22542:9;22533:7;22529:23;22525:32;22522:119;;;22560:79;;:::i;:::-;22522:119;22680:1;22705:53;22750:7;22741:6;22730:9;22726:22;22705:53;:::i;:::-;22695:63;;22651:117;22807:2;22833:53;22878:7;22869:6;22858:9;22854:22;22833:53;:::i;:::-;22823:63;;22778:118;22935:2;22961:53;23006:7;22997:6;22986:9;22982:22;22961:53;:::i;:::-;22951:63;;22906:118;22412:619;;;;;:::o;23037:180::-;23085:77;23082:1;23075:88;23182:4;23179:1;23172:15;23206:4;23203:1;23196:15;23223:320;23267:6;23304:1;23298:4;23294:12;23284:22;;23351:1;23345:4;23341:12;23372:18;23362:81;;23428:4;23420:6;23416:17;23406:27;;23362:81;23490:2;23482:6;23479:14;23459:18;23456:38;23453:84;;23509:18;;:::i;:::-;23453:84;23274:269;23223:320;;;:::o;23549:141::-;23598:4;23621:3;23613:11;;23644:3;23641:1;23634:14;23678:4;23675:1;23665:18;23657:26;;23549:141;;;:::o;23696:93::-;23733:6;23780:2;23775;23768:5;23764:14;23760:23;23750:33;;23696:93;;;:::o;23795:107::-;23839:8;23889:5;23883:4;23879:16;23858:37;;23795:107;;;;:::o;23908:393::-;23977:6;24027:1;24015:10;24011:18;24050:97;24080:66;24069:9;24050:97;:::i;:::-;24168:39;24198:8;24187:9;24168:39;:::i;:::-;24156:51;;24240:4;24236:9;24229:5;24225:21;24216:30;;24289:4;24279:8;24275:19;24268:5;24265:30;24255:40;;23984:317;;23908:393;;;;;:::o;24307:60::-;24335:3;24356:5;24349:12;;24307:60;;;:::o;24373:142::-;24423:9;24456:53;24474:34;24483:24;24501:5;24483:24;:::i;:::-;24474:34;:::i;:::-;24456:53;:::i;:::-;24443:66;;24373:142;;;:::o;24521:75::-;24564:3;24585:5;24578:12;;24521:75;;;:::o;24602:269::-;24712:39;24743:7;24712:39;:::i;:::-;24773:91;24822:41;24846:16;24822:41;:::i;:::-;24814:6;24807:4;24801:11;24773:91;:::i;:::-;24767:4;24760:105;24678:193;24602:269;;;:::o;24877:73::-;24922:3;24877:73;:::o;24956:189::-;25033:32;;:::i;:::-;25074:65;25132:6;25124;25118:4;25074:65;:::i;:::-;25009:136;24956:189;;:::o;25151:186::-;25211:120;25228:3;25221:5;25218:14;25211:120;;;25282:39;25319:1;25312:5;25282:39;:::i;:::-;25255:1;25248:5;25244:13;25235:22;;25211:120;;;25151:186;;:::o;25343:543::-;25444:2;25439:3;25436:11;25433:446;;;25478:38;25510:5;25478:38;:::i;:::-;25562:29;25580:10;25562:29;:::i;:::-;25552:8;25548:44;25745:2;25733:10;25730:18;25727:49;;;25766:8;25751:23;;25727:49;25789:80;25845:22;25863:3;25845:22;:::i;:::-;25835:8;25831:37;25818:11;25789:80;:::i;:::-;25448:431;;25433:446;25343:543;;;:::o;25892:117::-;25946:8;25996:5;25990:4;25986:16;25965:37;;25892:117;;;;:::o;26015:169::-;26059:6;26092:51;26140:1;26136:6;26128:5;26125:1;26121:13;26092:51;:::i;:::-;26088:56;26173:4;26167;26163:15;26153:25;;26066:118;26015:169;;;;:::o;26189:295::-;26265:4;26411:29;26436:3;26430:4;26411:29;:::i;:::-;26403:37;;26473:3;26470:1;26466:11;26460:4;26457:21;26449:29;;26189:295;;;;:::o;26489:1395::-;26606:37;26639:3;26606:37;:::i;:::-;26708:18;26700:6;26697:30;26694:56;;;26730:18;;:::i;:::-;26694:56;26774:38;26806:4;26800:11;26774:38;:::i;:::-;26859:67;26919:6;26911;26905:4;26859:67;:::i;:::-;26953:1;26977:4;26964:17;;27009:2;27001:6;26998:14;27026:1;27021:618;;;;27683:1;27700:6;27697:77;;;27749:9;27744:3;27740:19;27734:26;27725:35;;27697:77;27800:67;27860:6;27853:5;27800:67;:::i;:::-;27794:4;27787:81;27656:222;26991:887;;27021:618;27073:4;27069:9;27061:6;27057:22;27107:37;27139:4;27107:37;:::i;:::-;27166:1;27180:208;27194:7;27191:1;27188:14;27180:208;;;27273:9;27268:3;27264:19;27258:26;27250:6;27243:42;27324:1;27316:6;27312:14;27302:24;;27371:2;27360:9;27356:18;27343:31;;27217:4;27214:1;27210:12;27205:17;;27180:208;;;27416:6;27407:7;27404:19;27401:179;;;27474:9;27469:3;27465:19;27459:26;27517:48;27559:4;27551:6;27547:17;27536:9;27517:48;:::i;:::-;27509:6;27502:64;27424:156;27401:179;27626:1;27622;27614:6;27610:14;27606:22;27600:4;27593:36;27028:611;;;26991:887;;26581:1303;;;26489:1395;;:::o;27890:148::-;27992:11;28029:3;28014:18;;27890:148;;;;:::o;28068:874::-;28171:3;28208:5;28202:12;28237:36;28263:9;28237:36;:::i;:::-;28289:89;28371:6;28366:3;28289:89;:::i;:::-;28282:96;;28409:1;28398:9;28394:17;28425:1;28420:166;;;;28600:1;28595:341;;;;28387:549;;28420:166;28504:4;28500:9;28489;28485:25;28480:3;28473:38;28566:6;28559:14;28552:22;28544:6;28540:35;28535:3;28531:45;28524:52;;28420:166;;28595:341;28662:38;28694:5;28662:38;:::i;:::-;28722:1;28736:154;28750:6;28747:1;28744:13;28736:154;;;28824:7;28818:14;28814:1;28809:3;28805:11;28798:35;28874:1;28865:7;28861:15;28850:26;;28772:4;28769:1;28765:12;28760:17;;28736:154;;;28919:6;28914:3;28910:16;28903:23;;28602:334;;28387:549;;28175:767;;28068:874;;;;:::o;28948:390::-;29054:3;29082:39;29115:5;29082:39;:::i;:::-;29137:89;29219:6;29214:3;29137:89;:::i;:::-;29130:96;;29235:65;29293:6;29288:3;29281:4;29274:5;29270:16;29235:65;:::i;:::-;29325:6;29320:3;29316:16;29309:23;;29058:280;28948:390;;;;:::o;29344:182::-;29512:7;29507:3;29500:20;29344:182;:::o;29532:693::-;29799:3;29821:92;29909:3;29900:6;29821:92;:::i;:::-;29814:99;;29930:95;30021:3;30012:6;29930:95;:::i;:::-;29923:102;;30035:137;30168:3;30035:137;:::i;:::-;30197:1;30192:3;30188:11;30181:18;;30216:3;30209:10;;29532:693;;;;;:::o;30231:332::-;30352:4;30390:2;30379:9;30375:18;30367:26;;30403:71;30471:1;30460:9;30456:17;30447:6;30403:71;:::i;:::-;30484:72;30552:2;30541:9;30537:18;30528:6;30484:72;:::i;:::-;30231:332;;;;;:::o;30569:::-;30690:4;30728:2;30717:9;30713:18;30705:26;;30741:71;30809:1;30798:9;30794:17;30785:6;30741:71;:::i;:::-;30822:72;30890:2;30879:9;30875:18;30866:6;30822:72;:::i;:::-;30569:332;;;;;:::o;30907:180::-;30955:77;30952:1;30945:88;31052:4;31049:1;31042:15;31076:4;31073:1;31066:15;31093:180;31141:77;31138:1;31131:88;31238:4;31235:1;31228:15;31262:4;31259:1;31252:15;31279:233;31318:3;31341:24;31359:5;31341:24;:::i;:::-;31332:33;;31387:66;31380:5;31377:77;31374:103;;31457:18;;:::i;:::-;31374:103;31504:1;31497:5;31493:13;31486:20;;31279:233;;;:::o;31518:180::-;31566:77;31563:1;31556:88;31663:4;31660:1;31653:15;31687:4;31684:1;31677:15;31704:553;31881:4;31919:3;31908:9;31904:19;31896:27;;31933:71;32001:1;31990:9;31986:17;31977:6;31933:71;:::i;:::-;32014:72;32082:2;32071:9;32067:18;32058:6;32014:72;:::i;:::-;32096;32164:2;32153:9;32149:18;32140:6;32096:72;:::i;:::-;32178;32246:2;32235:9;32231:18;32222:6;32178:72;:::i;:::-;31704:553;;;;;;;:::o;32263:191::-;32303:3;32322:20;32340:1;32322:20;:::i;:::-;32317:25;;32356:20;32374:1;32356:20;:::i;:::-;32351:25;;32399:1;32396;32392:9;32385:16;;32420:3;32417:1;32414:10;32411:36;;;32427:18;;:::i;:::-;32411:36;32263:191;;;;:::o;32460:634::-;32681:4;32719:2;32708:9;32704:18;32696:26;;32768:9;32762:4;32758:20;32754:1;32743:9;32739:17;32732:47;32796:108;32899:4;32890:6;32796:108;:::i;:::-;32788:116;;32951:9;32945:4;32941:20;32936:2;32925:9;32921:18;32914:48;32979:108;33082:4;33073:6;32979:108;:::i;:::-;32971:116;;32460:634;;;;;:::o;33100:98::-;33151:6;33185:5;33179:12;33169:22;;33100:98;;;:::o;33204:168::-;33287:11;33321:6;33316:3;33309:19;33361:4;33356:3;33352:14;33337:29;;33204:168;;;;:::o;33378:373::-;33464:3;33492:38;33524:5;33492:38;:::i;:::-;33546:70;33609:6;33604:3;33546:70;:::i;:::-;33539:77;;33625:65;33683:6;33678:3;33671:4;33664:5;33660:16;33625:65;:::i;:::-;33715:29;33737:6;33715:29;:::i;:::-;33710:3;33706:39;33699:46;;33468:283;33378:373;;;;:::o;33757:751::-;33980:4;34018:3;34007:9;34003:19;33995:27;;34032:71;34100:1;34089:9;34085:17;34076:6;34032:71;:::i;:::-;34113:72;34181:2;34170:9;34166:18;34157:6;34113:72;:::i;:::-;34195;34263:2;34252:9;34248:18;34239:6;34195:72;:::i;:::-;34277;34345:2;34334:9;34330:18;34321:6;34277:72;:::i;:::-;34397:9;34391:4;34387:20;34381:3;34370:9;34366:19;34359:49;34425:76;34496:4;34487:6;34425:76;:::i;:::-;34417:84;;33757:751;;;;;;;;:::o;34514:141::-;34570:5;34601:6;34595:13;34586:22;;34617:32;34643:5;34617:32;:::i;:::-;34514:141;;;;:::o;34661:349::-;34730:6;34779:2;34767:9;34758:7;34754:23;34750:32;34747:119;;;34785:79;;:::i;:::-;34747:119;34905:1;34930:63;34985:7;34976:6;34965:9;34961:22;34930:63;:::i;:::-;34920:73;;34876:127;34661:349;;;;:::o;35016:1053::-;35339:4;35377:3;35366:9;35362:19;35354:27;;35391:71;35459:1;35448:9;35444:17;35435:6;35391:71;:::i;:::-;35472:72;35540:2;35529:9;35525:18;35516:6;35472:72;:::i;:::-;35591:9;35585:4;35581:20;35576:2;35565:9;35561:18;35554:48;35619:108;35722:4;35713:6;35619:108;:::i;:::-;35611:116;;35774:9;35768:4;35764:20;35759:2;35748:9;35744:18;35737:48;35802:108;35905:4;35896:6;35802:108;:::i;:::-;35794:116;;35958:9;35952:4;35948:20;35942:3;35931:9;35927:19;35920:49;35986:76;36057:4;36048:6;35986:76;:::i;:::-;35978:84;;35016:1053;;;;;;;;:::o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","baseTokenURI()":"d547cfb7","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155Token.sol\":\"ERC1155Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol\":{\"keccak256\":\"0xb4eb1c685e07054beaab5d980a18dec0ea59470154fa1ef847f8cfb6ddc1f543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cea55f4390e3c35e08616bb3c4932ab54157eb60e3939798860b26bdd62fac0\",\"dweb:/ipfs/QmWTMWhGVPnaGhwExT8618GSqm2gejaf8yanp9fjsd8oQS\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/ERC1155Token.sol\":{\"keccak256\":\"0xc84b8998da9ea019114be8afb2c24221f9df12ca7bca0b854cb7c8a9433c693e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ead6311319b9140b0018721b630472496117ab73dec1b20b5022c88d79cef5f2\",\"dweb:/ipfs/QmU8d2M3nqPa5LymCjvSUvCWyB3nwf1CkvzjZYnRWjoxcx\"]}},\"version\":1}"}}}}}